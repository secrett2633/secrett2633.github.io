3:I[9275,[],""]
5:I[1343,[],""]
6:I[4281,["231","static/chunks/231-c4b666723e6aae68.js","185","static/chunks/app/layout-8808afda01b7a1b7.js"],"default"]
7:I[231,["231","static/chunks/231-c4b666723e6aae68.js","877","static/chunks/app/%5B...slug%5D/page-01b66e77b48ed573.js"],""]
4:["slug","python/pep/281","c"]
0:["iV6XySbMHIJ3imQdvgy3I",[[["",{"children":[["slug","python/pep/281","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"281\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/281","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon-16x16.png"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_9012cf layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/secrett2633.github.io/_next/static/css/b9d6ec750ad82add.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1a3e,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0281/">PEP 281 - Loop Counter Iteration with range and xrange</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 11-Feb-2002</p>
</blockquote>
<h2>PEP 281 – <code>range</code> 및 <code>xrange</code>를 이용한 루프 카운터 반복 (Loop Counter Iteration with range and xrange)</h2>
<p><strong>작성자:</strong> Magnus Lie Hetland 
<strong>상태:</strong> Rejected (거부됨)
<strong>유형:</strong> Standards Track
<strong>생성일:</strong> 2002년 2월 11일
<strong>Python 버전:</strong> 2.3
<strong>이력:</strong> (내용 없음)</p>
<hr>
<h3>개요 (Abstract)</h3>
<p>이 PEP는 <code>for-loop</code>에서 루프 카운터(loop counter)를 노출하는 또 다른 방법을 제안합니다. 기본적으로 PEP 212의 <code>indices()</code> 함수의 기능을 기존의 <code>range()</code> 및 <code>xrange()</code> 함수에 포함시키자는 제안입니다.</p>
<h3>선언 (Pronouncement)</h3>
<p>PEP 279의 <code>enumerate()</code> 함수에 대한 코멘트에서, 이 PEP의 작성자는 "PEP 281을 쓸모없게 만드는 것을 기쁘게 생각한다"고 언급했습니다. 이후 PEP 279는 Python 2.3에 채택되었습니다.</p>
<p>2005년 6월 17일, BDFL(Benevolent Dictator For Life, 귀도 반 로섬)은 이 PEP가 쓸모없어졌다는 것에 동의하며 이 PEP를 공식적으로 거부했습니다. 기록을 위해, 그는 몇 가지 예시가 다소 어색해 보인다고 언급했습니다.</p>
<pre><code class="language-python">>>> range(range(5), range(10), range(2))
[5, 7, 9]
</code></pre>
<h3>동기 (Motivation)</h3>
<p>시퀀스의 인덱스(indices)를 반복(loop)하는 것은 종종 필요한 작업입니다. PEP 212는 이를 수행하는 여러 방법을 설명하며, <code>indices</code>라는 내장 함수를 추가하는 것을 포함합니다. 이 함수는 개념적으로 다음과 같이 정의됩니다.</p>
<pre><code class="language-python">def indices(sequence):
    return range(len(sequence))
</code></pre>
<p>기존 내장 함수에 기능을 추가하는 것이 새로운 내장 함수를 추가하는 것보다 덜 침해적일 수 있다는 가정하에, 이 PEP는 이 기능을 기존의 <code>range()</code> 및 <code>xrange()</code> 함수에 추가할 것을 제안합니다.</p>
<h3>명세 (Specification)</h3>
<p>내장 함수 <code>range()</code> 및 <code>xrange()</code>의 세 가지 인자(start, stop, step) 모두 길이를 가지는 객체(즉, <code>__len__</code> 메서드를 구현하는 객체)가 허용되도록 제안됩니다. 만약 인자가 정수로 해석될 수 없다면(즉, <code>__int__</code> 메서드가 없다면), 대신 해당 인자의 길이가 사용됩니다.</p>
<p><strong>예시:</strong></p>
<pre><code class="language-python">>>> range(range(10)) # range(10)의 길이는 10이므로, range(10)과 동일
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> range(range(5), range(10)) # range(5)의 길이는 5, range(10)의 길이는 10이므로, range(5, 10)과 동일
[5, 6, 7, 8, 9]
>>> range(range(5), range(10), range(2)) # range(5)의 길이는 5, range(10)의 길이는 10, range(2)의 길이는 2이므로, range(5, 10, 2)와 동일
[5, 7, 9]
>>> list(xrange(range(10)))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> list(xrange(xrange(10)))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# 파일의 줄 번호 매기기:
lines = file.readlines()
for num in range(lines): # 여기서 lines의 길이(len(lines))가 사용됨
    print num, lines[num]
</code></pre>
<h3>대안 (Alternatives)</h3>
<p>위 명세에 대한 자연스러운 대안은 <code>xrange()</code>가 인자들을 '게으른(lazy)' 방식으로 접근하도록 허용하는 것입니다. 따라서 명시적으로 길이를 사용하는 대신, <code>xrange</code>는 <code>stop</code> 인자의 각 요소에 대해 끝에 도달할 때까지 하나의 인덱스를 반환할 수 있습니다. 유사한 게으른 처리는 <code>start</code> 및 <code>step</code> 인자에는 별 의미가 없습니다. 왜냐하면 반복을 시작하기 전에 이들의 길이를 계산해야 하기 때문입니다. (실제로 <code>step</code> 인자의 길이는 두 번째 요소가 반환될 때까지 필요하지 않습니다.)</p>
<p><code>stop</code> 인자만 사용하고, <code>stop</code>이 iterable이라고 가정하는 의사(pseudo) 구현은 다음과 같습니다.</p>
<pre><code class="language-python">def xrange(stop):
    i = 0
    for x in stop:
        yield i
        i += 1
</code></pre>
<p><code>int()</code>를 사용할지 아니면 게으른 반복을 사용할지 테스트하는 것은 <code>__iter__</code> 속성을 확인하여 수행할 수 있습니다. (이 예시는 제너레이터(generator)의 존재를 가정하지만, 일반적인 이터레이터(iterator) 객체로 쉽게 구현될 수 있습니다.)</p>
<p>이 기능이 진정으로 유용한지에 대해서는 의문이 있을 수 있습니다. 왜냐하면 <code>for</code> 루프 내에서 인덱싱을 통해 이터러블(iterable) 객체의 요소에 접근할 수 없기 때문입니다.</p>
<p><strong>예시:</strong></p>
<pre><code class="language-python"># 파일의 줄 번호 출력:
for num in range(file): # 여기서 file 객체의 길이가 사용되지만, file의 실제 내용은 접근 불가
    print num # 줄 자체는 접근할 수 없음
</code></pre>
<p>(이 문제를 다루기 위한) 더 논쟁적인 대안은 시퀀스가 제공될 때 <code>range()</code>가 PEP 212의 <code>irange()</code> 함수처럼 동작하도록 하는 것입니다.</p>
<p><strong>예시:</strong></p>
<pre><code class="language-python">>>> range(5)
[0, 1, 2, 3, 4]
>>> range('abcde') # 시퀀스가 제공되면 (인덱스, 값) 쌍을 반환하는 PEP 212의 irange와 유사
[(0, 'a'), (1, 'b'), (2, 'c'), (3, 'd'), (4, 'e')]
</code></pre>
<h3>하위 호환성 (Backwards Compatibility)</h3>
<p>이 제안은 <code>__int__</code>와 <code>__len__</code>을 모두 구현하는 인자(또는 <code>xrange</code>의 게으른 반복의 경우 <code>__iter__</code>)가 사용될 경우 하위 호환성(backwards incompatibilities) 문제를 야기할 수 있습니다. 작성자는 이것이 중대한 문제는 아니라고 생각합니다.</p>
<h3>저작권 (Copyright)</h3>
<p>이 문서는 퍼블릭 도메인(public domain)에 있습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 281 - Loop Counter Iteration with range and xrange"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 17:56:00+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":[["$","div",null,{"className":"page__taxonomy mb-4","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"카테고리"}],[["$","span","Python",{"className":"page__taxonomy-item","children":"Python"}],["$","span","PEP",{"className":"page__taxonomy-item","children":"PEP"}]]]}],["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]]}]]}]}]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
