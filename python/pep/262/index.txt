3:I[9275,[],""]
5:I[1343,[],""]
6:I[4281,["231","static/chunks/231-c4b666723e6aae68.js","185","static/chunks/app/layout-8808afda01b7a1b7.js"],"default"]
7:I[231,["231","static/chunks/231-c4b666723e6aae68.js","877","static/chunks/app/%5B...slug%5D/page-01b66e77b48ed573.js"],""]
4:["slug","python/pep/262","c"]
0:["iV6XySbMHIJ3imQdvgy3I",[[["",{"children":[["slug","python/pep/262","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"262\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/262","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon-16x16.png"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_9012cf layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/secrett2633.github.io/_next/static/css/b9d6ec750ad82add.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T21d3,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0262/">PEP 262 - A Database of Installed Python Packages</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 08-Jul-2001</p>
</blockquote>
<p>PEP 262 – 설치된 Python 패키지 데이터베이스</p>
<h2>개요</h2>
<p>이 PEP는 시스템에 설치된 Python 소프트웨어의 데이터베이스 형식을 설명합니다.</p>
<p><strong>참고:</strong> 이 PEP는 PEP 345 및 PEP 376에 의해 대체되었으며, 이 PEP들은 승인되었습니다. 따라서 이 PEP는 (암시적으로) 거부되었습니다.</p>
<h2>도입 배경 및 목표</h2>
<p>설치된 Python 배포판 및 해당 버전을 파악하는 방법을 제공하고 CPAN, APT, RPM과 유사한 기능을 제공하는 것을 목표로 합니다. 지원되어야 할 필수 사용 사례는 다음과 같습니다:</p>
<ul>
<li>시스템에 배포판 X가 설치되어 있는가?</li>
<li>배포판 X의 어떤 버전이 설치되어 있는가?</li>
<li>배포판 X의 새 버전을 어디서 찾을 수 있는가?</li>
<li>배포판 X가 시스템에 어떤 파일을 설치했는가?</li>
<li>파일 <code>x/y/z.py</code>는 어떤 배포판에서 온 것인가?</li>
<li>누군가 <code>x/y/z.py</code>를 로컬에서 수정했는가?</li>
<li>이 소프트웨어에 필요한 다른 배포판은 무엇인가?</li>
<li>이 배포판이 제공하는 Python 모듈은 무엇인가?</li>
</ul>
<h2>데이터베이스 위치</h2>
<p>데이터베이스는 <code>&#x3C;prefix>/lib/python&#x3C;version>/install-db/</code> 아래의 파일들에 저장됩니다. 이 위치는 이 PEP의 나머지 부분에서 <code>INSTALLDB</code>라고 불립니다.</p>
<p>데이터베이스의 구조는 의도적으로 단순하게 유지됩니다. 이 디렉토리 또는 그 하위 디렉토리(있는 경우)의 각 파일은 단일 배포판을 설명합니다. RPM과 같은 Python 소프트웨어의 바이너리 패키징은 해당 파일을 <code>INSTALLDB</code> 디렉토리에 설치하는 것만으로 Python의 데이터베이스를 업데이트할 수 있습니다.</p>
<p>하위 디렉토리를 스캔하는 이유는 데이터베이스 디렉토리에 너무 많은 항목이 포함된 경우 디렉토리 기반 인덱싱 체계로 전환할 수 있기 때문입니다.</p>
<h2>데이터베이스 내용</h2>
<p><code>INSTALLDB</code> 또는 그 하위 디렉토리의 각 파일은 단일 배포판을 설명하며 다음 내용을 포함합니다:</p>
<ul>
<li>파일의 섹션을 나열하는 첫 줄 (예: <code>'PKG-INFO FILES REQUIRES PROVIDES'</code>). 섹션은 항상 빈 줄로 구분됩니다.</li>
<li><code>Distutils</code>를 사용하여 설치하는 배포판은 데이터베이스를 자동으로 업데이트해야 합니다. 자체 설치 방식을 사용하는 배포판은 데이터베이스의 API를 사용하여 수동으로 자체 항목을 추가하거나 업데이트해야 합니다. RPM 또는 <code>pkgadd</code>와 같은 시스템 패키지 관리자는 <code>INSTALLDB</code> 디렉토리에 새 파일을 생성할 수 있습니다.</li>
</ul>
<h3>PKG-INFO 섹션</h3>
<p>PEP 241, "Metadata for Python Software Packages"에 설명된 대로 파일의 배포판 정보를 포함하는 초기 RFC 822 헤더 세트입니다.</p>
<h3>FILES 섹션</h3>
<p>배포판이 설치한 각 파일에 대한 항목입니다. <code>.pyc</code> 및 <code>.pyo</code> 파일과 같은 생성된 파일과 배포판이 설치한 원래 <code>.py</code> 파일도 이 목록에 포함됩니다. 그러나 체크섬은 저장되거나 확인되지 않습니다.</p>
<p>각 파일의 항목은 다음 필드를 포함하는 단일 탭으로 구분된 줄입니다:</p>
<ul>
<li>시스템에 설치된 파일의 전체 경로</li>
<li>파일의 크기</li>
<li>파일의 권한. Windows에서는 이 필드가 항상 'unknown'입니다.</li>
<li>파일의 소유자 및 그룹 (탭으로 구분). Windows에서는 이 필드들이 모두 'unknown'입니다.</li>
<li>파일의 SHA1 다이제스트 (16진수로 인코딩). <code>*.pyc</code> 파일과 같은 생성된 파일의 경우 이 필드는 파일의 체크섬을 확인해서는 안 됨을 나타내는 “-” 문자열을 포함해야 합니다.</li>
</ul>
<h3>REQUIRES 섹션</h3>
<p>이 섹션은 이 모듈 배포판이 제대로 실행되는 데 필요한 서비스를 나타내는 문자열 목록입니다. 이 목록에는 배포판 이름("python-stdlib")과 모듈 이름("rfc822", "htmllib", "email", "email.Charset")이 포함됩니다. <code>distutils.core.setup()</code> 함수의 추가 <code>requires</code> 인수에 의해 지정됩니다.</p>
<h3>PROVIDES 섹션</h3>
<p>이 섹션은 설치된 배포판이 제공하는 서비스를 나타내는 문자열 목록입니다. 이 목록에는 배포판 이름("python-stdlib")과 모듈 이름("rfc822", "htmllib", "email", "email.Charset")이 포함됩니다.</p>
<h2>API 설명</h2>
<p>기본 클래스는 <code>InstallationDatabase</code>이며, 코드는 <code>distutils/install_db.py</code>에 있습니다. <code>InstallationDatabase</code>는 설치된 배포판에 대한 모든 정보를 포함하는 <code>Distribution</code> 인스턴스를 반환합니다.</p>
<h3><code>InstallationDatabase</code> 클래스 인터페이스</h3>
<pre><code class="language-python">class InstallationDatabase:
    def __init__(self, path=None):
        """InstallationDatabase(path:string)
        지정된 경로를 루트로 하는 설치 데이터베이스를 읽습니다.
        path가 None이면 INSTALLDB가 기본값으로 사용됩니다.
        """
    def get_distribution(self, distribution_name):
        """get_distribution(distribution_name:string) : Distribution
        단일 배포판에 해당하는 객체를 가져옵니다.
        """
    def list_distributions(self):
        """list_distributions() : [Distribution]
        시스템에 설치된 모든 배포판 목록을 특정 순서 없이 반환합니다.
        """
    def find_distribution(self, path):
        """find_file(path:string) : Distribution
        'path' 파일을 포함하는 배포판을 검색하고 반환합니다.
        파일이 InstallationDatabase가 아는 어떤 배포판에도 속하지 않으면 None을 반환합니다.
        """
</code></pre>
<h3><code>Distribution</code> 클래스 속성 및 메서드</h3>
<pre><code class="language-python">class Distribution:
    """인스턴스 속성:
    name : string (배포판 이름)
    files : {string : (size:int, perms:int, owner:string, group:string, digest:string)}
            이 배포판에 의해 설치된 파일의 경로와 파일 정보(크기, 권한, 소유자, 그룹, 다이제스트)를 매핑하는 딕셔너리.
    version : distutils.version.Version (이 배포판의 버전)
    platform : [string]
    summary : string
    description : string
    keywords : string
    home_page : string
    author : string
    author_email : string
    license : string
    """
    def add_file(self, path):
        """add_file(path:string):None
        설치된 파일에 대한 크기, 소유권 등 정보를 기록합니다.
        """
    def has_file(self, path):
        """has_file(path:string) : Boolean
        지정된 경로가 이 배포판의 파일에 속하면 True를 반환합니다.
        """
    def check_file(self, path):
        """check_file(path:string) : Boolean
        파일의 크기, 체크섬, 소유권이 일치하는지 확인하고 일치하면 True를 반환합니다.
        """
</code></pre>
<h2>거부된 제안</h2>
<ul>
<li><strong>단일 대형 텍스트 파일 또는 <code>anydbm</code> 파일 사용 대신 배포판당 하나의 텍스트 파일 사용:</strong> 성능이 중요한 문제가 아니며, 확장성 문제도 없을 것으로 예상되고, 개별 텍스트 파일이 RPM 또는 DPKG와 같은 설치 프로그램과 호환되기 때문에 거부되었습니다.</li>
<li><strong>Windows에서 파일 권한 및 소유자/그룹 저장:</strong> Windows는 소유권 및 접근 권한을 지원하지만, 이를 읽고 설정하려면 <code>win32all</code> 확장이 필요하며, 이는 Windows용 기본 Python 설치 프로그램에는 존재하지 않기 때문에 거부되었습니다.</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 262 - A Database of Installed Python Packages"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 17:44:46+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":[["$","div",null,{"className":"page__taxonomy mb-4","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"카테고리"}],[["$","span","Python",{"className":"page__taxonomy-item","children":"Python"}],["$","span","PEP",{"className":"page__taxonomy-item","children":"PEP"}]]]}],["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]]}]]}]}]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
