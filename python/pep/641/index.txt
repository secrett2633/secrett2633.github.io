3:I[9275,[],""]
5:I[1343,[],""]
6:I[4281,["231","static/chunks/231-c4b666723e6aae68.js","185","static/chunks/app/layout-8808afda01b7a1b7.js"],"default"]
7:I[231,["231","static/chunks/231-c4b666723e6aae68.js","877","static/chunks/app/%5B...slug%5D/page-01b66e77b48ed573.js"],""]
4:["slug","python/pep/641","c"]
0:["iV6XySbMHIJ3imQdvgy3I",[[["",{"children":[["slug","python/pep/641","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"641\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/641","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon-16x16.png"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_9012cf layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/secrett2633.github.io/_next/static/css/b9d6ec750ad82add.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e10,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0641/">PEP 641 - Using an underscore in the version portion of Python 3.10 compatibility tags</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 20-Oct-2020</p>
</blockquote>
<h1>PEP 641: Python 3.10 호환성 태그 버전 부분에 언더스코어 사용</h1>
<ul>
<li><strong>작성자:</strong> Brett Cannon, Steve Dower, Barry Warsaw</li>
<li><strong>PEP 대리인:</strong> Pablo Galindo</li>
<li><strong>상태:</strong> <strong>거절됨 (Rejected)</strong></li>
<li><strong>유형:</strong> Standards Track</li>
<li><strong>생성일:</strong> 2020년 10월 20일</li>
<li><strong>Python 버전:</strong> 3.10</li>
<li><strong>해결:</strong> Discourse 메시지</li>
</ul>
<h2>개요 (Abstract)</h2>
<p><strong>참고:</strong> 이 PEP는 커뮤니티 내 잠재적인 문제 발생 가능성으로 인해 거절되었습니다.</p>
<p>PEP 425에 명시된 태그 시스템(주로 휠(wheel) 파일 이름에 사용됨)에 따라, 각 Python 릴리스는 호환성 태그(예: CPython 3.9의 경우 <code>cp39</code>, <code>py39</code>)를 지정합니다. 이 PEP는 CPython 3.10의 경우 태그의 버전 부분에 <code>3_10</code>을 사용하는 것을 제안했습니다(기존 <code>310</code> 대신).</p>
<h2>동기 (Motivation)</h2>
<p>지금까지 휠 파일 이름 등에 사용되는 호환성 태그의 버전 부분은 Python의 주(major) 버전과 부(minor) 버전을 단순히 연결한 것이었습니다. 이는 CPython 인터프리터 태그와 일반적인, 인터프리터에 독립적인 태그(예: 각각 <code>cp39</code> 및 <code>py39</code>) 모두에 적용되었습니다. ABI 태그(예: <code>cp39</code>)에도 동일하게 적용됩니다. 주 버전과 부 버전이 모두 한 자리 숫자였기 때문에, 예를 들어 <code>39</code>에서 어떤 숫자가 무엇을 나타내는지 모호함이 없었습니다.</p>
<p>하지만 Python 3.10부터는 <code>310</code>이 Python 버전이 <code>3.10</code>인지, <code>31.0</code>인지, 또는 주 버전만 <code>310</code>인지를 명확하게 구분하지 못하여 모호성이 발생합니다. 따라서 PEP 425에서 허용하는 대로 주/부 버전 부분을 <code>3_10</code>으로 분리하여 지원되는 Python 버전을 명확히 하는 것을 제안했습니다.</p>
<h2>근거 (Rationale)</h2>
<p><code>3_10</code>을 사용하는 것은 PEP 425의 제약 사항이었으며, 따라서 <code>3_10</code> 또는 <code>310</code> 중 하나만 선택할 수 있었습니다.</p>
<h2>명세 (Specification)</h2>
<p>이 제안이 수락되었다면, <code>SOABI</code> configure 변수와 <code>sysconfig.get_config_var('py_version_nodot')</code>이 <code>3_10</code>을 적절하게 사용하도록 업데이트되었을 것입니다.</p>
<h2>하위 호환성 (Backwards Compatibility)</h2>
<p><code>packaging</code> 프로젝트에 의존하는 도구들은 이미 Python 3.10에 대해 <code>3_10</code> 버전 지정을 예상하고 있었습니다. 버전 지정자를 <code>310</code>으로 유지하려면 해당 변경 사항을 되돌리고 의존하는 프로젝트(예: <code>pip</code>)를 업데이트해야 했을 것입니다.</p>
<p><code>3_10</code>으로 전환하는 것은 부 버전이 한 자리 숫자라는 관례에 암묵적으로 의존하는 모든 도구에 영향을 미쳤을 것입니다. 그러나 이러한 도구들은 이 변경 사항과 관계없이 이미 문제가 있었습니다.</p>
<p>주 버전이 첫 번째 숫자라고 가정하는 도구의 경우, <code>3_10</code>으로 전환했다면 업데이트가 필요했을 것입니다.</p>
<p>비-로케일 ASCII에서 언더스코어(<code>_</code>)는 모든 숫자 뒤에 정렬되므로, 휠 파일 이름의 Python 버전별 정렬과 일치하는 사전식 정렬은 유지되었을 것입니다.</p>
<p>PEP 515(Python 3.6) 이후로 숫자 리터럴의 언더스코어는 무시됩니다. 즉, <code>int("3_10")</code>과 <code>int("310")</code>은 동일한 결과를 생성하며, 정수로 변환을 기반으로 한 순서는 유지되었을 것입니다. 그러나 이것은 태그를 정렬하는 좋지 않은 방법이며, 이 제안이 상황을 더 나쁘게 만들지 않는다는 것을 보여주기 위해 언급된 것입니다.</p>
<h2>보안 영향 (Security Implications)</h2>
<p>알려진 보안 문제는 없습니다.</p>
<h2>교육 방법 (How to Teach This)</h2>
<p>인터프리터 태그의 사용은 주로 기계 기반이며 이 PEP는 모호성을 해소하는 역할을 하므로, 특별한 교육 고려 사항은 필요하지 않을 것입니다.</p>
<h2>참조 구현 (Reference Implementation)</h2>
<p>CPython 3.10에 대한 지원을 추가하는 Pull Request는 이미 존재했습니다. 이 제안된 PEP를 사용하는 휠 파일을 읽기 위한 지원은 이미 구현되어 있었습니다.</p>
<h2>거절된 아이디어 (Rejected Ideas)</h2>
<h3>변경하지 않기 (Not making the change)</h3>
<p>태그를 변경하지 않고 <code>310</code>을 유지하는 것이 고려되었습니다. 이 주장은 작업량이 적고 기존 도구에 문제를 일으키지 않을 것이라는 것이었습니다. 그러나 결국 모호성을 해소하는 것이 더 낫다고 판단되었습니다.</p>
<h2>열린 문제 (Open Issues)</h2>
<h3>얼마나 멀리까지 적용해야 하는가? (How far should we take this?)</h3>
<p>주 버전과 부 버전이 사용되는 다른 곳(예: <code>.pyc</code> 파일, 표준 라이브러리의 zip 파일 import 경로)도 언더스코어를 사용하도록 업데이트될 수 있었습니다. 이를 광범위하게 적용하는 것이 얼마나 유용할지는 알려지지 않았습니다.</p>
<h3>두 자리 부 버전 숫자로 표준화하기 (Standardizing on double digit minor version numbers)</h3>
<p>주 버전과 부 버전의 시작/끝을 명확히 하기 위해 부 버전을 항상 두 자리 숫자로 강제하고 필요한 경우 0으로 채우는 대안적인 제안이 있었습니다. 이것의 장점은 현재 <code>cp310</code> 인터프리터 태그를 정확하게 만들고, 따라서 문제 발생을 최소화한다는 것입니다. 또한 앞으로도 차별화를 제공합니다.</p>
<p>하지만 몇 가지 단점도 있습니다. 하나는 부 버전 숫자가 두 자리라는 것을 알아야만 모호성 해소가 가능하다는 것입니다. 기본 지식과 관계없이 모호함이 없는 <code>cp3_10</code>과 비교해보세요. 또한 세 자리 부 버전 숫자의 잠재성은 이 두 자리 요구 사항으로 해결되지 않습니다.</p>
<p>과거, 현재 또는 미래에 이 관행을 따르지 않는 다른 인터프리터에 대한 문제도 있습니다. 예를 들어, 이 규칙이 잘못될 수 있는 다른 인터프리터에 대해 이전에 세 자리 버전 부분을 사용한 사람이 있는지 알려져 있지 않습니다. 이 변경은 현재 한 자리 부 버전을 가진 인터프리터(예: PyPy 7.3)가 <code>pp73</code>에서 <code>pp703</code>으로 변경하거나 다음 부 릴리스부터 변경(예: 7.4 또는 8.0)해야 함을 시사했을 것입니다. 그렇지 않으면 이 규칙이 <code>cp</code> 인터프리터 유형에만 한정되어 사람들에게 더 혼란을 주었을 것입니다.</p>
<hr>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 641 - Using an underscore in the version portion of Python 3.10 compatibility tags"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 01:32:00+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":[["$","div",null,{"className":"page__taxonomy mb-4","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"카테고리"}],[["$","span","Python",{"className":"page__taxonomy-item","children":"Python"}],["$","span","PEP",{"className":"page__taxonomy-item","children":"PEP"}]]]}],["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]]}]]}]}]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
