3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/390","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","python/pep/390","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"390\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/390","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2946,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0390/">PEP 390 - Static metadata for Distutils</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 10-Oct-2009</p>
</blockquote>
<h2>PEP 390 – Distutils를 위한 정적 메타데이터</h2>
<ul>
<li><strong>작성자:</strong> Tarek Ziadé</li>
<li><strong>BDFL-Delegate:</strong> Alyssa Coghlan</li>
<li><strong>상태:</strong> Rejected (거부됨)</li>
<li><strong>유형:</strong> Standards Track</li>
<li><strong>주제:</strong> Packaging</li>
<li><strong>생성일:</strong> 2009년 10월 10일</li>
<li><strong>Python 버전:</strong> 2.7, 3.2</li>
</ul>
<hr>
<h3>개요 (Abstract)</h3>
<p>이 PEP는 <code>setup.cfg</code> 파일에 새로운 섹션과 형식을 정의하여, <code>setup.py</code>를 사용하지 않고도 패키지의 메타데이터를 설명할 수 있도록 제안했습니다.</p>
<h3>거부 공지 (Rejection Notice)</h3>
<p>Distutils2가 표준 라이브러리에 통합되지 않게 됨에 따라, 이 PEP는 2013년 4월 말 Alyssa Coghlan에 의해 거부되었습니다.</p>
<p>이 PEP를 대체할 PEP는 PEP 426 (메타데이터 2.0)을 기반으로 생성될 예정이며, 소스 tarball 또는 VCS 체크아웃에서 sdist 아카이브를 생성하는 데 필요한 최소한의 정보를 정의할 것입니다.</p>
<h3>제안 배경 (Rationale)</h3>
<p>현재, 설치되지 않은 배포판의 모든 메타데이터 (PEP 314 참조)를 확인하려면 <code>setup.py</code> 명령줄 인터페이스를 사용해야 합니다.</p>
<p>예를 들어, 다음과 같이 실행해야 합니다:</p>
<pre><code class="language-bash">$ python setup.py --name Distribute
$ python setup.py --version 0.6.4
</code></pre>
<p><code>name</code>과 <code>version</code>은 메타데이터 필드입니다. 이 방식은 잘 작동하지만, 개발자들이 <code>setup.py</code>에 더 많은 코드를 추가할수록 이 기능이 제대로 작동하지 않거나, 최악의 경우 대상 시스템에서 원치 않는 작업을 수행할 수도 있습니다.</p>
<p>더욱이, OS 패키저가 재패키징하려는 배포판의 메타데이터를 얻으려 할 때, 그들이 작업하는 <code>setup.py</code> 파일을 이해하는 데 어려움을 겪을 수 있습니다.</p>
<p>따라서 이 PEP의 목표는 <code>setup.py</code>와 함께 정적 구성 파일에 메타데이터를 선언하는 방법을 제공하여, 서드파티 코드(third-party code) 실행 없이 메타데이터를 얻을 수 있도록 하는 것이었습니다.</p>
<h3><code>setup.cfg</code>에 메타데이터 섹션 추가 (Adding a metadata section in setup.cfg)</h3>
<p>이 PEP는 <code>setup.cfg</code> 파일에 <code>[metadata]</code> 섹션을 도입하여 메타데이터의 모든 필드를 포함할 수 있도록 제안했습니다.</p>
<p>예시:</p>
<pre><code class="language-ini">[metadata]
name = Distribute
version = 0.6.4
</code></pre>
<p><code>setup.cfg</code> 파일은 Distutils에서 또 다른 구성 파일을 추가하는 것을 피하기 위해 사용됩니다. 이 파일은 명령이 실행될 때 Distutils에 의해 이미 읽히며, <code>[metadata]</code> 섹션이 발견되면 메타데이터 필드를 채우는 데 사용됩니다. <code>setup()</code> 함수에 메타데이터 필드에 해당하는 옵션이 주어지면, <code>setup.cfg</code>에 있던 값을 재정의합니다.</p>
<p><code>setup.py</code>는 여전히 사용되며, 메타데이터 필드의 일부가 아닌 옵션(예: <code>sdist</code> 명령의 <code>packages</code> 또는 <code>scripts</code> 옵션)을 정의하는 데 필요할 수 있습니다.</p>
<h3>다중 라인 값 (Multi-lines values)</h3>
<p>일부 메타데이터 필드는 여러 값을 가질 수 있습니다. <code>setup.cfg</code>가 <code>ConfigParser</code> 및 RFC 822 LONG HEADER FIELDS (섹션 3.1.1 참조)와 호환되도록, 이러한 값들은 쉼표(<code>,</code>)로 구분됩니다.</p>
<p>예시:</p>
<pre><code class="language-ini">requires = pywin32, bar > 1.0, foo
</code></pre>
<p>이 변수가 읽힐 때, 값들은 파싱되어 리스트(<code>['pywin32', 'bar > 1.0', 'foo']</code>)로 변환됩니다.</p>
<h3>컨텍스트 종속 섹션 (Context-dependant sections)</h3>
<p><code>[metadata]</code> 섹션은 컨텍스트 종속 섹션(context-dependant sections)을 사용할 수도 있었습니다. 컨텍스트 종속 섹션은 실행 환경에 대한 조건을 포함하는 섹션입니다.</p>
<p>예시:</p>
<pre><code class="language-ini">[metadata]
name = Distribute
version = 0.6.4
[metadata:sys_platform == 'win32']
requires = pywin32, bar > 1.0
obsoletes = pywin31
[metadata:os_machine == 'i386']
requires = foo
[metadata:python_version == '2.4' or python_version == '2.5']
requires = bar
[metadata:'linux' in sys_platform]
requires = baz
</code></pre>
<p>각 <code>[metadata:condition]</code> 섹션은 파일이 읽힐 때 조건이 충족될 경우에만 사용됩니다. 이러한 컨텍스트 종속 섹션의 배경 동기는 배포판이 설치될 플랫폼에 따라 달라지는 요구 사항을 정의할 수 있도록 하는 것이었습니다 (PEP 314 참조).</p>
<p>이를 위한 마이크로 언어(micro-language)는 가장 간단한 형태였습니다: 문자열만 비교하며, <code>==</code> 및 <code>in</code> 연산자 (및 그 반대)와 표현식을 결합하는 기능을 가졌습니다. 이는 Python 개발자가 아닌 사람들도 쉽게 이해할 수 있도록 했습니다.</p>
<p>의사 문법(pseudo-grammar)은 다음과 같습니다:
<code>EXPR [in|==|!=|not in] EXPR [or|and] ...</code></p>
<p>여기서 <code>EXPR</code>은 다음 중 하나에 해당합니다:</p>
<ul>
<li><code>python_version = '%s.%s' % (sys.version_info[0], sys.version_info[1])</code></li>
<li><code>os_name = os.name</code></li>
<li><code>sys_platform = sys.platform</code></li>
<li><code>platform_version = platform.version()</code></li>
<li><code>platform_machine = platform.machine()</code></li>
<li><code>2.4</code> 또는 <code>win32</code>와 같은 자유 문자열</li>
</ul>
<p><code>in</code> 연산자는 문자열로 제한되었으며, 이는 튜플이나 리스트와 같은 다른 시퀀스를 오른쪽에 사용할 수 없음을 의미합니다.</p>
<p>Distutils는 <code>setup.cfg</code> 파일이 주어졌을 때 실행 환경에 대한 배포판의 메타데이터를 생성할 수 있는 함수를 제공할 예정이었습니다:</p>
<pre><code class="language-python">>>> from distutils.util import local_metadata
>>> local_metadata('setup.cfg')
&#x3C;DistributionMetadata instance>
</code></pre>
<p>이는 순수한 Python(vanilla Python)이 서드파티 코드를 실행하지 않고도 패키지의 메타데이터를 읽을 수 있다는 것을 의미합니다.</p>
<p>이 기능은 <code>metadata</code> 네임스페이스에만 국한되지 않고, 다른 섹션도 이러한 컨텍스트 종속 섹션으로 확장될 수 있었습니다.</p>
<h3>PKG-INFO 생성 및 PEP 314에 미치는 영향 (Impact on PKG-INFO generation and PEP 314)</h3>
<p>Distutils가 PKG-INFO를 생성할 때, 조건에 의존하는 모든 필드는 <code>;</code> 구분자 뒤에 해당 조건이 라인 끝에 기록됩니다.</p>
<p>예시:</p>
<pre><code>Metadata-Version: 1.2
Name: distribute
Version: 0.6.4
...
Requires: pywin32, bar > 1.0; sys_platform == 'win32'
Requires: foo; os_machine == 'i386'
Requires: bar; python_version == '2.4' or python_version == '2.5'
Requires: baz; 'linux' in sys_platform
Obsoletes = pywin31; sys_platform == 'win32'
...
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Python Software Foundation License
</code></pre>
<p>이 파일은 <code>DistributionMetadata</code> 클래스로 열 수 있었습니다. 이 클래스는 실행 환경을 사용하여 마이크로 언어를 활용할 수 있습니다.</p>
<p>Python 2.5 i386 Linux에서 실행하는 예시:</p>
<pre><code class="language-python">>>> from distutils.dist import DistributionMetadata
>>> metadata = DistributionMetadata('PKG_INFO')
>>> metadata.get_requires()
['foo', 'bar', 'baz']
</code></pre>
<p>메타데이터를 다른 환경에 대해 얻으려는 경우 실행 환경을 재정의할 수 있었습니다:</p>
<pre><code class="language-python">>>> env = {'python_version': '2.4',
...        'os_name': 'nt',
...        'sys_platform': 'win32',
...        'platform_version': 'MVCC++ 6.0'
...        'platform_machine': 'i386'}
...
>>> metadata = DistributionMetadata('PKG_INFO', environment=env)
>>> metadata.get_requires()
['bar > 1.0', 'foo', 'bar']
</code></pre>
<p>PEP 314는 이에 따라 변경되어 각 필드가 추가 조건 마커를 가질 수 있도록 했습니다.</p>
<h3>호환성 (Compatibility)</h3>
<p>이 변경사항은 새로운 메타데이터 1.2 형식을 기반으로 하며, 이는 Distutils가 이전 PKG-INFO 파일과 새로운 파일을 구별할 수 있음을 의미합니다.</p>
<p><code>setup.cfg</code> 파일 변경은 <code>ConfigParser</code>와 호환성을 유지하며 기존 <code>setup.cfg</code> 파일을 손상시키지 않을 것입니다.</p>
<h3>한계 (Limitations)</h3>
<p>이 제안은 <code>&#x3C;</code> 및 <code>></code> 연산자를 제공하지 않았으며, <code>python_version</code>은 일반 문자열이었습니다. 이는 섹션을 특정 Python 버전으로 제한해야 할 때 <code>or</code> 연산자를 사용해야 함을 의미했습니다. 그러나 PEP 386이 수락되었다면, <code>python_version</code>은 내부적으로 문자열과 비교 가능하도록 변경될 수 있었고, <code>&#x3C;</code> 및 <code>></code> 연산자가 도입될 수 있었습니다.</p>
<p>마지막으로, 배포판이 <code>setup.cfg</code>에 모든 메타데이터 필드를 설정할 수 없는 경우, <code>local_metadata</code>가 호출될 때 필드는 <code>UNKNOWN</code>으로 설정됩니다. <code>UNKNOWN</code> 값을 얻는 것은 전체 메타데이터를 얻기 위해 <code>setup.py</code> 명령줄 인터페이스를 실행해야 할 수도 있음을 의미했습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 390 - Static metadata for Distutils"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 21:09:17+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
