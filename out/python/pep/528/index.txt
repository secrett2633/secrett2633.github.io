3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/528","c"]
0:["qNOrJYeuqip9qCFPpDVpu",[[["",{"children":[["slug","python/pep/528","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"528\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/528","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1de6,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0528/">PEP 528 - Change Windows console encoding to UTF-8</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 27-Aug-2016</p>
</blockquote>
<hr>
<h2>PEP 528 – Windows 콘솔 인코딩을 UTF-8로 변경</h2>
<h3>개요 (Abstract)</h3>
<p>과거에 Python은 Windows 운영체제와의 상호작용을 위해 ANSI API를 주로 사용했습니다. 그러나 이러한 ANSI API는 UTF-16 API에 비해 권장되지 않아 왔습니다. 운영체제 내부에서는 모든 텍스트가 UTF-16으로 표현되며, ANSI API는 활성 코드 페이지를 사용하여 인코딩 및 디코딩을 수행합니다.</p>
<p>이 PEP는 Windows에서 기본 표준 스트림 구현을 유니코드 API를 사용하도록 변경할 것을 제안합니다. 이를 통해 사용자는 기본 Windows 콘솔에서 전체 범위의 유니코드 문자를 출력하고 입력할 수 있게 됩니다. 또한, 토크나이저(tokenizer)가 readline 훅(hook)으로부터 텍스트를 파싱하는 방식에도 미묘한 변경이 필요합니다.</p>
<h3>주요 변경 사항 (Specific Changes)</h3>
<ol>
<li>
<p><strong><code>_io.WindowsConsoleIO</code> 추가</strong>:</p>
<ul>
<li>현재 표준 입력, 출력, 에러를 나타내는 파일 디스크립터를 래핑(wrap)하기 위해 <code>_io.FileIO</code> 인스턴스가 사용됩니다.</li>
<li>이 PEP는 C로 구현된 새로운 클래스 <code>_io.WindowsConsoleIO</code>를 추가하여, <code>ReadConsoleW</code> 및 <code>WriteConsoleW</code>와 같은 Windows 콘솔 함수를 사용하는 로우(raw) I/O 객체 역할을 합니다.</li>
<li>이 클래스는 레거시 모드(legacy-mode) 플래그가 비활성화되어 있고, 파일 디스크립터로 표준 스트림을 열 때 해당 스트림이 리디렉션된 파일이 아닌 콘솔 버퍼일 경우에 사용됩니다. 그 외의 경우에는 기존과 같이 <code>_io.FileIO</code>가 사용됩니다.</li>
<li><code>_io.WindowsConsoleIO</code>는 텍스트를 <code>utf-8</code>로 인코딩하여 전달해야 하며, 이는 <code>utf-16-le</code>로 디코딩되어 Windows API로 전달됩니다. 마찬가지로, 운영체제로부터 읽은 바이트는 <code>utf-16-le</code>로 제공되며 Python으로 반환될 때 <code>utf-8</code>로 변환됩니다.</li>
<li>ASCII 호환 인코딩을 사용하는 것은 <code>TextIOWrapper</code>를 우회하고 ASCII 바이트를 표준 스트림에 직접 쓰는 코드(예: Twisted의 <code>process_stdinreader.py</code>)와의 호환성을 유지하기 위해 필요합니다. 표준 스트림에 대해 ASCII 외의 특정 인코딩을 가정하는 코드는 호환성 문제가 발생할 수 있습니다.</li>
</ul>
</li>
<li>
<p><strong><code>_PyOS_WindowsConsoleReadline</code> 추가</strong>:</p>
<ul>
<li>대화형 프롬프트에서 유니코드 입력을 허용하기 위해 새로운 readline 훅이 필요합니다.</li>
<li>기존의 <code>PyOS_StdioReadline</code> 함수는 파일 디스크립터가 콘솔 버퍼이고 레거시 모드 플래그가 비활성화되어 있을 때 새로운 <code>_PyOS_WindowsConsoleReadline</code> 함수로 위임(delegate)합니다.</li>
<li>readline 인터페이스는 널(null)이 포함되지 않은 8비트 인코딩된 문자열을 반환해야 하므로, <code>_PyOS_WindowsConsoleReadline</code> 함수는 운영체제로부터 읽은 <code>utf-16-le</code>를 <code>utf-8</code>로 변환(transcode)합니다.</li>
<li><code>sys.stdin</code>에서 인코딩을 가져오는 <code>PyRun_InteractiveOneObject</code> 함수는 레거시 모드 플래그가 활성화되지 않는 한 <code>utf-8</code>을 선택합니다. 이는 readline 훅이 인코딩을 <code>utf-8</code>로 변경하거나, 올바른 동작을 위해 레거시 모드를 요구할 수 있습니다.</li>
</ul>
</li>
<li>
<p><strong>레거시 모드 (Legacy Mode) 추가</strong>:</p>
<ul>
<li>환경 변수 <code>PYTHONLEGACYWINDOWSSTDIO</code>를 설정하여 Python을 실행하면 레거시 모드 플래그가 활성화되어 이전 동작을 완전히 복원합니다.</li>
</ul>
</li>
</ol>
<h3>대안적 접근 방식 (Alternative Approaches)</h3>
<p><code>win_unicode_console</code> 패키지는 콘솔의 기본 동작을 변경하는 순수 Python 대안입니다. 이 패키지는 여기에서 설명하는 것과 본질적으로 동일한 수정을 순수 Python 코드를 사용하여 구현합니다.</p>
<h3>호환성 문제 발생 가능 코드 (Code that may break)</h3>
<p>다음과 같은 코드 패턴은 이 변경의 결과로 오작동하거나 다른 동작을 보일 수 있습니다. 이러한 코드 샘플들은 가시적인 변경을 방지할 수 있는 더 편리한 래퍼(wrapper) 대신 로우(raw) 파일 객체를 명시적으로 사용하도록 선택한 경우에 해당합니다.</p>
<ol>
<li>
<p><strong><code>stdin</code>/<code>stdout</code> 인코딩 가정</strong>:</p>
<ul>
<li><code>sys.stdin.buffer</code> 또는 <code>sys.stdout.buffer</code>가 요구하는 인코딩이 <code>'mbcs'</code> 또는 더 특정적인 인코딩이라고 가정하는 코드는 현재 우연히 작동하고 있을 수 있지만, 이 변경으로 인해 문제가 발생할 수 있습니다.</li>
<li><strong>수정 방법</strong>: <code>TextIOWrapper</code>에 지정된 인코딩을 암시적으로 또는 명시적으로 사용합니다.
<pre><code class="language-python"># Fix 1: 래퍼를 올바르게 사용
sys.stdout.write(text)
r = sys.stdin.read(16)

# Fix 2: 인코딩을 명시적으로 사용
sys.stdout.buffer.write(text.encode(sys.stdout.encoding))
r = sys.stdin.buffer.read(16).decode(sys.stdin.encoding)
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>로우 객체(raw object)의 잘못된 사용</strong>:</p>
<ul>
<li>로우 I/O 객체를 사용하고 부분 읽기/쓰기를 올바르게 처리하지 않는 코드가 영향을 받을 수 있습니다.</li>
<li>특히 읽기 작업의 경우, 읽은 문자 수가 허용된 바이트 수의 1/4을 초과하지 않을 수 있는데, 이는 입력이 훨씬 긴 <code>utf-8</code> 문자열로 인코딩되는 것을 막을 실현 가능한 방법이 없기 때문입니다.</li>
<li><strong>수정 방법</strong>: 버퍼링된 리더/라이터(buffered reader/writer)를 사용하거나, 호출자가 버퍼가 가득 찰 때까지 계속 읽어야 합니다.
<pre><code class="language-python"># Fix 1: 버퍼링된 리더/라이터를 사용
stdin = sys.stdin.buffer
data = stdin.read(15)

# Fix 2: 충분한 바이트가 읽힐 때까지 루프
raw_stdin = sys.stdin.buffer.raw
b = b''
while len(b) &#x3C; 15:
    b += raw_stdin.read(15)
</code></pre>
</li>
</ul>
</li>
<li>
<p><strong>작은 버퍼로 로우 객체 사용</strong>:</p>
<ul>
<li>로우 I/O 객체를 사용하고 4자 미만을 읽으려고 시도하는 코드는 이제 오류를 받게 됩니다. 단일 문자가 <code>utf-8</code>로 표현될 때 최대 4바이트를 필요로 할 수 있기 때문에 이러한 요청은 실패합니다.</li>
<li><strong>수정 방법</strong>: 더 큰 버퍼를 전달해야 합니다.
<pre><code class="language-python"># Fix: 최소 4바이트를 요청
raw_stdin = sys.stdin.buffer.raw
data = raw_stdin.read(4)
</code></pre>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 528 - Change Windows console encoding to UTF-8"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 23:19:55+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
