3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/231","c"]
0:["jf5MDuRUbMNVvRN9tv5rq",[[["",{"children":[["slug","python/pep/231","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"231\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/231","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1c95,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0231/">PEP 231 - <strong>findattr</strong>()</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 30-Nov-2000</p>
</blockquote>
<h2>PEP 231 – <code>__findattr__()</code>에 대한 번역 및 요약</h2>
<p><strong>상태:</strong> Rejected (거부됨)
<strong>작성자:</strong> Barry Warsaw
<strong>생성일:</strong> 2000년 11월 30일
<strong>Python 버전:</strong> 2.1</p>
<h3>소개</h3>
<p>PEP 231은 Python 인스턴스의 속성 조회(lookup) 및 수정 메커니즘을 확장하는 제안으로, 순수 Python만으로 다양한 흥미로운 프로그래밍 모델을 구현할 수 있도록 하는 것을 목표로 했습니다. 이 제안은 <code>__findattr__()</code>이라는 새로운 특수 메서드를 도입하여 기존 <code>__getattr__()</code> 및 <code>__setattr__()</code>의 제한 사항을 해결하고자 했습니다.</p>
<h3>배경</h3>
<p>Python은 <code>__getattr__()</code> 및 <code>__setattr__()</code>과 같은 특수 메서드를 통해 속성 접근을 사용자 정의할 수 있는 기능을 제공합니다. 그러나 이러한 메서드에는 특정 제한 사항이 있어, 엄격한 Java Bean과 유사한 인터페이스나 Zope 스타일의 Acquisition과 같은 특정 프로그래밍 기법을 순수 Python만으로는 구현하기 어려웠습니다. 예를 들어 Zope는 <code>ExtensionClass</code>라는 C 확장과 Python의 메타클래스 훅을 사용하여 이 문제를 해결했지만, 이는 C 확장을 필요로 하고 Python의 내부 메커니즘에 의존하며 이해하고 사용하기 어렵다는 단점이 있었습니다. 이 PEP는 "클래스/타입 이분법(class/type dichotomy)" 문제를 해결하는 것과는 별개로, 최소한의 수정으로 위와 같은 프로그래밍 구성을 가능하게 하는 80% 솔루션을 제공하고자 했습니다.</p>
<h3>제안 내용</h3>
<p>이 PEP는 다음과 같은 의미를 갖는 <code>__findattr__()</code>이라는 새로운 특수 메서드를 추가할 것을 제안했습니다.</p>
<ul>
<li>클래스에 <code>__findattr__()</code>이 정의되면, 모든 인스턴스 속성 해석 시 <code>__getattr__()</code> 및 <code>__setattr__()</code> 대신 호출됩니다.</li>
<li><code>__findattr__()</code>은 재귀적으로 호출되지 않습니다. 즉, 특정 인스턴스의 <code>__findattr__()</code>이 호출 스택에 있는 동안, 해당 인스턴스의 추가 속성 접근은 표준 <code>__getattr__()</code> 및 <code>__setattr__()</code> 메서드를 사용합니다.</li>
<li><code>__findattr__()</code>은 속성 접근('getting') 및 속성 수정('setting') 모두에 대해 호출됩니다. 속성 삭제(deletion)에 대해서는 호출되지 않습니다.</li>
<li>'getting'을 위해 호출될 때는 하나의 인자(self 제외)로 접근하려는 속성의 이름이 전달됩니다. 'setting'을 위해 호출될 때는 세 번째 인자로 설정할 값이 전달됩니다.</li>
<li><code>__findattr__()</code> 메서드는 <code>__getattr__()</code> 및 <code>__setattr__()</code>과 동일한 캐싱(caching) 의미를 가집니다. 즉, 클래스 정의 시점에 클래스에 존재하면 사용되지만, 나중에 클래스에 추가되면 사용되지 않습니다.</li>
</ul>
<h3>기존 프로토콜과의 주요 차이점</h3>
<p><code>__findattr__()</code>의 의미론은 기존 <code>__getattr__()</code> 및 <code>__setattr__()</code> 프로토콜과 다음과 같은 주요 차이점을 가집니다.</p>
<ul>
<li><strong><code>__getattr__()</code>의 한계:</strong> <code>__getattr__()</code>은 속성이 인스턴스의 <code>__dict__</code>에 존재하면 호출되지 않습니다. 이는 효율성 때문이기도 하지만, <code>__setattr__()</code>이 인스턴스의 속성에 접근할 방법이 없어 재귀 호출을 방지하기 위함이었습니다.</li>
<li><strong><code>__setattr__()</code>의 한계:</strong> <code>__setattr__()</code>은 "self.name = foo"와 같은 "일반적인" 구문을 사용하여 인스턴스 속성을 설정할 수 없었습니다. 이렇게 하면 <code>__setattr__()</code>이 재귀적으로 호출되기 때문입니다.</li>
<li><strong><code>__findattr__()</code>의 동작:</strong> <code>__findattr__()</code>은 속성이 <code>__dict__</code>에 있든 없든 항상 호출됩니다. 그리고 인스턴스 객체 내부의 플래그(flag)가 <code>__findattr__()</code>의 재귀 호출을 방지합니다. 이를 통해 클래스는 모든 속성 접근에 대해 어떤 동작을 수행할 기회를 가질 수 있으며, 'get'과 'set' 모두에 대해 호출되므로 모든 속성 접근에 대해 유사한 정책을 쉽게 작성할 수 있습니다. 효율성 문제는 확장된 메커니즘이 사용될 때만 비용이 발생하므로 크게 문제되지 않습니다.</li>
</ul>
<h3>예시</h3>
<p>이 제안은 Java Bean과 유사한 객체 인터페이스 구현을 허용하여, 꾸밈없는 속성 접근 및 수정이 함수형 인터페이스로 투명하게 매핑될 수 있도록 합니다. 또한, 순수 Python으로 암시적(implicit) 및 명시적(explicit) Acquisition을 구현하는 복잡한 예시와, C++와 유사한 접근 제어를 구현하는 예시도 제시되었습니다.</p>
<h3>거부 (Rejection)</h3>
<p>PEP 231은 최종적으로 거부되었습니다. 주된 거부 이유는 다음과 같습니다.</p>
<ul>
<li><strong>재귀 방지 기능의 문제:</strong> 재귀 방지 기능에 심각한 문제가 있었습니다. 제안된 방식으로는 스레드 안전(thread-safe)하지 않았으며, 스레드 안전한 해결책은 다른 문제를 야기했습니다. <code>__findattr__</code> 내부와 외부에서 모두 호출되어야 하는 코드를 작성하기 어렵게 만드는 등, 재귀 방지 기능의 유용성 자체가 명확하지 않았습니다. 반대로 재귀 방지 기능이 없으면 <code>__findattr__</code>이 자기 자신을 재귀적으로 호출하게 되어 구현하기 어려워집니다.</li>
<li><strong><code>__getattr__</code>과 <code>__setattr__</code>의 충분성:</strong> 속성 'getting'과 'setting' 모두에 대해 <code>__findattr__</code>을 지원하는 것이 얼마나 유용한지에 대한 의문이 있었습니다. <code>__setattr__</code>은 이미 모든 경우에 호출되고 있었습니다.</li>
<li><strong>대체 구현 가능성:</strong> 제안된 예시들은 인스턴스 변수를 자체 이름으로 저장하지 않도록 주의를 기울이면 기존 <code>__getattr__</code>을 사용하여 모두 구현할 수 있었습니다.</li>
</ul>
<p>결론적으로, <code>__findattr__()</code>의 재귀 방지 메커니즘에 대한 적절한 해결책을 찾기 어려웠고, 기존 <code>__getattr__()</code>과 <code>__setattr__()</code>로도 제안된 대부분의 기능을 구현할 수 있다는 점 때문에 PEP 231은 거부되었습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 231 - __findattr__()"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 16:58:10+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
