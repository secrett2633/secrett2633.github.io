3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/746","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","python/pep/746","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"746\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/746","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e63,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0746/">PEP 746 - Type checking Annotated metadata</a></p>
<p><strong>상태:</strong> Draft | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 20-May-2024</p>
</blockquote>
<h2>PEP 746 – Annotated 메타데이터의 타입 체킹</h2>
<h3>요약</h3>
<p>이 PEP는 <code>typing.Annotated</code> 타입을 사용하는 메타데이터에 대한 타입 체킹 메커니즘을 제안합니다. 새로운 <code>__supports_annotated_base__</code> 프로토콜을 구현하는 메타데이터 객체는 주어진 타입에 대해 메타데이터가 유효한지 정적 타입 체커에 의해 검사됩니다.</p>
<h3>개요</h3>
<ul>
<li><strong>작성자:</strong> Adrian Garcia Badaracco</li>
<li><strong>스폰서:</strong> Jelle Zijlstra</li>
<li><strong>상태:</strong> Draft (초안)</li>
<li><strong>타입:</strong> Standards Track</li>
<li><strong>생성일:</strong> 2024년 5월 20일</li>
<li><strong>Python 버전:</strong> 3.15</li>
<li><strong>주제:</strong> Typing</li>
</ul>
<h3>도입 배경 (Motivation)</h3>
<p>PEP 593은 런타임 메타데이터를 타입에 첨부하는 방법으로 <code>Annotated</code>를 도입했습니다. 일반적으로 이 메타데이터는 정적 타입 체커를 위한 것이 아니지만, 그럼에도 불구하고 주어진 타입에 대해 메타데이터가 합리적인지 확인할 수 있으면 유용합니다.</p>
<p>예를 들어, PEP 593의 첫 번째 예시에서는 <code>Annotated</code>를 사용하여 필드에 직렬화 정보(<code>struct2.ctype("&#x3C;10s")</code>)를 첨부합니다.</p>
<pre><code class="language-python">class Student(struct2.Packed):
    name: Annotated[str, struct2.ctype("&#x3C;10s")]
</code></pre>
<p>이 <code>struct2.ctype("&#x3C;10s")</code> 메타데이터는 직렬화 라이브러리에서 필드를 직렬화하는 데 사용됩니다. 이러한 라이브러리는 특정 타입만 직렬화할 수 있으므로, <code>Annotated[list[str], struct2.ctype("&#x3C;10s")]</code>와 같이 작성하는 것은 의미가 없습니다. 그러나 현재 타입 시스템은 이를 강제할 방법이 없으며, 메타데이터는 타입 체커에 의해 완전히 무시됩니다.</p>
<p>이러한 유스 케이스는 <code>pydantic</code> 및 <code>msgspec</code>과 같은 라이브러리에서 <code>Annotated</code>를 사용하여 필드에 유효성 검사 및 변환 정보를 첨부하거나, <code>fastapi</code>에서 파라미터를 헤더, 쿼리 문자열 또는 의존성 주입에서 추출된 것으로 표시하는 데 사용됩니다.</p>
<h3>명세 (Specification)</h3>
<p>이 PEP는 <code>Annotated</code> 메타데이터와 주어진 타입 간의 일관성을 검증하기 위해 정적 및 런타임 타입 체커가 사용할 수 있는 프로토콜을 도입합니다. 이 프로토콜을 구현하는 객체는 메타데이터가 주어진 타입에 유효한지 여부를 지정하는 <code>__supports_annotated_base__</code>라는 속성을 가집니다.</p>
<pre><code class="language-python">class Int64:
    __supports_annotated_base__: int
</code></pre>
<p>이 속성은 <code>dataclasses</code>와의 상호작용을 피하기 위해 <code>ClassVar</code>로 표시될 수도 있습니다.</p>
<pre><code class="language-python">from dataclasses import dataclass
from typing import ClassVar

@dataclass
class Gt:
    value: int
    __supports_annotated_base__: ClassVar[int]
</code></pre>
<p>정적 타입 체커가 <code>Annotated[T, M1, M2, ...]</code> 형식의 타입 표현식을 만날 때, <code>M1, M2, ...</code>의 각 메타데이터 요소에 대해 다음 중 하나가 참인지 강제해야 합니다.</p>
<ol>
<li>메타데이터 요소가 <code>__supports_annotated_base__</code> 속성이 없는 객체로 평가되는 경우.</li>
<li>메타데이터 요소가 <code>__supports_annotated_base__</code> 속성을 가진 객체 <code>M</code>으로 평가되고, <code>T</code>가 <code>M.__supports_annotated_base__</code>의 타입에 할당 가능한 경우.</li>
</ol>
<p>제네릭 <code>Gt</code> 메타데이터를 지원하기 위해 다음과 같이 작성할 수 있습니다.</p>
<pre><code class="language-python">from typing import Protocol, ClassVar, Annotated

class SupportsGt[T](Protocol):
    def __gt__(self, __other: T) -> bool: ...

class Gt[T]:
    __supports_annotated_base__: ClassVar[SupportsGt[T]]
    def __init__(self, value: T) -> None:
        self.value = value

x1: Annotated[int, Gt(0)] = 1 # OK
x2: Annotated[str, Gt(0)] = "hello" # 타입 체커 오류: str은 SupportsGt[int]에 할당할 수 없습니다.
x3: Annotated[int, Gt(1)] = 0 # 정적 타입 체커에서는 OK; 런타임 타입 체커가 플래그할 수 있습니다.
</code></pre>
<h3>하위 호환성 (Backwards Compatibility)</h3>
<p>이 프로토콜을 구현하지 않는 메타데이터는 모든 타입에 대해 유효한 것으로 간주되므로, 기존 코드에 대한 호환성을 깨는 변경사항은 도입되지 않습니다. 새로운 검사는 이 PEP에 의해 지정된 프로토콜을 명시적으로 구현하는 메타데이터 객체에만 적용됩니다.</p>
<h3>보안 영향 (Security Implications)</h3>
<p>없습니다.</p>
<h3>교육 방법 (How to Teach This)</h3>
<p>이 프로토콜은 주로 <code>Annotated</code> 메타데이터를 제공하는 라이브러리를 위한 것입니다. 해당 라이브러리의 최종 사용자는 이 프로토콜을 직접 구현할 필요가 없을 것입니다. 이 프로토콜은 <code>typing.Annotated</code> 문서와 typing 명세에 언급되어야 합니다.</p>
<h3>채택되지 않은 아이디어 (Rejected Ideas)</h3>
<ul>
<li><strong>제네릭 클래스 대신 타입 변수 도입:</strong> <code>Annotated</code>의 내부 타입 <code>T</code>를 나타내기 위해 <code>AnnotatedT = TypeVar("AnnotatedT")</code>와 같은 특별한 타입 변수를 사용하는 방안이 고려되었으나, 이는 권장되지 않는 오래된 타입 변수 문법을 요구하고 타입 시스템의 다른 부분과 잘 맞지 않는 비정상적인 방식으로 타입 변수를 사용하게 됩니다.</li>
<li><strong>모든 메타데이터 객체가 서브클래싱해야 하는 새 타입 <code>typing.py</code>에 도입:</strong> 이전 버전의 이 PEP는 메타데이터 객체가 서브클래싱할 새로운 제네릭 베이스 클래스 <code>TypedMetadata[U]</code>를 추가할 것을 제안했습니다. 그러나 이 메커니즘은 언어의 나머지 부분과 잘 통합되지 않고, 파이썬은 일반적으로 마커 베이스 클래스를 사용하지 않습니다. 또한, 오버로드를 허용하지 않고 메타데이터 객체가 새로운 베이스 클래스를 추가해야 하여 런타임 구현을 더 복잡하게 만들 수 있어 현재 제안보다 유연성이 떨어집니다.</li>
<li><strong><code>__supports_annotated_base__</code>에 속성 대신 메서드 사용:</strong> 프로토콜에 속성 대신 메서드를 사용하여 런타임에 메타데이터의 유효성을 확인하고 오버로드 또는 부울 리터럴 반환을 지원하는 방안이 고려되었습니다. 그러나 메서드를 사용하면 구현에 상용구(boilerplate)가 추가되고, 런타임 유스 케이스 또는 오버로드 및 부울 리터럴 반환을 포함하는 더 복잡한 시나리오의 가치가 명확하지 않았습니다.</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Draft] PEP 746 - Type checking Annotated metadata"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:34:43+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
