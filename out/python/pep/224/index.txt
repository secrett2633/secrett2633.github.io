3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/224","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/224","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"224\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/224","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2175,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0224/">PEP 224 - Attribute Docstrings</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 23-Aug-2000</p>
</blockquote>
<h2>PEP 224 – 속성 Docstring (Attribute Docstrings)</h2>
<h3>개요</h3>
<p>PEP 224는 Python 2.0 버전을 대상으로 "속성 docstring" 제안을 설명하는 문서입니다. 이 PEP는 Python 코드 내의 명명된 할당(named assignments), 특히 클래스 속성(class attributes)에 docstring을 추가하여 코드 문서화를 개선하려는 목적을 가졌습니다. 하지만 이 PEP는 최종적으로 **거부(Rejected)**되었습니다.</p>
<p><strong>상태</strong>: 거부됨 (Rejected)
<strong>작성자</strong>: Marc-André Lemburg
<strong>생성일</strong>: 2000년 8월 23일
<strong>Python 버전</strong>: 2.1</p>
<h3>서론 (Introduction)</h3>
<p>이 PEP는 Python 2.0에 "속성 docstring" 기능을 도입하려는 제안을 담고 있습니다. 이는 해당 기능의 상태와 소유권을 추적하며, 기능에 대한 설명과 지원에 필요한 변경 사항을 개괄합니다.</p>
<h3>제안 배경 (Rationale)</h3>
<p>현재 Python은 클래스 정의, 함수 정의 또는 모듈의 첫 번째 문자열 리터럴 바로 다음에 오는 docstring만 처리합니다. 이러한 문자열 리터럴은 해당 객체의 <code>__doc__</code> 속성으로 추가되어, 도움말, 디버깅, 문서화 목적의 인트로스펙션(introspection) 도구에서 활용될 수 있습니다.</p>
<p>하지만 다른 위치에 나타나는 docstring은 단순히 무시되며 코드 생성에 영향을 주지 않습니다. 예를 들어:</p>
<pre><code class="language-python">class C:
    "클래스 C docstring"
    a = 1
    "속성 C.a docstring (1)"
    b = 2
    "속성 C.b docstring (2)"
</code></pre>
<p>위 예시에서 docstring (1)과 (2)는 현재 Python 바이트코드 컴파일러에 의해 무시되지만, 이들 앞에 오는 명명된 할당(named assignments)을 문서화하는 데 활용될 수 있습니다.</p>
<p>이 PEP는 이러한 경우에도 docstring을 활용하여, 새로운 생성된 속성 이름으로 그 내용을 해당 객체에 추가하는 의미론(semantics)을 제안했습니다. 이는 클래스 속성(class attributes)에 인라인(inline) 문서화를 가능하게 하는 것이 주요 아이디어였습니다. 현재는 클래스의 docstring이나 주석을 통해서만 속성을 문서화할 수 있으며, 주석은 인트로스펙션에 사용할 수 없습니다.</p>
<h3>구현 (Implementation)</h3>
<p>Docstring은 바이트코드 컴파일러에 의해 표현식(expressions)으로 처리됩니다. 기존 구현은 특정 위치의 docstring만 특별히 처리하고, 그 외의 문자열은 완전히 무시합니다.</p>
<p>명명된 할당(예: 클래스 속성 정의)을 문서화하기 위해 docstring을 활용하려면, 컴파일러가 마지막으로 할당된 이름을 추적해야 합니다. 그리고 이 이름을 기반으로 docstring 내용을 포함하는 객체의 속성에 저장하도록 제안되었습니다. 이를 위해 다음과 같은 이름 맹글링(name mangling) 스키마를 사용하여 docstring이 특정 할당에 속함을 고유하게 식별하고 나중에 네임스페이스(namespace) 검사를 통해 찾을 수 있도록 했습니다:</p>
<p><code>__doc_&#x3C;attributename>__</code></p>
<p>예를 들어, 위에 제시된 <code>class C</code> 예시의 경우 다음과 같은 새로운 클래스 속성이 생성될 것입니다:</p>
<p><code>C.__doc_a__ == "속성 C.a docstring (1)"</code>
<code>C.__doc_b__ == "속성 C.b docstring (2)"</code></p>
<h3>구현 시의 주의사항 (Caveats of the Implementation)</h3>
<p>제안된 구현 방식에는 몇 가지 주의할 점이 있었습니다. 예를 들어, 컴파일러가 함수 정의와 같은 비표현식(non-expression)을 처리할 때 컴파일 구조 변수를 재설정하지 않아, 다음 할당 또는 다음 docstring이 나타날 때까지 마지막 할당된 이름이 활성 상태로 유지될 수 있었습니다.</p>
<p>이는 docstring과 할당이 다른 표현식에 의해 분리될 수 있는 상황으로 이어질 수 있었습니다:</p>
<pre><code class="language-python">class C:
    "C doc string"
    b = 2
    def x(self):
        "C.x doc string"
        y = 3
        return 1
    "b's doc string" # 이 docstring은 의도치 않게 __doc_b__에 할당될 수 있음
</code></pre>
<p>위 예시에서 <code>def x(self):</code> 정의가 사용된 할당 이름 변수를 재설정하지 않기 때문에, 컴파일러가 마지막 docstring에 도달했을 때 <code>b</code>에 대한 docstring으로 할당될 수 있었습니다. 이에 대한 가능한 해결책은 컴파일러의 모든 비표현식 노드에 대해 이름 변수를 재설정하는 것이었습니다.</p>
<h3>발생 가능한 문제점 (Possible Problems)</h3>
<ol>
<li><strong>Docstring과 속성 값의 의도치 않은 연결</strong>: <code>x = "text" \ "x's docstring"</code>과 같이 역슬래시(<code>\</code>)로 인해 속성 값과 docstring이 연결될 수 있었습니다. 그러나 현대적인 구문 강조(syntax highlighting) 에디터를 사용하거나 속성 정의와 docstring 사이에 빈 줄을 삽입하면 이 문제는 쉽게 피할 수 있어 사소한 것으로 간주되었습니다.</li>
<li><strong>주석으로 사용된 삼중 따옴표 문자열</strong>: 만약 주석 문자열 시작 직전에 할당이 있다면, 컴파일러는 해당 주석을 docstring 속성으로 처리하고 위 로직을 적용할 수 있었습니다. 이는 문서화되지 않은 속성에 대한 docstring을 생성할 뿐, 기능적인 오류를 유발하지는 않았습니다.</li>
</ol>
<h3>BDFL (Guido van Rossum)의 의견 (Comments from our BDFL)</h3>
<p>Guido van Rossum (당시 BDFL, Benevolent Dictator For Life)은 이 제안에 대해 "속성 docstring" 아이디어 자체는 "어느 정도 마음에 들지만" (즉, 크게 중요하지는 않음), 두 가지 주요 불만이 있었습니다:</p>
<ol>
<li><strong>모호한 구문(Ambiguous syntax)</strong>: "홀로 있는 문자열 리터럴(stand-alone string literal)이 다른 용도로 사용될 수 있으며, 갑자기 속성 docstring이 될 수 있다"는 점을 지적했습니다.</li>
<li><strong>접근 방식 불만(Access method)</strong>: <code>__doc_&#x3C;attrname>__</code>과 같은 접근 방식에 대해서도 불만을 표했습니다.</li>
</ol>
<p>저자는 구문의 모호성은 컴파일러에 추가적인 검사를 도입하여 해결할 수 있다고 답했습니다. 또한 접근 방식에 대해서는 <code>__doc__</code>와 일치하기 위해 두 개의 밑줄로 시작하고, 인트로스펙션으로 추출 가능하며, 클래스 상속과 호환되는 다른 어떤 이름이든 가능하다고 설명했습니다.</p>
<p>그러나 2001년 3월, Guido는 이 PEP를 거부하며 다음과 같은 이유를 밝혔습니다:</p>
<blockquote>
<p>...유용할 수도 있지만, 제안된 구문이 정말 싫습니다.</p>
<p><code>a = 1</code>
<code>"foo bar"</code>
<code>b = 1</code></p>
<p><code>"foo bar"</code>가 <code>a</code>의 docstring인지 <code>b</code>의 docstring인지 알 방법이 전혀 없습니다.
...</p>
<p>이 컨벤션을 사용할 수 있습니다:</p>
<p><code>a = 1</code>
<code>__doc_a__ = "doc string for a"</code></p>
<p>이렇게 하면 런타임에 사용할 수 있습니다.</p>
<blockquote>
<p>Python에 속성 문서화를 추가하는 것에 완전히 반대하시나요, 아니면 구현 방식 때문인가요? 제가 PEP를 작성했을 당시에는 PEP에 제안된 구문이 매우 직관적이라고 생각했고, 많은 c.l.p 및 개인 이메일 사용자들도 지지했습니다.</p>
</blockquote>
<p>구현 때문이 아니라 구문 때문입니다. 변수와 docstring 사이에 충분히 명확한 연결을 전달하지 않습니다.</p>
</blockquote>
<p>결론적으로, Guido는 제안된 구문이 변수와 docstring 사이에 충분히 명확한 연결을 제공하지 않는다고 판단하여 PEP를 거부했습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 224 - Attribute Docstrings"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 16:43:48+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
