3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/726","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/726","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"726\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/726","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T29f0,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0726/">PEP 726 - Module__setattr__and__delattr__</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 24-Aug-2023</p>
</blockquote>
<p>PEP 726 – 모듈 <code>__setattr__</code> 및 <code>__delattr__</code></p>
<h2>초록 (Abstract)</h2>
<p>이 PEP는 모듈에 사용자 정의 <code>__setattr__</code> 및 <code>__delattr__</code> 메서드를 지원하여 PEP 562를 넘어선 모듈 속성 접근 사용자 정의를 확장할 것을 제안합니다.</p>
<h2>동기 (Motivation)</h2>
<p>모듈 <code>__setattr__</code>에는 몇 가지 잠재적인 사용 사례가 있습니다.</p>
<ul>
<li>속성 설정을 전적으로 방지(즉, 읽기 전용으로 만듦)</li>
<li>할당될 값의 유효성 검사</li>
<li>속성 설정을 가로채고 다른 상태 업데이트</li>
</ul>
<p>읽기 전용 속성에 대한 적절한 지원은 속성 삭제를 방지하기 위해 <code>__delattr__</code> 함수를 추가하는 것도 필요로 합니다.</p>
<p>기존의 <code>__getattr__</code> 및 <code>__dir__</code> 메서드와 함께, 이 제안은 모듈 인스턴스에 정의될 <code>object.__setattr__()</code> 및 <code>object.__delattr__()</code> 메서드처럼 작동하는 모듈 내 <code>__setattr__</code> 및 <code>__delattr__</code> 메서드를 인식하여 이러한 사용자 정의를 직접 지원하는 것이 편리할 것입니다. 이는 모듈 속성 접근 사용자 정의의 모든 변형을 간소화할 것입니다.</p>
<p><strong>예시:</strong></p>
<pre><code class="language-python"># mplib.py
CONSTANT = 3.14
prec = 53
dps = 15

def dps_to_prec(n):
    """Return the number of bits required to represent n decimals accurately."""
    return max(1, int(round((int(n)+1)*3.3219280948873626)))

def prec_to_dps(n):
    """Return the number of accurate decimals that can be represented with n bits."""
    return max(1, int(round(int(n)/3.3219280948873626)-1))

def validate(n):
    n = int(n)
    if n &#x3C;= 0:
        raise ValueError('Positive integer expected')
    return n

def __setattr__(name, value):
    if name == 'CONSTANT':
        raise AttributeError('Read-only attribute!')
    if name == 'dps':
        value = validate(value)
        globals()['dps'] = value
        globals()['prec'] = dps_to_to_prec(value)
        return
    if name == 'prec':
        value = validate(value)
        globals()['prec'] = value
        globals()['dps'] = prec_to_dps(value)
        return
    globals()[name] = value

def __delattr__(name):
    if name in ('CONSTANT', 'dps', 'prec'):
        raise AttributeError('Read-only attribute!')
    del globals()[name]
</code></pre>
<p>이 코드를 사용하면 다음과 같은 동작을 보입니다.</p>
<pre><code class="language-python">>>> import mplib
>>> mplib.foo = 'spam' # 새로운 속성 추가
>>> mplib.CONSTANT = 42 # 읽기 전용 속성 수정 시도
Traceback (most recent call last):
...
AttributeError: Read-only attribute!
>>> del mplib.foo # 속성 삭제
>>> del mplib.CONSTANT # 읽기 전용 속성 삭제 시도
Traceback (most recent call last):
...
AttributeError: Read-only attribute!
>>> mplib.prec
53
>>> mplib.dps
15
>>> mplib.dps = 5 # 'dps' 변경 시 'prec'도 연동되어 변경
>>> mplib.prec
20
>>> mplib.dps = 0 # 유효성 검사 실패
Traceback (most recent call last):
...
ValueError: Positive integer expected
</code></pre>
<h2>기존 대안 (Existing Options)</h2>
<p>현재의 해결 방법은 모듈 객체의 <code>__class__</code>를 <code>types.ModuleType</code>의 사용자 정의 서브클래스에 할당하는 것입니다.</p>
<p>예를 들어, 속성의 수정 또는 삭제를 방지하기 위해 다음을 사용할 수 있습니다.</p>
<pre><code class="language-python"># mod.py
import sys
from types import ModuleType

CONSTANT = 3.14

class ImmutableModule(ModuleType):
    def __setattr__(name, value):
        raise AttributeError('Read-only attribute!')
    def __delattr__(name):
        raise AttributeError('Read-only attribute!')

sys.modules[__name__].__class__ = ImmutableModule
</code></pre>
<p>그러나 이 방법은 제안된 솔루션보다 느리고(~2배), 속성 접근에 있어 눈에 띄는 속도 저하(~2-3배)를 야기합니다.</p>
<h2>명세 (Specification)</h2>
<p>모듈 레벨의 <code>__setattr__</code> 함수는 두 개의 인자(속성 이름과 할당될 값)를 받아야 하며, <code>None</code>을 반환하거나 <code>AttributeError</code>를 발생시켜야 합니다.</p>
<pre><code class="language-python">def __setattr__(name: str, value: typing.Any, /) -> None: ...
</code></pre>
<p><code>__delattr__</code> 함수는 하나의 인자(속성 이름)를 받아야 하며, <code>None</code>을 반환하거나 <code>AttributeError</code>를 발생시켜야 합니다.</p>
<pre><code class="language-python">def __delattr__(name: str, /) -> None: ...
</code></pre>
<p><code>__setattr__</code> 및 <code>__delattr__</code> 함수는 모듈의 <code>__dict__</code>에서 찾아집니다. 만약 존재하면, 속성 설정 또는 삭제를 사용자 정의하기 위해 해당 함수가 호출되고, 그렇지 않으면 일반적인 메커니즘(모듈 딕셔너리에 값 저장/삭제)이 작동합니다.</p>
<p>모듈 <code>__setattr__</code> 또는 <code>__delattr__</code>을 정의하는 것은 속성 접근 구문을 사용하여 이루어지는 조회에만 영향을 미칩니다. 모듈 전역(모듈 내 <code>globals()</code>를 통해 또는 모듈의 전역 딕셔너리 참조를 통해)에 직접 접근하는 것은 영향을 받지 않습니다.</p>
<p>예시:</p>
<pre><code class="language-python">>>> import mod
>>> mod.__dict__['foo'] = 'spam' # __setattr__를 우회합니다.
</code></pre>
<p>또는</p>
<pre><code class="language-python"># mod.py
def __setattr__(name, value):
    ...
foo = 'spam' # __setattr__를 우회합니다.
globals()['bar'] = 'spam' # 이 경우에도 마찬가지
def f():
    global x
    x = 123
f() # 여기도 마찬가지
</code></pre>
<p>모듈 전역을 사용하고 <code>__setattr__</code> (또는 <code>__delattr__</code>)를 트리거하려면, 모듈 코드 내에서 <code>sys.modules[__name__]</code>을 통해 접근할 수 있습니다.</p>
<pre><code class="language-python"># mod.py
sys.modules[__name__].foo = 'spam' # __setattr__를 트리거합니다.
</code></pre>
<p>이러한 제한은 의도된 것입니다(PEP 562와 마찬가지로). 인터프리터가 모듈 전역 접근을 고도로 최적화하기 때문에, 이를 모두 비활성화하고 Python으로 작성된 특별 메서드를 통과하는 것은 코드 속도를 용납할 수 없을 정도로 느리게 만들 것입니다.</p>
<h2>교육 방법 (How to Teach This)</h2>
<p>문서의 "모듈 속성 접근 사용자 정의" 섹션은 새로운 함수를 포함하도록 확장될 것입니다.</p>
<h2>참조 구현 (Reference Implementation)</h2>
<p>이 PEP의 참조 구현은 CPython PR #108261에서 찾을 수 있습니다.</p>
<h2>하위 호환성 (Backwards compatibility)</h2>
<p>이 PEP는 모듈 레벨(전역) 이름인 <code>__setattr__</code> 및 <code>__delattr__</code>을 사용하는 코드를 손상시킬 수 있지만, 언어 참조는 모든 문서화되지 않은 던더(dunder) 이름을 명시적으로 예약하고 "경고 없이 손상될 수 있음"을 허용합니다.</p>
<p>이 PEP의 성능 영향은 작습니다. 추가적인 딕셔너리 조회는 딕셔너리에 값을 저장/삭제하는 것보다 훨씬 저렴하기 때문입니다. 또한, 사용자가 성능 문제가 될 만큼 속성을 여러 번 설정(및/또는 삭제)할 것으로 예상되는 모듈을 상상하기 어렵습니다. 반면에, 제안된 메커니즘은 속성 접근 속도에 영향을 미치지 않으면서 속성 설정/삭제를 재정의할 수 있게 해줍니다. 이는 성능 저하가 발생할 가능성이 훨씬 높은 시나리오입니다.</p>
<h2>논의 (Discussion)</h2>
<p>Victor Stinner가 지적했듯이, 제안된 API는 표준 라이브러리(stdlib)에서 이미 유용하게 사용될 수 있습니다. 예를 들어, <code>sys.modules</code>의 타입이 항상 <code>dict</code>임을 보장하거나 중요한 <code>sys</code> 속성의 삭제를 방지하는 데 사용될 수 있습니다.</p>
<p>예를 들어, <code>sys.modules</code>를 정수로 변경하면 다음과 같은 오류가 발생합니다.</p>
<pre><code class="language-python">>>> import sys
>>> sys.modules = 123
>>> import asyncio
Traceback (most recent call last):
  File "&#x3C;stdin>", line 1, in &#x3C;module>
  File "&#x3C;frozen importlib._bootstrap>", line 1260, in _find_and_load
AttributeError: 'int' object has no attribute 'get'
</code></pre>
<p>또한, <code>sys.stderr</code>를 사용하는 코드는 속성이 존재하는지, 그리고 <code>None</code>이 아닌지 확인해야 합니다. 현재는 함수를 포함하여 모든 <code>sys</code> 속성을 제거할 수 있습니다.</p>
<pre><code class="language-python">>>> import sys
>>> del sys.excepthook
>>> 1+ # 다음 줄에 sys.excepthook이 없음을 주목하세요
sys.excepthook is missing
File "&#x3C;stdin>", line 1
  1+
   ^
SyntaxError: invalid syntax
</code></pre>
<p>다른 stdlib 모듈도 재정의될 수 있는 속성을 가지고 있으며(기능으로서), 일부 입력 유효성 검사가 도움이 될 수 있습니다. 예시로는 <code>threading.excepthook</code>, <code>warnings.showwarning</code>, <code>io.DEFAULT_BUFFER_SIZE</code> 또는 <code>os.SEEK_SET</code> 등이 있습니다.</p>
<p>또한, 모듈 속성 접근을 사용자 정의하는 일반적인 사용 사례는 비권장(deprecation) 경고를 관리하는 것입니다. 그러나 PEP 562는 이 시나리오를 부분적으로만 달성합니다. 예를 들어, 이름이 변경된 속성을 변경하려는 시도 중에 경고를 발행하는 것은 불가능합니다.</p>
<h2>각주 (Footnotes)</h2>
<p>모듈 속성 접근 사용자 정의 (Customizing module attribute access)
예약된 식별자 클래스 (Reserved classes of identifiers)</p>
<h2>저작권 (Copyright)</h2>
<p>이 문서는 퍼블릭 도메인에 있거나 CC0-1.0-Universal 라이선스 중 더 허용적인 조건으로 제공됩니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 726 - Module__setattr__and__delattr__"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:19:13+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
