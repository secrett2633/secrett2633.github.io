3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/235","c"]
0:["jf5MDuRUbMNVvRN9tv5rq",[[["",{"children":[["slug","python/pep/235","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"235\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/235","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1d35,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0235/">PEP 235 - Import on Case-Insensitive Platforms</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 21-Feb-2001</p>
</blockquote>
<h1>PEP 235 – 대소문자 구분 없는 플랫폼에서의 임포트 (Import on Case-Insensitive Platforms)</h1>
<h2>개요</h2>
<p>PEP 235는 파일 시스템이 대소문자를 구분하지 않지만 보존하는(case-preserving, case-insensitive) 플랫폼(예: Windows, MacOS X HFS+, Cygwin)에서 Python의 <code>import</code> 문 동작을 변경하는 제안입니다. 이 PEP는 주로 Python 2.1 릴리스 과정에서 발생한 문제를 해결하고, 플랫폼 간 일관성을 확보하여 크로스-플랫폼(cross-platform) 호환성을 개선하는 것을 목표로 합니다.</p>
<h2>배경 (Motivation)</h2>
<p>다양한 운영체제는 파일 시스템의 파일명 대소문자 처리 방식이 다릅니다.</p>
<ul>
<li><strong>대소문자 보존 및 구분 (Case-preserving, case-sensitive):</strong> 대부분의 Unix 계열 시스템. <code>fiLe</code>로 파일을 생성하면 <code>fiLe</code>로 저장되고, <code>open("fiLe")</code>만 해당 파일을 엽니다. <code>open("file")</code>은 열지 못합니다.</li>
<li><strong>대소문자 보존 및 구분 안 함 (Case-preserving, case-insensitive):</strong> Windows, MacOS X HFS+, Cygwin. <code>fiLe</code>로 파일을 생성하면 <code>fiLe</code>로 저장되지만, <code>open("fiLe")</code>, <code>open("file")</code> 등 대소문자를 무시한 모든 변형으로 파일을 열 수 있습니다.</li>
<li><strong>대소문자 파괴 및 구분 안 함 (Case-destroying, case-insensitive):</strong> 일부 오래된 네트워크 파일 시스템. <code>fiLe</code>로 파일을 생성하면 <code>FILE</code>처럼 대소문자가 파괴되어 저장될 수 있으며, 모든 대소문자 변형으로 파일을 열 수 있습니다.</li>
</ul>
<p><strong>중요:</strong> Python은 파일 생성 시 대소문자 보존 여부 및 <code>open()</code> 함수가 대소문자 일치를 요구하는지 여부 등 플랫폼의 파일 시스템 규칙을 계속 따릅니다. 개발자는 항상 대소문자를 구분하는 것처럼 코딩해야 프로그램의 이식성(portability)이 보장됩니다.</p>
<p>이 PEP에서 제안하는 변경 사항은 <strong>대소문자 보존 및 구분 안 함</strong> 플랫폼(즉, 위 표의 "lower left box")에서 Python의 <code>import</code> 문 동작에만 해당됩니다.</p>
<h2>기존 Windows의 <code>import</code> 동작 (Current Lower-Left Semantics - Windows)</h2>
<p>Python 2.1에서 MacOS X HFS+ 및 Cygwin에 대한 지원이 새로 추가되면서 문제가 발생하기 전까지, Windows의 <code>import</code> 규칙은 다음과 같았습니다.</p>
<ul>
<li>파일 시스템이 대소문자를 구분하지 않음에도 불구하고, Python은 기본적으로 대소문자를 구분하는 <code>import</code> 매칭을 고수했습니다.</li>
<li>만약 <code>sys.path</code>에 <code>FiLe.py</code>와 <code>file.py</code> 두 파일이 있고, <code>import file</code>을 시도했을 때 <code>FiLe.py</code>가 먼저 발견되면 <code>NameError</code>를 발생시켰습니다. 이때 <code>file.py</code>를 찾기 위해 진행하지 않았습니다.</li>
<li><strong>예외 1:</strong> <code>sys.path</code>에서 첫 번째로 대소문자를 무시하고 일치하는 파일 이름이 모두 대문자(예: <code>FILE.PY</code>)인 경우, <code>import</code> 문에 사용된 대소문자와 관계없이 해당 파일을 자동으로 임포트했습니다. 이는 오래된 파일 시스템을 지원하기 위한 것이었지만, Windows에만 존재하는 예외였습니다.</li>
<li><strong>예외 2:</strong> 환경 변수 <code>PYTHONCASEOK</code>가 존재하면, Python은 모든 종류의 첫 번째 대소문자를 무시한 일치를 자동으로 임포트했습니다.</li>
</ul>
<p>이러한 Windows 규칙은 복잡하고 Unix 규칙과도 다르며, Windows 파일 시스템의 자연스러운 의미론(semantics)과도 일치하지 않아 사용자들에게 설명하기 어려웠습니다. 하지만 MacOS X HFS+ 및 Cygwin 포트가 등장하면서, 이들 플랫폼의 개발자들은 Windows 규칙을 선호하지 않았고, 모든 플랫폼에서 동일한 규칙을 적용하여 Python의 일관성을 유지할 필요성이 대두되었습니다.</p>
<h2>제안된 새로운 <code>import</code> 동작 (Proposed Semantics)</h2>
<p><strong>대소문자 보존 및 구분 안 함</strong> 플랫폼(예: Windows, MacOS X HFS+, Cygwin)에 대해 제안되는 새로운 <code>import</code> 동작은 다음과 같습니다.</p>
<ol>
<li><strong><code>PYTHONCASEOK</code> 환경 변수가 존재할 경우:</strong> 이전과 동일하게 동작합니다. 모든 종류의 첫 번째 대소문자 무시 일치(case-insensitive match)를 조용히 수용합니다. 일치하는 것을 찾지 못하면 <code>ImportError</code>를 발생시킵니다.</li>
<li><strong><code>PYTHONCASEOK</code> 환경 변수가 없을 경우:</strong> <code>sys.path</code>에서 첫 번째 **대소문자 구분 일치(case-sensitive match)**를 검색합니다. 일치하는 것을 찾지 못하면 <code>ImportError</code>를 발생시킵니다.</li>
</ol>
<h3>변경의 영향 및 이점</h3>
<ul>
<li>규칙 #2는 Unix에서 사용되는 규칙과 동일하므로, 크로스-플랫폼 이식성을 크게 향상시킬 것입니다.</li>
<li>Mac 및 Cygwin 개발자들이 원했던 규칙이며, 이들이 직접 구현하려 했던 강력한 이유가 있었습니다.</li>
<li>기존의 예외 없는 Windows <code>import</code> 동작에는 영향을 미치지 않습니다. 기존 <code>import</code>는 <code>sys.path</code>에서 대소문자를 구분하는 일치를 먼저 찾았고, 새로운 규칙에서도 마찬가지일 것입니다.</li>
<li>이전에 <code>NameError</code>나 <code>ImportError</code>를 발생시켰던 예외적인 Windows <code>import</code>는 이제 계속 검색을 시도하여 성공하거나 <code>ImportError</code>를 발생시킬 것입니다.</li>
<li><code>PYTHONCASEOK</code> 변수는 Windows에 마운트된 대소문자를 파괴하는 파일 시스템을 지원하기 위해 필요하며, "자연스러운" Windows 동작을 선호하는 사용자들도 이를 설정하여 사용할 수 있습니다.</li>
</ul>
<h3>삭제되는 기능</h3>
<ul>
<li>모든 대문자 파일(예: <code>ALLCAPS.PY</code>)에 대한 자동 <code>import</code> 지원(기존 규칙의 예외 1)은 삭제될 예정입니다. 대소문자를 파괴하는 파일 시스템은 점점 사라지고 있으며, 이를 위한 지원은 복잡하기 때문입니다. <code>PYTHONCASEOK</code>를 통해 계속 지원은 하지만, 여러 개의 복잡한 해킹을 유지할 필요는 없다고 판단했습니다.</li>
</ul>
<p>이 PEP는 Python 2.1의 중요한 변경 사항 중 하나로, 파일 시스템의 다양성 속에서 Python <code>import</code> 시스템의 일관성과 이식성을 높이는 데 기여했습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 235 - Import on Case-Insensitive Platforms"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 17:03:34+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
