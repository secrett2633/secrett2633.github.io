3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-0249a4ed84fdbe73.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-ce60b0a6591d04ed.js"],""]
4:["slug","python/pep/713","c"]
0:["e6YNzZ2BVZ8NBZ6boXfWj",[[["",{"children":[["slug","python/pep/713","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"713\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/713","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2416,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0713/">PEP 713 - Callable Modules</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 20-Apr-2023</p>
</blockquote>
<p>PEP 713 – 호출 가능한 모듈 (Callable Modules)</p>
<p><strong>상태:</strong> 거부됨 (Rejected)
<strong>작성자:</strong> Amethyst Reese
<strong>후원자:</strong> Łukasz Langa
<strong>생성일:</strong> 2023년 4월 20일
<strong>Python 버전:</strong> 3.12</p>
<hr>
<h3>거부 공지 (Rejection Notice)</h3>
<p>PEP 713은 Python Steering Council에 의해 거부되었습니다. Steering Council은 일관성 측면에서 구현 가능하더라도, 이 PEP를 도입해야 할 설득력 있는 이유를 찾지 못했습니다. 그러나 이 아이디어가 미래에 다시 논의될 경우, 이 PEP는 유용한 사전 논의 자료로 활용될 수 있습니다.</p>
<h3>개요 (Abstract)</h3>
<p>현재 Python 모듈은 직접 호출할 수 없습니다. 클래스는 <code>__call__</code> 메서드를 정의하여 인스턴스 객체를 호출 가능하게 만들 수 있지만, 전역 모듈 스코프에 동일한 이름의 함수를 정의하는 것은 아무런 효과가 없으며, 해당 함수는 <code>module.__call__</code> 형태로 직접 임포트하거나 참조해야만 호출할 수 있습니다. PEP 562는 모듈을 위한 <code>__getattr__()</code> 및 <code>__dir__()</code> 지원을 추가했지만, <code>__getattr__</code>를 정의하여 <code>__call__</code>에 대한 값을 반환하더라도 모듈을 호출 가능하게 만들지는 못했습니다.</p>
<p>이 PEP는 모듈의 전역 네임스페이스에 <code>__call__</code> 객체(표준 함수 또는 임의의 호출 가능한 객체)를 정의함으로써 모듈을 직접 호출 가능하게 만드는 지원을 제안했습니다.</p>
<h3>동기 (Motivation)</h3>
<p>많은 모듈은 단 하나의 주된 기능을 제공하는 경우가 많습니다. 이러한 경우, 해당 인터페이스가 단일 호출 가능한 객체인 경우가 많으며, 모듈을 직접 임포트하여 호출 가능한 형태로 사용하는 것이 사용자에게 더 "Pythonic"한 인터페이스를 제공할 수 있습니다.</p>
<p><strong>예시:</strong></p>
<pre><code class="language-python"># user.py
import fancy

@fancy
def func(...):
    ...
</code></pre>
<p>현재 이러한 스타일의 인터페이스를 제공하려면 런타임에 모듈 객체를 수정하여 호출 가능하게 만들어야 합니다.</p>
<p>일반적으로 이는 <code>sys.modules</code>에서 모듈 객체를 호출 가능한 대체 객체(예: 함수 또는 클래스 인스턴스)로 교체하여 수행됩니다.</p>
<p><strong>예시 (기존 방식 1):</strong></p>
<pre><code class="language-python"># fancy.py
def fancy(...):
    ...
import sys
sys.modules[__name__] = fancy
</code></pre>
<p>이 방식은 <code>from module import member</code>와 같은 구문에서도 원본 모듈에 접근할 수 없게 만들며, <code>__doc__</code>, <code>__package__</code>, <code>__path__</code> 등과 같은 특수 모듈 속성들이 누락된 "모듈" 객체를 초래합니다.</p>
<p>또 다른 방법으로, 모듈 작성자는 모듈의 <code>__class__</code> 속성을 호출 가능한 인터페이스를 제공하는 커스텀 타입으로 오버라이드할 수 있습니다.</p>
<p><strong>예시 (기존 방식 2):</strong></p>
<pre><code class="language-python"># fancy.py
def fancy(...):
    ...
import sys
import types
class FancyModule(types.ModuleType):
    def __call__(self, *args, **kwargs):
        return fancy(*args, **kwargs)
sys.modules[__name__].__class__ = FancyModule
</code></pre>
<p>두 가지 접근 방식 모두 추가적인 보일러플레이트 코드(boilerplate)를 유발할 뿐만 아니라, 런타임에 모듈이 호출 가능하다는 것을 인식하지 못하는 타입 검사기(type checker)에서 오류가 발생하는 단점이 있습니다.</p>
<p><strong>타입 검사기 오류 예시:</strong></p>
<pre><code>$ mypy user.py
user.py:3: error: Module not callable [operator]
Found 1 error in 1 file (checked 1 source file)
</code></pre>
<h3>제안 사양 (Specification)</h3>
<p>모듈 객체가 호출될 때, <code>__call__</code> 객체가 발견되면( <code>__getattr__</code> 또는 <code>__dict__</code> 조회를 통해), 해당 객체는 주어진 인수로 호출됩니다.
만약 <code>__call__</code> 객체가 발견되지 않으면, 기존 동작과 일치하게 <code>TypeError</code>가 발생합니다.</p>
<p>다음 예시들은 모두 유효하고 호출 가능한 모듈로 간주되었을 것입니다.</p>
<p><strong>예시 1 (함수 사용):</strong></p>
<pre><code class="language-python"># hello.py
def __call__(*args, **kwargs):
    pass
</code></pre>
<p><strong>예시 2 (클래스 인스턴스 사용):</strong></p>
<pre><code class="language-python"># hello.py
class Hello:
    def __call__(self, *args, **kwargs):
        pass
__call__ = Hello() # 또는 __call__ = Hello
</code></pre>
<p><strong>예시 3 (<strong>getattr</strong> 사용):</strong></p>
<pre><code class="language-python"># hello.py
def hello():
    pass
def __getattr__(name):
    if name == "__call__":
        return hello
    raise AttributeError(f"module '{__name__}' has no attribute '{name}'")
</code></pre>
<p>첫 두 가지 방식이 타입 검사기와 같은 도구의 정적 분석을 더 쉽게 하기 때문에 일반적으로 선호되어야 합니다. 하지만 세 번째 방식도 구현의 일관성을 위해 허용될 수 있습니다. 이 제안의 의도는 임의의 호출 가능한 객체를 모듈의 <code>__call__</code> 속성에 할당하거나 모듈의 <code>__getattr__</code> 메서드에서 반환할 수 있도록 하여, 모듈 작성자가 사용자를 위해 모듈을 호출 가능하게 만드는 가장 적합한 메커니즘을 선택할 수 있도록 하는 것이었습니다.</p>
<h3>하위 호환성 및 성능 영향 (Backwards Compatibility and Impact on Performance)</h3>
<p>이 PEP는 하위 호환성 문제를 일으키지 않을 것으로 예상되었습니다. <code>__call__</code> 객체를 이미 포함하고 있는 모든 모듈은 이전과 동일하게 작동하며, 직접 호출될 수 있는 추가적인 기능만 갖게 될 것이었습니다. 기존 <code>__call__</code> 객체를 가진 모듈이 호출 시 <code>TypeError</code>를 발생시키는 기존 동작에 의존할 가능성은 낮다고 판단되었습니다.</p>
<p>이 PEP의 성능 영향은 최소화될 것으로 보았습니다. 왜냐하면 이는 새로운 인터페이스를 정의하기 때문입니다. 모듈을 호출하면 모듈 객체에서 <code>__call__</code> 이름에 대한 조회가 트리거됩니다. 호출 가능한 모듈을 만들기 위한 기존의 해결 방법들은 이미 일반 객체에 대한 이러한 동작에 의존하고 있으므로, 이러한 호출 가능한 모듈에 대해서도 유사한 성능을 보일 것이었습니다.</p>
<p>타입 검사기는 <code>__call__</code> 객체를 가진 모듈을 호출 가능한 것으로 처리하도록 업데이트되어야 했을 것입니다. 이는 호출 가능한 모듈을 지원하지 않는 이전 Python 버전을 대상으로 하는 코드를 검사할 때 타입 검사기에서 지원 가능해야 하며, 이러한 모듈도 모듈을 호출 가능하게 만들기 위해 위에서 언급된 해결 방법 중 하나를 포함할 것이라는 예상 하에 지원되어야 했을 것입니다.</p>
<h3>교육 방법 (How to Teach This)</h3>
<p>호출 가능한 타입(callable types)에 대한 문서에는 모듈이 목록에 포함되고, <code>__call__()</code>로 연결되는 링크가 추가될 예정이었습니다. "호출 가능한 객체 에뮬레이션(Emulating callable objects)" 문서에는 모듈 속성 접근 사용자 정의 섹션과 유사하게, 호출 가능한 모듈을 다루는 섹션이 예제 코드와 함께 포함될 예정이었습니다.</p>
<h3>참조 구현 (Reference Implementation)</h3>
<p>호출 가능한 모듈의 제안된 구현은 CPython PR #103742에서 확인 가능했습니다.</p>
<h3>거부된 아이디어 (Rejected Ideas)</h3>
<p><code>__getattr__</code> 및 <code>__dir__</code>의 도입과 <code>__call__</code> 사용을 가능하게 하려는 제안을 고려했을 때, <code>__or__</code>, <code>__iter__</code>와 같은 모든 특수 메서드 이름(Special method names)을 모듈에 허용할 가치가 있는지에 대한 논의가 있었습니다. 이는 완전히 바람직하지 않은 것은 아니었지만, 하위 호환성 문제의 가능성을 높이고, 이러한 다른 특수 메서드들은 <code>__call__</code>에 비해 라이브러리 작성자에게 유용성이 적을 것으로 판단되어 채택되지 않았습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1214,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 713 - Callable Modules"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:12:51+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
