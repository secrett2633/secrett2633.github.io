3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-19cfc001fdac3337.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-51594f997fc19690.js"],""]
4:["slug","python/pep/648","c"]
0:["FeyCvJug7In7AgUZlfHUx",[[["",{"children":[["slug","python/pep/648","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"648\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/648","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T305a,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0648/">PEP 648 - Extensible customizations of the interpreter at startup</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 30-Dec-2020</p>
</blockquote>
<h2>PEP 648: 인터프리터 시작 시 확장 가능한 사용자 정의</h2>
<h3>요약 (Abstract)</h3>
<p>이 PEP는 사용자가 시작 시 실행될 파일을 설치할 수 있도록 하여 인터프리터의 확장 가능한 사용자 정의를 지원하는 방법을 제안합니다.</p>
<h3>PEP 거부 (PEP Rejection)</h3>
<p>PEP 648은 사용 사례가 제한적이고 시작(startup) 시퀀스를 더 복잡하게 만든다는 이유로 스티어링 위원회에 의해 거부되었습니다.</p>
<h3>동기 (Motivation)</h3>
<p>시스템 관리자, 인터프리터를 재패키징하는 도구, 그리고 일부 라이브러리는 인터프리터 시작 시 특정 측면을 사용자 정의해야 할 필요가 있습니다.</p>
<p>현재 이러한 사용자 정의는 시스템 관리자의 경우 <code>sitecustomize.py</code> 파일을 통해 이루어지며, 라이브러리는 <code>pth</code> 파일을 활용합니다. 이 PEP는 동일한 기능을 더 사용자 친화적이고 구조화된 방식으로 달성하기 위한 방법을 제안했습니다.</p>
<h4><code>pth</code> 파일의 한계</h4>
<p><code>pth</code> 파일은 원래 <code>sys.path</code>에 추가 디렉터리를 추가하는 용도로 개발되었지만, <code>import</code>로 시작하는 코드 라인을 포함할 수 있으며, 이 코드는 <code>pth</code> 파일이 평가될 때 <code>exec()</code>를 통해 실행됩니다. 사용자들은 이 기능을 악용하여 필요한 사용자 정의를 수행해왔습니다 (예: <code>setuptools</code>, <code>betterexceptions</code>).</p>
<p>하지만 라이브러리 개발자에게는 다음과 같은 이유로 <code>pth</code> 파일을 사용하는 것이 이상적이지 않습니다.</p>
<ul>
<li>코드를 <code>import</code>로 시작하는 한 줄에 삽입해야 하므로 가독성이 떨어집니다.</li>
<li>인터프리터 사용자 입장에서는 <code>pth</code> 파일에 잠재적인 코드 실행이 분산되어 있어 시작 시 무엇이 실행되는지 파악하기 어렵습니다.</li>
<li><code>pth</code> 파일에서 코드 실행 기능을 제거하자는 여러 제안이 있었습니다.</li>
</ul>
<h4><code>sitecustomize.py</code>의 한계</h4>
<p><code>sitecustomize.py</code>는 허용 가능한 솔루션이지만, 시스템 및 인터프리터를 담당하는 한 명의 관리자가 있다고 가정합니다. 만약 시스템 관리자와 인터프리터 프로비저닝 담당자가 모두 사용자 정의를 추가하고 싶다면, 파일 내용을 합의하고 변경 사항을 통합해야 합니다.</p>
<p>이 PEP가 제안하는 변경 사항이 적용되면, 이들은 단일 <code>sitecustomize.py</code> 대신 기능별로 고유한 격리된 파일을 가질 수 있어, 인터프리터에서 어떤 수정이 일어나는지 사용자에게 더 명확한 이해를 제공할 수 있습니다.</p>
<h3>제안의 근거 (Rationale)</h3>
<p>이 PEP는 <code>site-packages</code> 또는 <code>user-site-packages</code> 내의 <code>__sitecustomize__</code>라는 이름의 디렉터리에서 발견된 모든 파일을 시작 시 실행함으로써 인터프리터의 확장 가능한 사용자 정의를 지원하도록 제안했습니다.</p>
<h4><code>__sitecustomize__</code> 명명 이유</h4>
<p>이 이름은 기존 <code>sitecustomize.py</code> 개념을 따르며, <code>sys.path</code> 내에 위치하므로 기존 <code>sitecustomize.py</code>와의 충돌을 방지하기 위해 이중 밑줄(<code>__</code>)을 사용했습니다.</p>
<h4><code>__sitecustomize__</code> 디렉터리 발견 시점</h4>
<p><code>__sitecustomize__</code> 디렉터리는 <code>site.addsitedir</code>의 일부로 <code>pth</code> 파일이 발견된 직후에 각 <code>site-packages</code> 경로에서 발견됩니다.</p>
<h4><code>__sitecustomize__</code> 내 파일 실행 순서</h4>
<p>각 <code>__sitecustomize__</code> 디렉터리를 발견할 때 파일들을 이름으로 정렬하여 실행하지만, 사용자가 실행 순서에 의존하지 않도록 권장합니다.</p>
<h4><code>pth</code> 파일과의 상호작용</h4>
<p><code>pth</code> 파일은 <code>sys.path</code>에 경로를 추가하는 데 사용될 수 있지만, <code>__sitecustomize__</code>는 <code>site-packages</code> 경로에서만 찾아지므로 <code>__sitecustomize__</code> 발견 과정에 영향을 주지 않습니다.</p>
<h4><code>__sitecustomize__</code> 내 파일 실행 방식</h4>
<p><code>__sitecustomize__</code> 디렉터리가 발견되면, 그 안에 있는 <code>.py</code> 확장자를 가진 모든 파일은 <code>io.open_code</code>로 읽히고 <code>exec</code> 함수를 사용하여 실행됩니다. 다른 파일 간의 예상치 못한 상호작용을 방지하기 위해 <code>exec</code> 함수에는 빈 딕셔너리가 <code>globals</code>로 전달됩니다.</p>
<h4>오류 처리</h4>
<p>파일 실행 중 발생하는 오류는 <code>verbose</code> 모드가 아니면 기록되지 않으며, 다른 파일의 평가를 중단시키지 않습니다.</p>
<h4>가상 환경(Virtual Environments)과의 상호작용</h4>
<p>새로운 <code>__sitecustomize__</code> 솔루션을 통해 인터프리터에 적용된 사용자 정의는 가상 환경 생성 시 <code>sitecustomize.py</code>와 유사하게 계속 작동합니다. 이는 <code>include-system-site-packages</code>가 활성화되지 않는 한 가상 환경으로 전파되지 않는 <code>pth</code> 파일과의 차이점입니다.</p>
<h4><code>sitecustomize.py</code> 및 <code>usercustomize.py</code>와의 상호작용</h4>
<p><code>sitecustomize</code>와 <code>usercustomize</code>는 제거되기 전까지 <code>pth</code> 파일과 유사하게 <code>__sitecustomize__</code> 이후에 실행됩니다.</p>
<h4>파일 명명 규칙</h4>
<p>패키지 간의 충돌을 피하기 위해 파일 이름에 패키지 이름을 포함하도록 권장되지만, <code>.py</code> 확장자로 끝나는 것만이 유일한 요구 사항입니다.</p>
<h4>시작 파일 비활성화</h4>
<p><code>site</code> 관련 모든 조작을 비활성화하는 <code>-S</code> 플래그를 사용하면 이 새 기능도 비활성화됩니다. 또한, 이 새 기능만 비활성화하기 위한 새로운 <code>-X disablesitecustomize</code> 옵션도 추가될 예정이었습니다.</p>
<h3>시작 시간에 미치는 영향 (Impact on startup time)</h3>
<p>이 기능이 Python 인터프리터 시작 시간에 미칠 영향에 대한 벤치마크 결과가 제시되었습니다.</p>
<ul>
<li>두 개의 <code>__sitecustomize__</code> 스크립트를 <code>sitecustomize.py</code> 및 <code>usercustomize.py</code>와 비교했을 때 인터프리터 속도가 0.3% 느려지는 것으로 예상됩니다. 이는 <code>sitecustomize.py</code> 및 <code>usercustomize.py</code>가 향후 릴리스에서 제거될 때까지 지속될 것으로 보입니다.</li>
<li>임의의 50개 <code>pth</code> 파일에 포함된 코드를 <code>__sitecustomize__</code>로 옮겼을 때 시작 시간이 약 3.5% 빨라지는 결과를 보였습니다. 이는 <code>pth</code> 파일 실행에 비해 <code>__sitecustomize__</code> 파일 평가 로직이 더 단순하기 때문일 수 있습니다.</li>
<li>전반적으로 모든 측정치는 이 추가 기능이 시작 시간에 미치는 영향이 적음을 보여줍니다.</li>
</ul>
<h3>감사 이벤트 (Audit Event)</h3>
<p><code>__sitecustomize__</code> 실행 시 <code>sys.audit</code>을 <code>sitecustimze.exec_file</code> 이름과 파일 이름을 인수로 호출하여 새로운 감사 이벤트가 추가될 예정이었습니다.</p>
<h3>보안 영향 (Security implications)</h3>
<p>이 PEP는 <code>pth</code> 파일의 모든 코드 실행을 <code>__sitecustomize__</code> 디렉터리 내 파일로 옮기는 것을 목표로 합니다. 이는 시스템 관리자에게 다음과 같은 개선 사항을 제공합니다.</p>
<ul>
<li>모든 <code>pth</code> 파일을 스캔할 필요 없이 단일 디렉터리를 확인하여 인터프리터 시작 시 실행되는 코드를 빠르게 식별할 수 있습니다.</li>
<li>새로운 감사 이벤트를 통해 이 기능의 사용을 추적할 수 있습니다.</li>
<li><code>__sitecustomize__</code> 디렉터리에 대한 권한을 미세 조정하여 사용자가 인터프리터 시작을 변경하지 않는 패키지만 설치할 수 있도록 합니다.</li>
</ul>
<p>요약하자면, 악의적인 사용자가 시작 시 실행될 파일을 배치할 수 있지만, 기존 <code>pth</code> 파일에 비하면 개선된 사항입니다.</p>
<h3>교육 방법 (How to teach this)</h3>
<p>인터프리터가 시작 시 <code>site</code> 경로에서 <code>__sitecustomize__</code> 디렉터리를 찾고, <code>.py</code> 확장자를 가진 파일을 발견하면 하나씩 실행할 것이라고 간단하게 설명할 수 있습니다.</p>
<p>시스템 관리자 및 인터프리터 패키징 도구는 <code>sitecustomize.py</code>를 배치했던 것처럼 <code>__sitecustomize__</code>에 파일을 배치하도록 권장할 수 있습니다.</p>
<p>라이브러리 개발자는 <code>setuptools</code>와 같은 도구에 <code>sitecustomize_files=["scripts/betterexceptions.py"]</code>와 같은 새 인수를 지정하여 파일을 주입할 수 있어야 합니다.</p>
<h3>하위 호환성 (Backward compatibility)</h3>
<p>이 PEP는 3.11, 3.12, 3.13 버전에서 <code>sitecustomize.py</code>, <code>usercustomize.py</code>, 그리고 <code>pth</code> 코드 실행에 대한 <code>deprecation warning</code>을 추가하고, 3.14 버전까지 해당 기능들을 제거할 계획이었습니다.</p>
<p>기존 <code>sitecustomize.py</code>는 <code>site</code> 경로에 배치되는 시스템 관리자를 대상으로 했지만, 실제로는 인터프리터 시작 시 경로의 어느 곳에나 배치될 수 있었습니다. 새 메커니즘은 <code>__sitecustomize__</code> 디렉터리를 <code>site</code> 경로에만 허용합니다. 시스템 관리자는 <code>sitecustomize</code>를 import하는 사용자 정의 파일을 <code>__sitecustomize__</code>에 추가하여 유사한 동작을 복구할 수 있습니다.</p>
<h3>거부된 아이디어 (Rejected Ideas)</h3>
<ul>
<li><strong>아무것도 하지 않음 (Do nothing):</strong> 현재 상태는 작동하지만, 동기 섹션에 나열된 문제점들을 가지고 있습니다.</li>
<li><strong><code>pth</code> 파일 사용을 공식화 (Formalize using pth files):</strong> <code>pth</code> 파일을 사용하여 시작 시 코드를 주입하는 것을 공식화하는 것은 동기 섹션에서 언급된 대로 사용자에게 최적이 아닌 경험을 제공합니다.</li>
<li><strong><code>__sitecustomize__</code>를 네임스페이스 패키지로 만들기 (Making <strong>sitecustomize</strong> a namespace package):</strong> 디렉터리를 네임스페이스 패키지로 만들고 그 안에 있는 모든 모듈을 import하는 것을 고려했지만, 임의의 파일이 실행되는 경로 목록을 불필요하게 확장하고 추가적인 복잡성을 초래하여 거부되었습니다.</li>
<li><strong>종료 사용자 정의 지원 (Support for shutdown customization):</strong> Python 사용자들은 이미 <code>atexit</code>을 통해 종료 시 코드를 추가할 수 있으므로 추가 지원이 필요하지 않다고 판단했습니다.</li>
<li><strong><code>entry_points</code> 사용 (Using entry_points):</strong> <code>entry points</code>를 사용하여 시작 시 실행해야 할 파일을 지정하는 방안도 고려되었으나, 시작 시간에 미치는 영향과 패키지 배포 정보를 스캔하는 데 필요한 성능 저하 때문에 거부되었습니다.</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1098,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 648 - Extensible customizations of the interpreter at startup"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 01:37:58+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
