3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/758","c"]
0:["jf5MDuRUbMNVvRN9tv5rq",[[["",{"children":[["slug","python/pep/758","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"758\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/758","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2259,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0758/">PEP 758 - Allowexceptandexcept*expressions without parentheses</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 30-Sep-2024</p>
</blockquote>
<h2>PEP 758 – <code>except</code> 및 <code>except*</code> 표현식에서 괄호 없이 사용 허용</h2>
<p><strong>저자:</strong> Pablo Galindo, Brett Cannon
<strong>상태:</strong> Final
<strong>타입:</strong> Standards Track
<strong>생성일:</strong> 2024년 9월 30일
<strong>Python 버전:</strong> 3.14
<strong>해결일:</strong> 2025년 3월 14일</p>
<hr>
<h3>초록 (Abstract)</h3>
<p>이 PEP는 Python의 예외 처리 구문에서 <code>as</code> 절을 사용하지 않을 경우에 한해, <code>except</code> 및 <code>except*</code> 블록에서 괄호 없는(unparenthesized) 표현식 사용을 허용할 것을 제안합니다. 현재 여러 예외를 처리할 때 예외 타입 주변에 괄호가 필요하며, 이는 Python 2의 잔재였습니다. 이 PEP는 이러한 괄호의 생략을 허용하여 구문을 단순화하고, 괄호가 선택적인 다른 구문과의 일관성을 높이며, 특정 경우에 가독성을 향상시키는 것을 목표로 합니다.</p>
<h3>동기 (Motivation)</h3>
<p>현재 여러 예외를 catch(포착)하기 위한 구문은 <code>except</code> 표현식 (및 <code>except*</code> 표현식)에 괄호를 요구합니다. 예를 들면 다음과 같습니다:</p>
<pre><code class="language-python">try:
    ...
except (ExceptionA, ExceptionB, ExceptionC):
    ...
</code></pre>
<p>이 구문은 명확하고 모호하지 않지만, 특히 많은 수의 예외를 처리할 때 불필요하게 장황하게 느껴질 수 있습니다. 괄호 생략을 허용함으로써 구문을 다음과 같이 단순화할 수 있습니다:</p>
<pre><code class="language-python">try:
    ...
except ExceptionA, ExceptionB, ExceptionC:
    ...
</code></pre>
<p>이 변경은 함수 인자, 함수 호출 내의 제너레이터 표현식, 튜플 리터럴과 같이 괄호가 선택적인 Python의 다른 쉼표로 구분된(comma-separated) 목록과 구문이 더욱 일치하도록 만들 것입니다.</p>
<p>동일한 변경이 <code>except*</code> 표현식에도 적용됩니다. 예를 들면 다음과 같습니다:</p>
<pre><code class="language-python">try:
    ...
except* ExceptionA, ExceptionB, ExceptionC:
    ...
</code></pre>
<p>예외 인스턴스를 캡처하기 위해 <code>as</code> 절을 사용할 때는 이전과 마찬가지로 괄호를 사용해야 합니다. 일부 사용자들은 괄호를 요구하지 않으면 어떤 것이 정확히 대상에 할당되는지 불분명하여 혼란스러울 수 있다고 표명했습니다. 이는 언어의 다른 부분에서 비슷한 상황(예: <code>import</code> 및 <code>context manager</code>)에서 여러 <code>as</code> 절이 사용될 수 있기 때문입니다. 즉, 이전 예제에 <code>as</code> 절이 추가되는 경우 다음과 같이 해야 합니다:</p>
<pre><code class="language-python">try:
    ...
except (ExceptionA, ExceptionB, ExceptionC) as e:
    ...
</code></pre>
<h3>이론적 근거 (Rationale)</h3>
<p>괄호 없는 <code>except</code> 블록을 허용하기로 한 결정은 다음 고려 사항을 기반으로 합니다:</p>
<ul>
<li><strong>단순성 (Simplicity):</strong> 괄호 요구 사항을 제거하면 구문이 단순해지고 언어의 다른 부분과 더욱 일관성을 갖게 됩니다.</li>
<li><strong>가독성 (Readability):</strong> 많은 예외를 처리하는 경우 괄호 제거는 시각적 혼란을 줄여 가독성을 향상시킬 수 있습니다.</li>
<li><strong>일관성 (Consistency):</strong> 이 변경은 모호하지 않은 쉼표로 구분된 목록이 괄호를 요구하지 않는 Python의 다른 부분과 <code>except</code> 절을 더욱 일관성 있게 만듭니다.</li>
</ul>
<h3>명세 (Specification)</h3>
<p><code>except</code> 절의 구문은 괄호 없는 예외 타입 목록을 허용하도록 수정됩니다. 문법은 다음과 같이 업데이트될 것입니다:</p>
<pre><code>except_block:
    | 'except' expressions ':' block
    | 'except' expression 'as' NAME ':' block
    | 'except' ':' block
except_star_block
    | 'except' '*' expressions ':' block
    | 'except' '*' expression 'as' NAME ':' block
</code></pre>
<p>이는 <code>as</code> 키워드를 사용할 때 괄호를 요구하면서 현재의 괄호 있는 구문과 새로운 괄호 없는 구문을 모두 허용합니다:</p>
<pre><code class="language-python">try:
    ...
except (ExceptionA, ExceptionB):  # 여전히 유효함
    ...
except ExceptionC, ExceptionD:    # 새로운 구문
    ...
except (ExceptionE, ExceptionF) as e: # 괄호는 여전히 필수
    ...
</code></pre>
<p>예외 처리의 의미는 변경되지 않습니다. 인터프리터는 괄호로 묶였든 그렇지 않든 나열된 예외 중 하나를 catch할 것입니다.</p>
<h3>하위 호환성 (Backwards Compatibility)</h3>
<p>이 변경은 완전히 하위 호환됩니다. 괄호로 묶인 <code>except</code> 및 <code>except*</code> 블록을 사용하는 모든 기존 코드는 수정 없이 계속 작동합니다. 새로운 구문은 순전히 추가적(additive)이며 기존 코드를 손상시키지 않습니다.</p>
<p>Python 2에서는 괄호 없는 구문이 두 요소와 함께 허용되었지만, 첫 번째 요소가 예외 타입으로 사용되고 두 번째 요소가 캡처 변수로 사용되는 다른 의미를 가졌다는 점을 주목할 가치가 있습니다. 이 변경은 Python 2의 의미를 다시 도입하지 않으며, 괄호 없는 구문은 괄호 있는 버전과 동일하게 동작할 것입니다.</p>
<h3>보안 영향 (Security Implications)</h3>
<p>이 변경으로 인한 알려진 보안 영향은 없습니다. 예외 처리의 의미는 동일하게 유지되며, 이는 순전히 구문적(syntactic) 변경입니다.</p>
<h3>교육 방법 (How to Teach This)</h3>
<p>새로운 Python 사용자에게는 괄호 없는 구문을 여러 예외를 catch하는 표준적인 방법으로 가르칠 수 있습니다:</p>
<pre><code class="language-python">try:
    risky_operation()
except ValueError, TypeError, OSError:
    handle_errors()
</code></pre>
<p>경험이 많은 사용자에게는 괄호 있는 버전과 상호 교환적으로 사용할 수 있는 새로운 선택적 구문으로 소개할 수 있습니다. 문서는 두 형식이 동등함을 명시해야 합니다:</p>
<pre><code class="language-python"># 다음은 동등합니다:
except (ValueError, TypeError):
    ...
except ValueError, TypeError:
    ...
</code></pre>
<p>이것이 순전히 구문적 변경이며 예외 처리의 동작에는 영향을 미치지 않는다는 점을 강조해야 합니다.</p>
<h3>참조 구현 (Reference Implementation)</h3>
<p>개념 증명(proof-of-concept) 구현은 https://github.com/pablogsal/cpython/commits/notuples/ 에서 확인할 수 있습니다. 이 구현은 Python 파서를 수정하여 새로운 구문을 받아들이고 괄호 있는 버전과 동일하게 동작하도록 보장합니다.</p>
<h3>기각된 아이디어 (Rejected Ideas)</h3>
<p><strong>괄호 있는 구문과 괄호 없는 구문 혼용 허용:</strong></p>
<pre><code class="language-python">try:
    ...
except (ValueError, TypeError), OSError:
    ...
</code></pre>
<p>이것은 혼란을 야기할 가능성과 두 스타일 간의 명확한 구분을 유지하기 위해 기각되었습니다.</p>
<h3>보류된 아이디어 (Deferred Ideas)</h3>
<p><code>as</code> 키워드를 사용할 때 괄호 없는 표현식을 허용하는 것. 이 특정 형식은 명확한 합의가 없으며 양측 모두에 합리적인 주장이 있으므로 보류하기로 결정했습니다. 괄호 요구 사항을 유지하는 것이 가장 안전한 접근 방식입니다. 왜냐하면 사용자에게 불일치가 너무 심하다고 판단될 경우 나중에 제거할 수 있지만, 제거했다가 사용자들이 나쁜 아이디어라고 판단하면 다시 되돌리기가 쉽지 않기 때문입니다.</p>
<h3>각주 (Footnotes)</h3>
<p>원래 이름은 "Parenthetically Speaking, We Don't Need 'Em" 이었습니다.</p>
<h3>저작권 (Copyright)</h3>
<p>이 문서는 퍼블릭 도메인에 있거나 CC0-1.0-Universal 라이선스 중 더 관대한 라이선스에 따라 제공됩니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 758 - Allowexceptandexcept*expressions without parentheses"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:43:13+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
