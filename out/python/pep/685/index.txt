3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/685","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/685","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"685\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/685","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2259,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0685/">PEP 685 - Comparison of extra names for optional distribution dependencies</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 08-Mar-2022</p>
</blockquote>
<h1>PEP 685 – 선택적 배포 종속성(<code>extra name</code>) 비교를 위한 이름 정규화</h1>
<h2>개요 (Abstract)</h2>
<p>이 PEP는 배포 <code>extra name</code>을 비교할 때 어떻게 이름을 정규화해야 하는지를 명시합니다. 이를 통해 도구들이 <code>extra name</code>을 찾지 못하거나, 의도치 않게 다른 이름과 일치하는 것을 방지합니다.</p>
<h2>도입 배경 (Motivation)</h2>
<p><code>Provides-Extra</code> 코어 메타데이터 사양은 <code>extra</code>의 이름이 "유효한 Python 식별자(identifier)여야 한다"고 명시하고 있습니다. 그러나 <code>extra name</code>이 비교를 위해 어떻게 작성되거나 정규화되어야 하는지에 대한 다른 PyPA(Python Packaging Authority) 사양은 존재하지 않았습니다.</p>
<p>기존 패키징 관련 코드의 양을 고려할 때, 커뮤니티의 현재 관행을 평가하고 대부분의 기존 코드를 손상시키지 않으면서 도구 작성자들이 따를 수 있는 표준을 제정하는 것이 중요했습니다. <code>adhoc-ssl</code> <code>extra</code> 이름이 <code>pip 22</code>에서 <code>adhoc_ssl</code>과 동일하게 간주되지 않는다는 초기 논의에서 일관된 표준이 없다는 문제가 제기되었습니다.</p>
<h2>선택 이유 (Rationale)</h2>
<p>PEP 503은 배포 이름(<code>distribution name</code>)을 <code>re.sub(r"[-_.]+", "-", name).lower()</code>와 같이 정규화하는 방법을 명시하고 있습니다. 이 방법은 <code>-</code>, <code>_</code>, <code>.</code> 문자들의 연속을 하나의 <code>-</code>로 축소시킵니다. 하지만 이는 코어 메타데이터 2.2 사양의 <code>extra name</code>에 대한 유효한 Python 식별자를 생성하지 않습니다.</p>
<p><code>setuptools 60</code>은 <code>re.sub(r'[^A-Za-z0-9-.]+', '_', name).lower()</code>를 통해 정규화를 수행합니다. 이 방법은 <code>PEP 503</code>이 하이픈(<code>-</code>)을 사용하는 것과 달리 밑줄(<code>_</code>)을 사용하며, <code>PEP 508</code>에서 허용하는 문자 외의 문자도 정규화합니다.</p>
<p><code>pip 22</code>의 "extra 정규화 동작은 상당히 복잡하고 불규칙하다"는 평가 때문에 고려되지 않았습니다.</p>
<p>PEP 685는 <code>PEP 508</code>과 <code>PEP 503</code>의 이름 정규화 방식을 따르기로 결정했습니다. 이는 광범위한 기존 이름에 대한 하위 호환성을 유지하면서 장기적으로 더 간결하고 일관된 표준을 제공합니다.</p>
<h2>사양 (Specification)</h2>
<p><code>extra name</code>을 비교할 때, 도구는 <code>PEP 503</code>에서 이름에 대해 정의한 <code>re.sub(r"[-_.]+", "-", name).lower()</code> 의미론을 사용하여 비교 대상 이름을 <strong>반드시(MUST)</strong> 정규화해야 합니다.</p>
<p>코어 메타데이터 사양은 <code>Provides-Extra</code>에 허용되는 이름이 <code>PEP 508</code>이 이름에 대해 명시하는 것과 일치하도록 업데이트될 것입니다. 이는 <code>extra name</code>이 <code>Name</code> 필드와 일치하게 만듭니다. 이 변경으로 인해 코어 메타데이터 버전은 <code>2.3</code>으로 증가할 것입니다.</p>
<p>코어 메타데이터를 작성하는 도구는 <code>extra name</code>을 정규화된 형식으로 <strong>반드시(MUST)</strong> 작성해야 합니다. 이는 <code>Provides-Extra</code> 필드와 <code>Requires-Dist</code> 필드에서 사용될 때의 <code>extra</code> 마커에 적용됩니다.</p>
<p>메타데이터를 생성하는 도구는 사용자가 동일한 이름으로 정규화되는 두 개 이상의 <code>extra name</code>을 지정한 경우 오류를 <strong>반드시(MUST)</strong> 발생시켜야 합니다. 또한, 지정된 코어 메타데이터 버전에 적합하지 않은 유효하지 않은 <code>extra name</code>이 제공되면 오류를 <strong>반드시(MUST)</strong> 발생시켜야 합니다. 프로젝트의 메타데이터가 이전 코어 메타데이터 버전을 지정하고 이름이 최신 코어 메타데이터 버전에서는 유효하지 않은 경우, 해당 메타데이터를 읽는 도구는 사용자에게 경고를 <strong>해야 합니다(SHOULD)</strong>. 도구는 유효하지 않은 <code>extra name</code>을 읽을 때 사용자에게 경고를 <strong>해야 하며(SHOULD)</strong>, 모호함을 피하기 위해 해당 이름을 무시해야 합니다. 도구는 원한다면 유효하지 않은 이름을 읽을 때 경고 대신 오류를 발생시킬 <strong>수 있습니다(MAY)</strong>.</p>
<h2>하위 호환성 (Backwards Compatibility)</h2>
<p><code>PEP 503</code> 정규화 및 <code>PEP 508</code> 이름 허용으로 전환함으로써 모든 기존의 유효한 이름은 계속 유효합니다.</p>
<p>PyPI의 휠(wheel) 컬렉션을 조사한 결과, <code>extra name</code> 충돌 위험은 PyPI의 모든 <code>extra name</code>(유효 여부 불문, 단일 패키지 내만 고려하지 않음)을 고려할 때 73개 인스턴스로 제한되며, 유효한 이름만 볼 경우 단 3개의 충돌만 발생합니다:</p>
<ul>
<li><code>dev-test</code> : <code>dev_test</code>, <code>dev-test</code>, <code>dev.test</code></li>
<li><code>dev-lint</code> : <code>dev-lint</code>, <code>dev.lint</code>, <code>dev_lint</code></li>
<li><code>apache-beam</code> : <code>apache-beam</code>, <code>apache.beam</code></li>
</ul>
<p>코어 메타데이터를 작성하는 도구가 정규화된 이름만 기록하도록 요구함으로써, 기존의 유효하지 않은 <code>extra name</code> 문제는 시간이 지남에 따라 줄어들 것입니다.</p>
<h2>보안 영향 (Security Implications)</h2>
<p>충돌하는 <code>extra name</code>을 가진 배포판의 경우, 도구가 시스템의 보안을 약화시킬 수 있는 종속성을 설치하게 될 가능성이 있습니다. 이는 가설적인 시나리오이며, 발생하더라도 종속성을 함께 가져온 배포판보다는 그러한 <code>extra name</code>을 지정하는 배포판의 보안 문제일 가능성이 더 높습니다.</p>
<h2>교육 방법 (How to Teach This)</h2>
<p>이 변경사항은 사용자들에게 일상적으로 투명하게 적용될 것입니다. 충돌하는 <code>extra name</code>을 선택할 때 사용자에게 교육하거나 중단시키는 것은 도구들의 역할입니다.</p>
<h2>참조 구현 (Reference Implementation)</h2>
<p>위 코드 외에 별도의 참조 구현은 제공되지 않지만, <code>packaging</code> 프로젝트의 <code>packaging.utils</code> 모듈에서 <code>extra name</code> 정규화 및 비교 기능을 제공할 것으로 예상됩니다. 만약 이 프로젝트가 메타데이터를 작성하는 기능을 얻게 된다면, 이 PEP도 구현할 것입니다.</p>
<h2>전환 계획 (Transition Plan)</h2>
<p>빌드 도구가 버전 2.3 및 이 PEP에 부합하는 코어 메타데이터를 생성하지만, 이 PEP를 알지 못하는 도구(해당 도구가 직접 지원하지 않는 코어 메타데이터 버전을 읽으려고 시도하는 경우)에 의해 소비될 위험이 있습니다. 이러한 경우, 사용자가 이전에 작동했지만 이제는 실패하는 비정규화된 이름으로 <code>extra</code>를 지정할 가능성이 있습니다.</p>
<p>따라서, 사용자가 정규화되지 않은 <code>extra name</code>을 지정하고 있음을(따라서 미래에 문제가 될 수 있음을) 알릴 수 있도록, 이 PEP의 소비자(consumer)가 생산자(producer)보다 우선적으로 업데이트되어야 합니다.</p>
<h2>기각된 아이디어 (Rejected Ideas)</h2>
<h3><code>setuptools 60</code>의 정규화 사용</h3>
<p>처음에는 하위 호환성 문제를 최소화하기 위해 <code>setuptools</code>의 <code>safe_extra()</code>를 정규화에 사용할 것을 제안했습니다. 그러나 PyPI의 다양한 휠을 확인한 결과, 모든 이름을 <code>PEP 508</code> 및 <code>PEP 503</code> 의미론으로 표준화하는 것이 하위 호환성 문제를 최소화하면서 장기적으로 더 쉽고 나은 방법이라는 것이 명확해졌습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 685 - Comparison of extra names for optional distribution dependencies"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 10:12:15+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
