3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-19cfc001fdac3337.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-51594f997fc19690.js"],""]
4:["slug","python/pep/549","c"]
0:["FeyCvJug7In7AgUZlfHUx",[[["",{"children":[["slug","python/pep/549","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"549\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/549","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1ac1,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0549/">PEP 549 - Instance Descriptors</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 04-Sep-2017</p>
</blockquote>
<h2>PEP 549 – 인스턴스 디스크립터 (Instance Descriptors)</h2>
<ul>
<li><strong>작성자:</strong> Larry Hastings</li>
<li><strong>상태:</strong> Rejected (거부됨)</li>
<li><strong>생성일:</strong> 2017년 9월 4일</li>
<li><strong>Python 버전:</strong> 3.7</li>
<li><strong>요약:</strong> 이 PEP는 인스턴스의 멤버에 대해서도 디스크립터 프로토콜을 사용할 수 있도록 Python의 디스크립터 프로토콜 확장을 제안합니다. 이는 모듈 내에서 <code>property</code>를 사용하는 것을 가능하게 할 것입니다.</li>
</ul>
<h3>거부 통지 (Rejection Notice)</h3>
<p>이 PEP는 Python-Dev 메일링 리스트에서 논의된 후 거부되었습니다.</p>
<h3>개요 (Abstract)</h3>
<p>Python의 디스크립터 프로토콜은 디스크립터가 객체 "타입(type)"의 멤버여야 한다고 요구합니다. 이 PEP는 디스크립터 프로토콜을 "인스턴스(instance)"의 멤버에 대해서도 사용할 수 있도록 확장할 것을 제안합니다. 이는 모듈 내에서 <code>property</code>를 사용하는 것을 허용할 것입니다.</p>
<h3>제안 배경 (Rationale)</h3>
<p>Python의 디스크립터 프로토콜은 프로그래머들이 우아한 API를 설계하도록 돕습니다. 예를 들어, 클래스가 데이터와 유사한 멤버를 지원하고, 나중에 이 멤버의 값이 변경될 때 코드를 실행해야 할 수도 있다면, 현재로서는 이를 클래스의 간단한 데이터 멤버로 선언하도록 권장됩니다. 만약 미래에 코드를 실행해야 할 필요가 생긴다면, API를 변경하지 않고도 이를 <code>property</code>로 바꿀 수 있습니다.</p>
<p>하지만, 또 다른 Python API 설계 모범 사례를 고려해봅시다. 만약 싱글턴(singleton)을 작성한다면, 클래스를 작성하는 대신 코드를 모듈에 직접 빌드하는 것이 좋습니다. 사용자들에게 싱글턴 클래스를 인스턴스화하거나, 모듈에 저장된 싱글턴 객체를 통해 역참조하도록 강요하는 대신, 모듈 레벨 함수와 모듈 레벨 데이터를 사용하도록 합니다.</p>
<p>안타깝게도 이 두 가지 모범 사례는 서로 상충됩니다. 문제는 <code>property</code>가 모듈에서는 지원되지 않는다는 것입니다. 모듈은 단일한 일반 모듈 타입(<code>types.ModuleType</code>)의 인스턴스이며, 특정 모듈에 <code>property</code>를 추가하기 위해 이 타입을 수정하거나 서브클래스화하는 것은 실용적이지 않습니다. 이는 데이터와 유사한 멤버가 모듈에 저장된 싱글턴인 경우, 프로그래머들이 API 설계 결정에 직면했을 때 데이터를 위한 "게터(getters)"와 "세터(setters)"를 선제적으로 추가해야 하는 불편함으로 이어집니다.</p>
<p>순수 Python에서 모듈 <code>property</code> 지원을 추가하는 것은 최근에 가능해졌습니다. Python 3.5부터, 모듈 객체의 <code>__class__</code> 속성에 할당하는 것이 특별히 이러한 목적을 위해 허용되었습니다. 다음은 이 기능을 사용하여 모듈에 <code>property</code>를 추가하는 예시입니다:</p>
<pre><code class="language-python">import sys, types

class _MyModuleType(types.ModuleType):
    @property
    def prop(self, instance, owner):
        ...

sys.modules[__name__].__class__ = _MyModuleType
</code></pre>
<p>이 코드는 작동하며 지원되는 동작이지만, 다소 어색하고 이해하기 어렵습니다.</p>
<p>이 PEP는 특히 모듈 내 <code>property</code>를 가능하게 하기 위해 설계된, 타입별 옵트인(opt-in) 방식의 디스크립터 프로토콜 확장을 제안합니다. 이 메커니즘은 멤버가 클래스 변수로 선언되지 않아도 클래스 인스턴스 멤버에 대해 디스크립터 프로토콜을 존중하는 방법을 제공합니다.</p>
<p>이것이 일반적인 메커니즘으로 제안되었지만, 현재 작성자는 이것이 모듈 객체에만 유용할 것으로 예상하고 있습니다.</p>
<h3>구현 (Implementation)</h3>
<p>기본 아이디어는 간단합니다. <code>PyModule_Type</code>에 의해 노출되는 <code>tp_descr_get</code> 및 <code>tp_descr_set</code> 함수를 수정하여 상호작용하는 속성을 검사하고, 만약 해당 속성이 디스크립터 프로토콜을 지원한다면 관련 노출 함수를 호출하는 것입니다.</p>
<p>이 구현은 두 가지 과제에 직면합니다:</p>
<ol>
<li>이 코드는 메서드에서 속성을 조회할 때마다 실행될 것이므로, 해당 속성에 저장된 객체가 디스크립터가 아닌 일반적인 경우에는 오버헤드를 거의 발생시키지 않아야 합니다.</li>
<li>함수도 디스크립터이므로, 모든 객체에 대해 디스크립터 프로토콜을 무조건 존중하지 않도록 주의해야 합니다. 그렇지 않으면, 모든 모듈 레벨 함수가 모듈 객체의 메서드 호출인 것처럼 모듈 인스턴스에 바인딩될 것입니다. 모듈 핸들이 모든 모듈 레벨 함수에 "self" 인수로 전달될 것입니다.</li>
</ol>
<p>두 가지 과제는 동일한 접근 방식으로 해결할 수 있습니다. 새로운 "fast subclass" 플래그를 정의합니다. 이 플래그는 "이 객체는 디스크립터이며, 이 객체가 인스턴스의 속성으로 조회될 때 직접 존중되어야 한다"는 의미를 가집니다. 현재 이 플래그는 <code>property</code>와 <code>collections.abc.InstanceDescriptor</code> 두 가지 타입에만 설정됩니다. 후자는 추상 베이스 클래스이며, 사용자 클래스가 이 "fast subclass" 플래그를 상속받을 수 있도록 하는 유일한 목적을 가집니다.</p>
<h3>프로토타입 (Prototype)</h3>
<p>이 기능의 프로토타입은 GitHub에서 개발 중이었습니다.</p>
<h3>감사 (Acknowledgements)</h3>
<p>Armin Rigo는 "모듈 <code>property</code>" 아이디어가 제시되었을 때 본질적으로 이 메커니즘을 제안했으며, 문제의 복잡성과 적절한 해결책에 대해 작성자에게 교육했습니다. Nathaniel J. Smith는 모듈 객체에서 <code>__class__</code>에 할당하는 Python 3.5 확장을 지적하고 예시를 제공했습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1098,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 549 - Instance Descriptors"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 23:35:20+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
