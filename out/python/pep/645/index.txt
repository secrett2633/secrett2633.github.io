3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-0249a4ed84fdbe73.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-ce60b0a6591d04ed.js"],""]
4:["slug","python/pep/645","c"]
0:["e6YNzZ2BVZ8NBZ6boXfWj",[[["",{"children":[["slug","python/pep/645","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"645\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/645","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e4c,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0645/">PEP 645 - Allow writing optional types asx?</a></p>
<p><strong>상태:</strong> Withdrawn | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 25-Aug-2020</p>
</blockquote>
<p>PEP 645 – <code>Optional</code> 타입 표기를 위한 <code>x?</code> 문법 허용 제안 (철회됨)</p>
<h2>개요</h2>
<p>이 문서는 <code>Optional[int]</code> 대신 <code>int?</code>와 같이 <code>?</code> 연산자를 사용하여 <code>Optional</code> 타입을 표기하는 새로운 문법을 추가할 것을 제안했습니다.</p>
<h2>PEP 철회 동기</h2>
<p>PEP 604에서 도입된 <code>T | None</code> 표기법은 <code>Optional[T]</code>를 대체할 훌륭한 대안이며, 새로운 문법을 필요로 하지 않습니다. 또한, <code>T?</code>를 <code>T | None</code>의 의미로 사용하는 것은 TypeScript의 <code>NotRequired[T]</code>와는 대략적으로 일치하지 않아 혼란을 야기할 수 있다는 점이 지적되었습니다. 이러한 이유로, Typing-SIG 커뮤니티와 이 PEP의 스폰서가 합의하여 이 PEP는 철회되었습니다.</p>
<h2>배경 (Motivation)</h2>
<p>타입 힌트(Type Hints)는 Python 언어의 중요하고 강력한 부분이 되었습니다. 하지만 많은 타입 어노테이션(type annotation)은 장황하여 타입 어노테이션 사용에 상당한 마찰을 더합니다. 타입 문법을 개선함으로써 Python 코드에 타입을 추가하는 것을 더 간단하게 만들고 개발 경험을 향상시킬 수 있습니다. 이와 유사하게 <code>Union</code> 타입의 짧은 문법을 도입하기 위한 PEP도 승인되어 구현된 바 있습니다.</p>
<h2>제안 근거 (Rationale)</h2>
<p>Python의 타입은 상당히 장황할 수 있으며, 이는 타입 채택에 방해가 될 수 있습니다. PEP 604에서 <code>Union</code> 타입(<code>int | str</code> 등)에 대해 수행된 것처럼 타입을 더 인체공학적으로 만들면 새롭거나 기존 Python 코드에 타입을 추가하는 데 필요한 노력을 줄일 수 있습니다.</p>
<p><code>Optional</code> 어노테이션(annotation)은 부분적으로 또는 완전히 타입이 지정된(typed) Python 코드베이스에서 자주 사용됩니다. 잘 타입이 지정된 5개의 오픈 소스 프로젝트를 표본으로 조사한 결과, 평균적으로 어노테이션의 7%가 하나 이상의 <code>Optional</code> 타입을 포함하고 있었습니다. 이는 문법 업데이트가 타입을 더 간결하게 만들고 코드 길이를 줄이며 가독성을 향상시킬 잠재력이 있음을 나타냅니다.</p>
<p><code>Optional</code> 타입의 문법 간소화는 이전에 타입 힌트 커뮤니티 내에서 논의되었으며, 이러한 논의에서 <code>?</code>가 선호되는 연산자라는 합의가 있었습니다. Python에는 단항(unary) <code>?</code>에 대한 기본 지원이 없으며, 이는 런타임에 추가되어야 할 것입니다.</p>
<p><code>?</code> 기호(sigil)를 Python 문법에 추가하는 것은 이전에 PEP 505에서도 제안되었으며, PEP 505는 현재 연기된(deferred) 상태입니다. PEP 505는 다음과 같은 연산자를 제안합니다:</p>
<ul>
<li>"None coalescing" 이항(binary) 연산자 <code>??</code></li>
<li>"None-aware attribute access" 연산자 <code>?.</code> ("maybe dot")</li>
<li>"None-aware indexing" 연산자 <code>?[]</code> ("maybe subscript")</li>
</ul>
<p>만약 PEP 505가 미래에 승인되더라도, 이 PEP에서 제안된 타입 특정 <code>?</code>와는 충돌하지 않을 것입니다. 또한, <code>?</code>의 모든 사용이 개념적으로 관련되어 있기 때문에 Python 학습에 혼란을 주거나 빠른 시각적 이해에 방해가 되지 않을 것입니다.</p>
<p>제안된 후위(postfix) 연산자를 사용하는 문법은 C#, TypeScript, Swift와 같은 다른 타입 언어에서 발견되는 <code>Optional</code> 문법을 모방합니다. 이러한 언어들의 광범위한 채택과 인기는 Python 개발자들이 이미 이 문법에 익숙할 가능성이 높다는 것을 의미합니다.</p>
<pre><code class="language-swift">// Swift에서의 Optional
var example: String?
``````csharp
// C#에서의 Optional
string? example;
</code></pre>
<p>이 문법을 추가하는 것은 <code>list</code>, <code>dict</code>, <code>None</code>과 같이 내장 타입을 어노테이션으로 사용하는 일반적인 패턴을 따르는 것입니다. 이는 <code>typing</code> 모듈에서 임포트(import)하지 않고도 더 많은 어노테이션을 Python 코드에 추가할 수 있게 할 것입니다.</p>
<h2>명세 (Specification)</h2>
<p>새로운 <code>Optional</code> 문법은 함수(function), 변수(variable), 속성(attribute) 및 매개변수(parameter) 어노테이션에 허용되어야 합니다.</p>
<pre><code class="language-python"># 기존 방식
# def foo(x: Optional[int], y: Optional[str], z: Optional[list[int]): ...
# 제안된 방식
def foo(x: int?, y: str?, z: list[int]?): ...

# 기존 방식
# def bar(x: list[typing.Optional[int]]): ...
# 제안된 방식
def bar(x: list[int?]): ...
</code></pre>
<p>새로운 <code>Optional</code> 문법은 기존 <code>typing.Optional</code> 문법과 동등해야 합니다.</p>
<pre><code class="language-python">typing.Optional[int] == int?
</code></pre>
<p>새로운 <code>Optional</code> 문법은 기존 <code>typing.Optional</code> 문법과 동일한 아이덴티티(identity)를 가져야 합니다.</p>
<pre><code class="language-python">typing.Optional[int] is int?
</code></pre>
<p>또한 <code>None</code>과의 <code>Union</code>과도 동등해야 합니다.</p>
<pre><code class="language-python"># 기존 문법
int? == typing.Union[int, None]
# 새 문법
int? == int | None
</code></pre>
<p>PEP 604에서 명세된 새로운 <code>Union</code> 문법이 <code>isinstance</code> 및 <code>issubclass</code>에서 지원되므로, 새로운 <code>Optional</code> 문법도 <code>isinstance</code> 및 <code>issubclass</code>에서 지원되어야 합니다.</p>
<pre><code class="language-python">isinstance(1, int?) # True
issubclass(Child, Super?) # True
</code></pre>
<p><code>?</code> 연산자가 다른 기능에 대해 오버로드될 수 있도록 새로운 던더(dunder) 메서드가 구현되어야 할 것입니다.</p>
<h2>하위 호환성 (Backwards Compatibility)</h2>
<p><code>?</code>는 현재 Python 문법에서 사용되지 않으므로, 이 PEP는 완전히 하위 호환됩니다.</p>
<h2>채택되지 않은 아이디어 (Rejected Ideas)</h2>
<p>논의되었던 대안으로는 <code>?</code> 대신 <code>~</code> 연산자를 고려하거나, 접두사(prefix) 연산자(<code>?int</code>)를 사용하는 것이 있었습니다.</p>
<p><code>?</code> 연산자가 다른 기능에 대해 오버로드될 수 있도록 새로운 던더(dunder) 메서드가 구현되어야 할 것입니다 [cite: 1].</p>
<h2>하위 호환성 (Backwards Compatibility)</h2>
<p><code>?</code>는 현재 Python 문법에서 사용되지 않으므로, 이 PEP는 완전히 하위 호환됩니다 [cite: 1].</p>
<h2>채택되지 않은 아이디어 (Rejected Ideas)</h2>
<p>논의되었던 대안으로는 <code>?</code> 대신 <code>~</code> 연산자를 고려하거나, 접두사(prefix) 연산자(<code>?int</code>)를 사용하는 것이 있었습니다 [cite: 1].</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1214,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Withdrawn] PEP 645 - Allow writing optional types asx?"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 01:34:51+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
