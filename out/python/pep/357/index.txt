3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/357","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/357","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"357\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/357","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2bb1,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0357/">PEP 357 - Allowing Any Object to be Used for Slicing</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 09-Feb-2006</p>
</blockquote>
<h2>PEP 357 – 슬라이싱에 모든 객체 사용 허용</h2>
<ul>
<li><strong>작성자:</strong> Travis Oliphant</li>
<li><strong>상태:</strong> Final (최종)</li>
<li><strong>유형:</strong> Standards Track</li>
<li><strong>작성일:</strong> 2006년 2월 9일</li>
<li><strong>Python 버전:</strong> 2.5</li>
<li><strong>사후 이력:</strong> (생략)</li>
</ul>
<h3>요약 (Abstract)</h3>
<p>이 PEP는 <code>PyNumberMethods</code>에 <code>nb_index</code> 슬롯을, 그리고 이에 상응하는 <code>__index__</code> 특별 메서드를 추가할 것을 제안합니다. 이를 통해 파이썬에서 정수가 명시적으로 필요한 경우(예: 슬라이스 문법)에 모든 임의의 객체를 사용할 수 있게 됩니다.</p>
<h3>배경 (Rationale)</h3>
<p>현재 파이썬에서 슬라이싱(<code>X[obj1:obj2]</code>)은 <code>obj1</code>과 <code>obj2</code>가 정수(integers) 또는 긴 정수(long integers)일 경우에만 유효합니다. 즉, 시퀀스(sequence) 프로토콜을 구현하는 객체 <code>X</code>에 대해 <code>obj1</code>과 <code>obj2</code>가 스스로를 시퀀스의 인덱스로 합리적으로 사용될 수 있다고 파이썬에 알릴 방법이 없습니다. 이는 불필요한 제약입니다.</p>
<p>예를 들어, NumPy 라이브러리에는 8비트, 16비트, 32비트, 64비트의 부호 있는/없는 정수에 해당하는 8가지 다른 정수 스칼라(scalar) 타입이 있습니다. 이 타입 객체들은 파이썬이 진정한 정수를 기대하는 많은 곳에서 정수처럼 합리적으로 사용될 수 있지만, 파이썬의 정수 타입과 메모리 레이아웃이 호환되지 않기 때문에 파이썬 정수 타입을 상속할 수 없습니다. 객체가 정수처럼 동작할 수 있다는 것을 파이썬에 알릴 방법이 필요합니다.</p>
<p><code>nb_int</code> (및 <code>__int__</code> 특별 메서드)를 이 목적으로 사용할 수는 없습니다. 이 메서드는 객체를 정수로 강제 변환(coerce)하는 데 사용되기 때문입니다. 정수로 강제 변환될 수 있는 모든 객체를 파이썬이 진정한 정수를 기대하는 모든 곳에서 정수로 사용하도록 허용하는 것은 부적절합니다. 예를 들어, 슬라이싱에서 <code>__int__</code>를 사용하여 객체를 정수로 변환하도록 허용한다면, <code>float</code> 객체도 슬라이싱에 허용되어 <code>x[3.2:5.8]</code>와 같은 코드가 오류를 발생시키지 않을 것입니다.</p>
<h3>제안 (Proposal)</h3>
<p><code>PyNumberMethods</code>에 <code>nb_index</code> 슬롯과 이에 상응하는 <code>__index__</code> 특별 메서드를 추가합니다. 객체는 <code>nb_index</code> 슬롯에 파이썬 정수(<code>int</code> 또는 <code>long</code>)를 반환하는 함수를 정의할 수 있습니다. 이 정수는 <code>PySequence_GetSlice</code>, <code>PySequence_SetSlice</code>, <code>PySequence_DelSlice</code> 등 파이썬이 필요로 할 때 <code>Py_ssize_t</code> 값으로 적절히 변환될 수 있습니다.</p>
<h3>명세 (Specification)</h3>
<p><code>nb_index</code> 슬롯은 다음과 같은 시그니처를 가집니다:</p>
<pre><code class="language-c">PyObject *index_func (PyObject *self)
</code></pre>
<p>반환되는 객체는 <code>Python IntType</code> 또는 <code>Python LongType</code>이어야 합니다. 오류 발생 시에는 적절한 오류가 설정된 채 <code>NULL</code>이 반환되어야 합니다.</p>
<p><code>__index__</code> 특별 메서드는 다음과 같은 시그니처를 가집니다:</p>
<pre><code class="language-python">def __index__(self):
    return obj
</code></pre>
<p>여기서 <code>obj</code>는 <code>int</code> 또는 <code>long</code>이어야 합니다.</p>
<p>새로운 추상 C-API 함수 3개가 추가됩니다:</p>
<ol>
<li>
<p><strong><code>int PyIndex_Check(obj)</code></strong>: 객체가 <code>nb_index</code> 슬롯을 지원하고 채워져 있는지 확인합니다. 객체가 <code>nb_index</code> 슬롯을 정의하면 <code>true</code>를 반환합니다.</p>
</li>
<li>
<p><strong><code>PyObject *PyNumber_Index (PyObject *obj)</code></strong>: <code>nb_index</code> 호출을 감싸는 간단한 래퍼(wrapper)입니다. 호출이 불가능하거나 <code>int</code> 또는 <code>long</code>을 반환하지 않으면 <code>PyExc_TypeError</code>를 발생시킵니다.</p>
</li>
<li>
<p><strong><code>Py_ssize_t PyNumber_AsSsize_t(PyObject *obj, PyObject *exc)</code></strong>: 객체에서 <code>Py_ssize_t</code> 값을 얻어야 하는 일반적인 상황을 처리하는 데 도움을 줍니다. <code>obj</code>의 <code>nb_index</code> 슬롯이 사용 가능하면 호출하고, 반환된 파이썬 정수를 <code>Py_ssize_t</code> 값으로 변환합니다. 반환된 정수가 <code>Py_ssize_t</code> 값에 맞지 않을 경우 <code>exc</code> 인수를 통해 동작을 제어할 수 있습니다.</p>
</li>
</ol>
<p><code>operator.index(obj)</code>라는 새 함수가 추가되어 <code>obj.__index__()</code>와 동등한 호출을 수행하며, <code>obj</code>가 특별 메서드를 구현하지 않으면 오류를 발생시킵니다.</p>
<h3>구현 계획 (Implementation Plan)</h3>
<ul>
<li><code>object.h</code>에 <code>nb_index</code> 슬롯을 추가하고 <code>typeobject.c</code>를 수정하여 <code>__index__</code> 메서드를 생성합니다.</li>
<li><code>ceval.c</code>의 <code>ISINT</code> 매크로를 <code>ISINDEX</code>로 변경하고, <code>index</code> 슬롯이 정의된 객체를 수용하도록 수정합니다.</li>
<li><code>_PyEval_SliceIndex</code> 함수를 <code>index</code> 슬롯이 정의된 객체를 수용하도록 변경합니다.</li>
<li>서브스크립트 접근을 위해 <code>as_mapping</code> 슬롯을 사용하고 정수 특별 검사를 수행하는 모든 내장 객체(예: 리스트)가 해당 슬롯도 검사하도록 변경합니다.</li>
<li>정수(integers)와 긴 정수(long integers)에 <code>nb_index</code> 슬롯을 추가합니다(이들은 자신을 반환).</li>
<li><code>nb_index</code> 슬롯을 가진 모든 파이썬 객체에서 정수를 반환하는 <code>PyNumber_Index</code> C-API를 추가합니다.</li>
<li><code>operator.index(x)</code> 함수를 추가합니다.</li>
<li><code>arrayobject.c</code> 및 <code>mmapmodule.c</code>를 수정하여 새로운 C-API를 서브스크립트 및 기타 용도로 사용하도록 합니다.</li>
<li>단위 테스트를 추가합니다.</li>
</ul>
<h3>논의 질문 (Discussion Questions)</h3>
<h4>속도 (Speed)</h4>
<p>정수와 긴 정수가 인덱스로 사용될 때 동일한 수의 명령으로 완료되므로, 구현이 파이썬 속도를 저하시키지 않을 것입니다. 유일한 변경점은 이전에는 오류를 발생시키던 것이 이제는 허용된다는 점입니다.</p>
<h4>왜 기존의 <code>nb_int</code>를 사용하지 않는가? (Why not use nb_int which is already there?)</h4>
<p><code>nb_int</code> 메서드는 강제 변환(coercion)에 사용되므로, 여기서 요청하는 것과는 근본적으로 다른 의미를 가집니다. 이 PEP는 이미 정수로 간주될 수 있는 어떤 것이 파이썬이 정수를 필요로 할 때 그 정보를 전달하는 방법을 제안합니다. <code>nb_int</code>를 사용하는 것이 좋지 않은 가장 큰 예시는 <code>float</code> 객체가 이미 <code>nb_int</code> 메서드를 정의하지만, <code>float</code> 객체는 시퀀스의 인덱스로 사용되어서는 안 된다는 것입니다.</p>
<h4><code>__index__</code>라는 이름은 왜? (Why the name <strong>index</strong> ?)</h4>
<p>슬롯의 다른 해석이 가능함에도 불구하고 <code>__index__</code>라는 이름에 대한 질문이 제기되었습니다. 예를 들어, 이 슬롯은 파이썬이 내부적으로 정수를 필요로 할 때(<code>"mystring" * 3</code>와 같은 경우) 언제든지 사용될 수 있습니다. 귀도 반 로섬(Guido van Rossum)이 이 이름을 제안했는데, 슬라이싱 문법이 이러한 슬롯을 갖는 가장 큰 이유이며, 결국 더 나은 이름이 나오지 않았기 때문입니다. " <code>__discrete__</code> " 및 " <code>__ordinal__</code> "과 같은 제안된 이름의 예시는 논의 스레드를 참조하십시오.</p>
<h4><code>nb_index</code>가 <code>PyObject *</code>를 반환하는 이유는? (Why return PyObject * from nb_index ?)</h4>
<p>처음에는 <code>Py_ssize_t</code>가 <code>nb_index</code> 슬롯의 반환 타입으로 선택되었습니다. 그러나 이는 보기 흉하고 불안정한 해킹 없이는 오버플로우(overflow) 및 언더플로우(underflow) 오류를 추적하고 구별할 수 없게 만들었습니다. <code>nb_index</code> 슬롯은 파이썬 코어에서 최소한 세 가지 다른 방식으로 사용되므로(정수를 얻기 위해, 슬라이스 끝점을 얻기 위해, 시퀀스 인덱스를 얻기 위해), 이 모든 경우를 처리하는 데 상당한 유연성이 필요합니다. 모든 사용 사례를 처리하는 데 필요한 유연성을 갖는 것이 중요합니다. 예를 들어, <code>nb_index</code>에 대해 <code>Py_ssize_t</code>를 반환하는 초기 구현은 32비트 머신에서 2GB 이상의 RAM을 사용할 때 <code>s = 'x' * (2**100)</code>이 작동하지만 <code>len(s)</code>가 2147483647로 잘리는 문제를 발견하게 했습니다. 몇 가지 수정 사항이 제안되었지만, 결국 <code>nb_index</code>가 오버플로우를 올바르게 처리하기 위해 <code>nb_int</code> 및 <code>nb_long</code> 슬롯과 유사하게 파이썬 객체를 반환해야 한다고 결정되었습니다.</p>
<h4><code>__index__</code>가 <code>nb_index</code> 메서드를 가진 어떤 객체라도 반환할 수 없는 이유는? (Why can't <strong>index</strong> return any object with the nb_index method?)</h4>
<p>이는 확인하기 어려운 여러 가지 방식으로 무한 재귀를 허용할 수 있기 때문입니다. 이 제약은 <code>__nonzero__</code>가 <code>int</code> 또는 <code>bool</code>을 반환해야 한다는 요구 사항과 유사합니다.</p>
<h3>참조 구현 (Reference Implementation)</h3>
<p>SourceForge에 패치 1436368로 제출되었습니다.</p>
<h3>참고 자료 (References)</h3>
<p>Travis Oliphant, PEP for adding an sq_index slot so that any object, a or b, can be used in X[a:b] notation,
<code>https://mail.python.org/pipermail/python-dev/2006-February/thread.html#60594</code></p>
<h3>저작권 (Copyright)</h3>
<p>이 문서는 공개 도메인에 있습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 357 - Allowing Any Object to be Used for Slicing"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 19:03:31+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
