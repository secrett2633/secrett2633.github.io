3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/3135","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","python/pep/3135","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"3135\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/3135","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T181a,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-3135/">PEP 3135 - New Super</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 28-Apr-2007</p>
</blockquote>
<h2>PEP 3135 – 새로운 <code>super()</code></h2>
<h3>개요</h3>
<p>이 PEP는 <code>super</code> 타입을 사용하여 메서드가 정의된 클래스와 현재 메서드가 작동하는 인스턴스(또는 클래스 메서드의 경우 클래스 객체)에 자동으로 바인딩되는 <code>super</code> 인스턴스를 구성하기 위한 "구문 설탕(syntactic sugar)"을 제안합니다.</p>
<p>제안된 새로운 <code>super</code> 사용법은 다음과 같습니다.</p>
<pre><code class="language-python">super().foo(1, 2)
</code></pre>
<p>이는 기존의 다음 코드를 대체합니다.</p>
<pre><code class="language-python">super(Foo, self).foo(1, 2)
</code></pre>
<h3>도입 배경 (Rationale)</h3>
<p>기존의 <code>super</code> 사용법은 <code>super</code>가 작동해야 하는 클래스와 인스턴스를 명시적으로 전달해야 했습니다. 이는 DRY(Don't Repeat Yourself) 원칙을 위반하며, 클래스 이름이 변경될 경우 코드 수정이 필요하여 많은 개발자에게 "옥에 티"로 여겨져 왔습니다.</p>
<h3>명세 (Specification)</h3>
<p>새로운 <code>super</code> 의미 체계는 Python 3.0부터만 사용 가능합니다.</p>
<p>기존의 <code>super</code> 사용법을 대체하며, 이제 명시적으로 클래스 객체를 전달하지 않고도 MRO(Method Resolution Order)에서 다음 클래스의 메서드를 호출할 수 있습니다 (물론 명시적 전달도 여전히 지원됩니다).</p>
<p>모든 함수는 해당 함수가 정의된 클래스 객체를 포함하는 <code>__class__</code>라는 셀(cell)을 가지게 됩니다.</p>
<p>새로운 구문인 <code>super()</code>는 다음 코드와 동등합니다.</p>
<pre><code class="language-python">super(__class__, &#x3C;firstarg>)
</code></pre>
<p>여기서 <code>__class__</code>는 메서드가 정의된 클래스이며, <code>&#x3C;firstarg></code>는 메서드의 첫 번째 매개변수입니다 (인스턴스 메서드의 경우 일반적으로 <code>self</code>, 클래스 메서드의 경우 <code>cls</code>). 클래스 본문 외부에서 정의된 함수에서는 <code>__class__</code>가 정의되지 않아 런타임에 <code>SystemError</code>가 발생합니다.</p>
<p><code>super</code>는 예약어(reserved word)는 아니지만, 파서(parser)는 메서드 정의 내에서 <code>super</code>의 사용을 인식하고 이 경우에만 <code>__class__</code> 셀을 전달합니다. 따라서 인자 없이 <code>super</code>의 전역 별칭을 호출하는 것은 작동하지 않을 수 있습니다.</p>
<h3>해결된 문제 (Closed Issues)</h3>
<ul>
<li><strong>사용할 클래스 객체 결정:</strong> 클래스 객체는 <code>__class__</code>라는 셀에서 가져옵니다.</li>
<li><strong><code>super</code>를 예약어로 만들어야 하는가?:</strong> 아닙니다. <code>super</code>가 예약어가 될 필요는 없습니다.</li>
<li><strong><code>super</code>와 <code>__call__</code> 속성 사용:</strong> <code>super</code> 인스턴스를 기존 방식으로 인스턴스화할 때 <code>__call__</code> 속성을 조회하여 MRO의 다음 클래스로 자동 <code>super</code> 조회를 시도할 수 있다는 우려가 있었으나, 객체 호출은 객체의 타입에서 직접 <code>__call__</code> 메서드를 조회하므로 사실이 아님이 밝혀졌습니다. 또한, <code>super(&#x3C;class>, &#x3C;instance>)</code>와 같은 기존 <code>super</code> 호출은 여전히 동일한 의미로 지원되므로 이 문제는 완전히 사라집니다.</li>
</ul>
<h3>대안 제안 (Alternative Proposals)</h3>
<ul>
<li><strong>변경 없음 (No Changes):</strong> 현 상태를 유지하는 것이 매력적일 수 있지만, <code>super</code> 사용법 변경에 대한 요구가 오랫동안 있었으며, 이는 정당한 이유(클래스 이름으로부터의 분리, 더 간결하고 깔끔한 <code>super</code> 호출)에서 비롯되었습니다.</li>
<li><strong><code>super</code> 타입의 동적 속성 (Dynamic attribute on super type):</strong> <code>super</code> 타입에 동적 속성 조회를 추가하여 적절한 클래스 및 인스턴스 매개변수를 자동으로 결정하는 제안입니다. 이 제안은 <code>sys._getframe()</code>에 의존하며, 이는 프로토타입 구현을 제외하고는 적절하지 않습니다.</li>
<li><strong><code>self.__super__.foo(*args)</code>:</strong> <code>__super__</code> 속성은 이 PEP의 여러 곳에서 언급되며, 완전한 해결책의 후보가 될 수 있지만, <code>__</code>로 시작하는 이름은 일반적으로 내부적인 세부 사항이며 일상적인 코드에서는 사용을 지양합니다.</li>
<li><strong><code>super(self, *args)</code> 또는 <code>__super__(self, *args)</code>:</strong> 이 해결책은 타입 표기 문제만 해결하며, 이름이 다른 <code>super</code> 메서드를 처리하지 않고 인스턴스 이름을 명시해야 합니다.</li>
<li><strong><code>super.foo(self, *args)</code>:</strong> 이 방식은 적절한 인스턴스를 찾는 문제를 해결합니다.</li>
<li><strong><code>super(*p, **kw)</code>:</strong> <code>super(*p, **kw)</code>를 직접 호출하는 것이 현재 실행 중인 메서드와 동일한 이름의 메서드를 <code>super</code> 객체에서 호출하는 것과 동등하다는 제안이 있었습니다. 하지만 이에 대한 찬반 의견이 강하고 구현 및 스타일 문제가 명확합니다. 귀도 반 로섬(Guido van Rossum)은 KISS(Keep It Simple Stupid) 원칙에 따라 이 제안을 이 PEP에서 제외해야 한다고 제안했습니다.</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 3135 - New Super"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 14:34:00+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
