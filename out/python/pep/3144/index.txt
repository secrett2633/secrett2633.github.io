3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-0249a4ed84fdbe73.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/3144","c"]
0:["SAPzS3zi9tsG5MkeKvxIA",[[["",{"children":[["slug","python/pep/3144","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"3144\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/3144","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e88,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-3144/">PEP 3144 - IP Address Manipulation Library for the Python Standard Library</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 06-Feb-2012</p>
</blockquote>
<h2>PEP 3144 – Python 표준 라이브러리를 위한 IP 주소 조작 라이브러리</h2>
<h3>초록 (Abstract)</h3>
<p>이 PEP는 Python을 위한 IP 주소 조작 모듈의 설계 및 구현을 제안합니다.</p>
<h3>PEP 승인 (PEP Acceptance)</h3>
<p>이 PEP는 2012년 5월 15일 Alyssa Coghlan에 의해 승인되었습니다.</p>
<h3>동기 (Motivation)</h3>
<p>이미 Python을 위한 훌륭한 IP 주소 모듈들이 여럿 존재합니다. 하지만 이들 모두 Pythonic 원칙과 네트워크 엔지니어 및 관리자가 의존하는 단축 표기법 사이의 균형을 맞추는 데 어려움을 겪었습니다. <code>ipaddress</code> 모듈은 이러한 적절한 균형을 맞추는 것을 목표로 합니다.</p>
<h3>배경 (Background)</h3>
<p><code>PEP 3144</code>와 <code>ipaddr</code>는 이전에 표준 라이브러리에 포함될 가능성이 논의된 바 있습니다. 여기에 명시된 라이브러리 버전은 PyPI에 있는 버전 및 이전에 논의되었던 버전과 하위 호환성이 없습니다. 기존 <code>ipaddr</code> 사용자들의 혼동을 피하기 위해, 이 라이브러리 버전은 <code>ipaddress</code>로 이름이 변경되었습니다.</p>
<p><code>ipaddr</code>와 <code>ipaddress</code>의 주요 차이점은 다음과 같습니다.</p>
<ul>
<li><code>ipaddress</code>의 <code>*Network</code> 클래스는 <code>strict</code> 플래그가 <code>True</code>로 설정된 <code>ipaddr</code>의 <code>*Network</code> 클래스와 동일합니다.</li>
<li><code>ipaddress</code>의 <code>*Interface</code> 클래스는 <code>strict</code> 플래그가 <code>False</code>로 설정된 <code>ipaddr</code>의 <code>*Network</code> 클래스와 동일합니다.</li>
<li><code>ipaddress</code>의 팩토리 함수(factory functions)는 클래스와의 모호성을 없애기 위해 이름이 변경되었습니다.</li>
<li>몇몇 속성(attributes)도 그 목적을 명확히 하기 위해 이름이 변경되었습니다 (예: <code>network</code>, <code>network_address</code>).</li>
<li><code>ipaddr</code>에서 컨테이너를 반환하던 여러 메서드와 함수(예: <code>subnets</code>, <code>address_exclude</code>, <code>summarize_address_range</code>, <code>collapse_address_list</code>)는 이제 이터레이터(iterators)를 반환합니다.</li>
</ul>
<p><code>ipaddress</code>와 <code>ipaddr</code> 간의 하위 호환성이 없는 API 변경으로 인해, 이 모듈은 새로운 "provisional API status"를 사용하여 추가될 것이 제안되었습니다.</p>
<h3>명세 (Specification)</h3>
<p><code>ipaddress</code> 모듈은 총 6개의 새로운 공개 클래스를 정의하며, 이들은 IPv4 객체 조작을 위한 3개와 IPv6 객체 조작을 위한 3개로 구성됩니다. 클래스는 다음과 같습니다.</p>
<ul>
<li><strong><code>IPv4Address</code> / <code>IPv6Address</code></strong>: 개별 주소를 정의합니다. 예를 들어, <code>www.google.com</code>에 대한 A 레코드 쿼리가 반환하는 IPv4 주소(74.125.224.84) 또는 <code>ipv6.google.com</code>에 대한 AAAA 레코드 쿼리가 반환하는 IPv6 주소(2001:4860:4001:801::1011) 등이 있습니다.</li>
<li><strong><code>IPv4Network</code> / <code>IPv6Network</code></strong>: 네트워크 또는 주소 그룹을 정의합니다. 예를 들어, 멀티캐스트 사용을 위해 예약된 IPv4 네트워크(224.0.0.0/4) 또는 멀티캐스트를 위해 예약된 IPv6 네트워크(ff00::/8) 등이 있습니다.</li>
<li><strong><code>IPv4Interface</code> / <code>IPv6Interface</code></strong>: 이 하이브리드 클래스들은 주어진 네트워크 상의 개별 주소를 나타냅니다. 예를 들어, 192.0.2.0/24 네트워크 상의 IPv4 주소 192.0.2.1은 192.0.2.1/24로 참조될 수 있습니다. 마찬가지로, 2001:DB8::/96 네트워크 상의 IPv6 주소 2001:DB8::1은 2001:DB8::1/96으로 참조될 수 있습니다. 컴퓨터 네트워크 인터페이스에 할당된 주소를 이렇게 참조하는 것이 매우 일반적이므로 <code>Interface</code>라는 이름이 붙었습니다.</li>
</ul>
<p>모든 IPv4 클래스는 특정 특성과 메서드를 공유하며, 이는 주소를 나타내는 데 필요한 비트 수, 특정 특수 IPv4 네트워크 범위에 속하는지 여부 등입니다. 마찬가지로 모든 IPv6 클래스도 특성과 메서드를 공유합니다.</p>
<p><code>ipaddress</code>는 코드 중복을 최대한 피하기 위해 상속(inheritance)을 광범위하게 사용합니다. 부모 클래스는 비공개이지만 다음과 같이 요약됩니다.</p>
<ul>
<li><strong><code>_IPAddrBase</code></strong>: 모든 <code>ipaddress</code> 객체에 공통된 메서드를 제공합니다.</li>
<li><strong><code>_BaseAddress</code></strong>: <code>IPv4Address</code>와 <code>IPv6Address</code>에 공통된 메서드를 제공합니다.</li>
<li><strong><code>_BaseInterface</code></strong>: <code>IPv4Interface</code>와 <code>IPv6Interface</code>, 그리고 <code>IPv4Network</code>와 <code>IPv6Network</code>에 공통된 메서드를 제공합니다 (<code>ipaddress</code>는 <code>Network</code> 클래스를 <code>Interface</code>의 특수한 경우로 처리합니다).</li>
<li><strong><code>_BaseV4</code></strong>: 모든 IPv4 클래스에 공통된 메서드와 변수(예: <code>_max_prefixlen</code>)를 제공합니다.</li>
<li><strong><code>_BaseV6</code></strong>: 모든 IPv6 클래스에 공통된 메서드와 변수를 제공합니다.</li>
</ul>
<p>서로 다른 IP 버전의 객체 간 비교는 <code>TypeError</code>를 발생시킵니다. 또한, 서로 다른 <code>_Base</code> 부모 클래스를 가진 객체 간의 비교도 <code>TypeError</code>를 발생시킵니다. <code>_Base</code> 부모 클래스 제한의 효과는 <code>IPv4Interface</code>가 <code>IPv4Network</code>와 비교될 수 있고, <code>IPv6Interface</code>가 <code>IPv6Network</code>와 비교될 수 있다는 것입니다.</p>
<h3>참조 구현 (Reference Implementation)</h3>
<p>현재 참조 구현은 다음에서 찾을 수 있습니다.</p>
<ul>
<li><a href="http://code.google.com/p/ipaddress-py/source/browse/ipaddress.py">http://code.google.com/p/ipaddress-py/source/browse/ipaddress.py</a></li>
</ul>
<p>README 및 유닛 테스트를 포함하는 tarball은 다음에서 확인할 수 있습니다.</p>
<ul>
<li><a href="http://code.google.com/p/ipaddress-py/downloads/detail?name=ipaddress-1.0.tar.gz">http://code.google.com/p/ipaddress-py/downloads/detail?name=ipaddress-1.0.tar.gz</a></li>
</ul>
<p>참조 구현 사용에 대한 자세한 정보는 다음에서 확인할 수 있습니다.</p>
<ul>
<li><a href="http://code.google.com/p/ipaddr-py/wiki/Using3144">http://code.google.com/p/ipaddr-py/wiki/Using3144</a></li>
</ul>
<h3>참고 자료 (References)</h3>
<p>IPv4와 IPv6의 비교에 대해 Vint Cerf가 보낸 이메일에서, "IPv4 값과 IPv6 값은 비교 불가능하게 취급되어야 한다"는 결론을 내렸습니다. 이는 IPv4 공간이 IPv6의 호스트 공간(0::0/96)에 포함되지만, 이는 유용한 해석이 아니기 때문입니다.</p>
<h3>저작권 (Copyright)</h3>
<p>이 문서는 퍼블릭 도메인에 공개되었습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1214,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 3144 - IP Address Manipulation Library for the Python Standard Library"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 14:37:11+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
