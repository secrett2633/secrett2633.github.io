3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-19cfc001fdac3337.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-51594f997fc19690.js"],""]
4:["slug","python/pep/656","c"]
0:["FeyCvJug7In7AgUZlfHUx",[[["",{"children":[["slug","python/pep/656","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"656\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/656","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1d3d,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0656/">PEP 656 - Platform Tag for Linux Distributions Using Musl</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 17-Mar-2021</p>
</blockquote>
<h1>PEP 656 – Musl을 사용하는 Linux 배포판을 위한 플랫폼 태그</h1>
<h2>개요</h2>
<p>이 PEP 656은 <code>musl</code> 기반의 Linux 배포판에서 Python 바이너리 패키지를 배포하기 위한 새로운 플랫폼 태그 시리즈인 <code>musllinux</code>를 제안합니다. 이 태그는 PEP 600에 명시된 "지속적인 manylinux" 플랫폼 태그와 유사하게 작동하지만, <code>glibc</code> 대신 <code>musl</code>에 의존하는 플랫폼을 대상으로 합니다.</p>
<h2>도입 배경</h2>
<p>컨테이너의 광범위한 사용으로 인해 Alpine Linux [alpine]와 같은 배포판의 인기가 그 어느 때보다 높아지고 있습니다. 이들 중 상당수는 <code>glibc</code>와는 다른 <code>libc</code> 구현체인 <code>musl</code> [musl]을 기반으로 하므로, 기존 <code>manylinux</code> 플랫폼 태그를 사용할 수 없습니다. 이로 인해 Python 패키지 프로젝트는 이러한 시스템을 위한 바이너리 배포판을 PyPI에 배포할 수 없었고, 사용자들은 프로젝트 유지보수자에게 빌드 제약 사항을 요구하여 불필요한 부담을 주었습니다.</p>
<h2>근거</h2>
<p><code>musl</code>은 안정적인 ABI를 가지며 하위 호환성을 유지하므로, 이전 버전의 <code>musl</code>에 대해 컴파일된 바이너리는 새로운 <code>musl</code> 런타임에서도 실행될 것이 보장됩니다. 따라서 <code>glibc</code> 버전 기반의 <code>manylinux</code> 태그와 유사한 방식을 사용하지만, <code>glibc</code> 대신 <code>musl</code> 버전을 대상으로 합니다.</p>
<p>새로운 플랫폼 태그의 논리는 대부분 PEP 600("지속적인 manylinux")을 따르며, 이 태그를 사용하는 휠(wheel)이 유사한 약속을 하도록 요구합니다. <code>musllinux</code> 플랫폼 태그는 Linux 운영 체제에서 <code>musl libc</code>에 동적으로 링크되고 런타임 공유 라이브러리에서 실행되는 Python 인터프리터에만 적용됩니다. 정적으로 링크된 인터프리터나 다른 <code>libc</code> 구현체(<code>glibc</code> 등)와의 혼합 빌드는 이 문서에서 정의된 플랫폼 태그의 범위에 포함되지 않으며 지원되지 않습니다.</p>
<h2>사양</h2>
<h3>태그 형식</h3>
<p>새로운 스키마를 사용하는 태그는 다음 형식을 따릅니다:</p>
<pre><code>musllinux_${MUSLMAJOR}_${MUSLMINOR}_${ARCH}
</code></pre>
<p>이 태그는 지정된 <code>musl</code> 버전(<code>$MUSLMAJOR.$MUSLMINOR</code>)을 사용하는 모든 주류 Linux 배포판에서 휠(wheel)이 작동함을 보장합니다. 다른 모든 시스템 수준 종속성 요구 사항은 PEP 600에서 도입된 의도적으로 모호한 "주류(mainstream)"라는 설명에 대한 커뮤니티의 정의에 의존합니다.</p>
<h3>musl 버전 읽기</h3>
<p><code>musl</code> 버전 값은 Python 인터프리터가 현재 실행 중인 <code>musl libc</code> 공유 라이브러리를 실행하고 출력을 파싱하여 얻을 수 있습니다.</p>
<pre><code class="language-python">import re
import subprocess

def get_musl_major_minor(so: str) -> tuple[int, int] | None:
    """Detect musl runtime version.
    Returns a two-tuple ``(major, minor)`` that indicates musl library's version,
    or ``None`` if the given libc .so does not output expected information.
    The libc library should output something like this to stderr::

        musl libc (x86_64) Version 1.2.2
        Dynamic Program Loader
    """
    proc = subprocess.run([so], stderr=subprocess.PIPE, text=True)
    lines = (line.strip() for line in proc.stderr.splitlines())
    lines = [line for line in lines if line]
    if len(lines) &#x3C; 2 or lines[0][:4] != "musl":
        return None
    match = re.match(r"Version (\d+)\.(\d+)", lines[1])
    if match:
        return (int(match.group(1)), int(match.group(2)))
    return None
</code></pre>
<p>Python 인터프리터가 실행 중인 <code>musl</code> 라이브러리 위치를 찾는 두 가지 방법은 <code>ldd</code> 명령 [ldd]을 사용하거나 실행 파일의 ELF 헤더에서 <code>PT_INTERP</code> 섹션 값을 파싱하는 것입니다 [elf].</p>
<h3>태그 형식 지정</h3>
<p>태그를 사용하는 배포판은 PEP 600에 설명된 것과 유사한 약속을 합니다. 여기에는 다음이 포함됩니다:</p>
<ul>
<li>배포판은 <code>musl</code> 버전 <code>${MUSLMAJOR}.${MUSLMINOR}</code> 이상을 사용하는 모든 주류 Linux 배포판에서 작동합니다.</li>
<li>배포판의 <code>${ARCH}</code>는 호스트 시스템의 <code>sysconfig.get_platform()</code> 반환 값과 일치하며, PEP 425 및 PEP 427에 따라 마침표(<code>.</code>)와 하이픈(<code>-</code>) 문자를 밑줄(<code>_</code>)로 대체합니다.</li>
</ul>
<p>예시 값:</p>
<ul>
<li><code>musllinux_1_1_x86_64</code> # x86-64에서 실행되는 musl 1.1.</li>
<li><code>musllinux_1_2_aarch64</code> # ARM 64비트에서 실행되는 musl 1.2.</li>
</ul>
<p>다음 Python 코드로 값을 형식 지정할 수 있습니다:</p>
<pre><code class="language-python">import sysconfig

def format_musllinux(musl_version: tuple[int, int]) -> str:
    os_name, sep, arch = sysconfig.get_platform().partition("-")
    assert os_name == "linux" and sep, "Not a Linux"
    arch = arch.replace(".", "_").replace("-", "_")
    return f"musllinux_{musl_version[0]}_{musl_version[1]}_{arch}"
</code></pre>
<h3>패키지 인덱스 권장 사항</h3>
<p>PyPI를 포함한 Python 패키지 저장소는 다음 정규식과 일치하는 플랫폼 태그를 허용하는 것이 좋습니다:</p>
<pre><code>musllinux_([0-9]+)_([0-9]+)_([^.-]+)
</code></pre>
<p>Python 패키지 저장소는 알려진 문제가 있는 휠을 거부하기 위해 추가 요구 사항을 부과할 수 있습니다. 여기에는 다음이 포함되지만 이에 국한되지는 않습니다:</p>
<ul>
<li><code>musl 1.2</code> 이상에서만 사용 가능한 심볼을 포함하는 <code>musllinux_1_1</code> 휠.</li>
<li>패키지 인덱스의 대상에게 일반적으로 제공되지 않는 외부 라이브러리에 의존하는 휠.</li>
<li>존재하지 않는 <code>musl</code> 버전(<code>musllinux_9000_0</code> 등)과의 호환성을 주장하는 플랫폼 태그.</li>
</ul>
<p>이러한 정책은 궁극적으로 개별 패키지 저장소에 달려 있습니다.</p>
<h2>하위 호환성</h2>
<p>이 PEP에는 하위 호환성 문제가 없습니다.</p>
<h2>거부된 아이디어</h2>
<h3>Alpine Linux를 위한 특정 플랫폼 태그 생성</h3>
<p><code>manylinux</code> 태그 시리즈에 대한 과거 경험은 이 접근 방식이 시간 면에서 너무 많은 비용이 든다는 것을 보여줍니다. 저자는 "다른 것들과 잘 작동하는" 규칙이 더 포괄적이며 실제에서 충분히 잘 작동한다고 생각합니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1098,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 656 - Platform Tag for Linux Distributions Using Musl"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 09:53:36+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
