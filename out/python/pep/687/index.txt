3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-19cfc001fdac3337.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-51594f997fc19690.js"],""]
4:["slug","python/pep/687","c"]
0:["FeyCvJug7In7AgUZlfHUx",[[["",{"children":[["slug","python/pep/687","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"687\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/687","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e14,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0687/">PEP 687 - Isolating modules in the standard library</a></p>
<p><strong>상태:</strong> Accepted | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 04-Apr-2022</p>
</blockquote>
<h2>요약</h2>
<p>이 PEP는 표준 라이브러리의 확장 모듈(Extension Modules)을 다단계 초기화(multi-phase initialization, <a href="https://peps.python.org/pep-0489/">PEP 489</a>) 방식으로 전환하고, 가능한 모든 상태를 프로세스 전역 변수 대신 모듈 객체에 저장하도록 제안합니다.</p>
<h2>배경 및 동기</h2>
<p>이 제안의 배경, 동기, 합리성, 영향 및 구현 노트는 정보성 PEP 630에 자세히 설명되어 있으며, 이는 확장 모듈 전반에 걸쳐 적용됩니다. PEP 687은 특히 표준 라이브러리의 확장 모듈에 대한 구체적인 내용을 다룹니다. 이 제안의 상당 부분이 이미 구현되었으며, 이 PEP는 변경 사항을 설명하고, 남은 변경 사항을 제안하며, 새로운 모듈에 대한 모범 사례를 설정하는 것을 목표로 합니다.</p>
<h2>명세</h2>
<p>PEP 630의 본문은 Python 문서의 HOWTO로 변환되고 해당 PEP는 최종(Final)으로 지정될 예정입니다. 표준 라이브러리의 모든 확장 모듈은 PEP 489에서 도입된 다단계 초기화로 전환됩니다.</p>
<p>모든 표준 라이브러리 확장 모듈은 격리됩니다. 이는 다음과 같은 의미를 가집니다.</p>
<ul>
<li>모듈에 의해 정의된 타입(Type), 함수, 기타 객체는 불변(immutable)이거나 다른 모듈 인스턴스와 공유되지 않습니다.</li>
<li>모듈에 특정한 상태는 전역 상태를 나타내지 않는 한 다른 모듈 인스턴스와 공유되지 않습니다.</li>
</ul>
<p>예를 들어, <code>_csv.field_size_limit</code>는 모듈별 값을 가져오거나 설정하게 됩니다. 반면, <code>readline.get_history_item</code> 또는 <code>os.getpid</code>와 같은 함수는 프로세스 전역(모듈 외부에 있으며 Python이 아닌 다른 라이브러리와도 공유될 수 있는) 상태를 계속해서 사용합니다.</p>
<h3>힙 타입(Heap Types)으로의 전환</h3>
<p>모듈 상태 접근이 필요 없고 다른 전환 이유가 없는 정적 타입(static types)은 정적으로 유지되어야 합니다. 메서드가 모듈 인스턴스에 접근해야 하는 타입은 PEP 630에 따라 힙 타입으로 전환됩니다. 이때 다음 사항이 고려됩니다.</p>
<ul>
<li>이전에 정적 타입이었던 모든 표준 라이브러리 타입은 불변성을 유지해야 합니다. 힙 타입은 불변성을 유지하기 위해 <code>Py_TPFLAGS_IMMUTABLE_TYPE</code> 플래그로 정의되어야 합니다.</li>
<li>불변 타입에 새 속성을 생성하려고 할 때 <code>TypeError</code>가 발생하는지 테스트로 확인해야 합니다.</li>
<li><code>tp_new = NULL</code>인 정적 타입은 공개 생성자가 없지만, 힙 타입은 기본 클래스에서 생성자를 상속받습니다. 이전에 인스턴스화가 불가능했던 타입이 해당 특성을 유지하도록 <code>Py_TPFLAGS_DISALLOW_INSTANTIATION</code>을 사용해야 합니다.</li>
<li>전환된 힙 타입은 의도치 않게 직렬화(<code>pickle</code> 가능)될 수 있습니다. <code>pickle.dumps</code> 호출 결과가 전환 전후로 동일한지 테스트하고, 실패하면 <code>TypeError</code>를 발생시키는 <code>__reduce__</code> 메서드를 추가해야 합니다.</li>
</ul>
<p>이러한 문제들은 향후 전환을 돕기 위해 개발자 가이드(Devguide)에 추가될 예정입니다.</p>
<h2>진행 과정</h2>
<p>다음 과정은 모든 모듈이 전환될 때까지 개발자 가이드에 추가되어야 합니다. 새로운 발견 사항은 그곳이나 일반 HOWTO 문서에 기록되어야 합니다.</p>
<h3>1단계: 준비</h3>
<ol>
<li>버그 트래커 또는 디스커스(Discourse)에서 논의를 시작합니다. 모듈 관리자 및/또는 코드 소유자를 참여시킵니다. 변경 사항의 이유와 배경을 설명합니다.</li>
<li>전역 상태 성능 병목 현상을 식별합니다.</li>
<li>개념 증명(Proof-of-Concept) 구현을 생성하고 성능 영향을 측정합니다. <code>pyperf</code>는 벤치마킹에 유용한 도구입니다.</li>
<li>구현 계획을 수립합니다. 타입이 적은 소규모 모듈의 경우 단일 PR로 충분할 수 있습니다. 많은 타입과 외부 라이브러리 콜백이 있을 수 있는 대규모 모듈의 경우 여러 PR이 필요합니다.</li>
</ol>
<h3>2단계: 구현</h3>
<p>(복잡한 모듈에 대한 제안된 구현 계획이며, 소규모 모듈의 경우 간소화할 수 있습니다.)</p>
<ol>
<li>가능한 곳에 Argument Clinic을 추가합니다. 이를 통해 정의 클래스를 사용하여 타입 메서드에서 모듈 상태를 쉽게 가져올 수 있습니다.</li>
<li>모듈 상태를 준비합니다. 모듈 상태 구조체(<code>module state struct</code>)를 설정하고, 인스턴스를 정적 전역 변수로 추가하며, 모듈 상태를 가져오기 위한 헬퍼 스텁(helper stubs)을 생성합니다.</li>
<li>관련 전역 변수를 모듈 상태 구조체에 추가하고, 전역 상태에 접근하는 코드를 모듈 상태 헬퍼를 사용하도록 수정합니다. 이 단계는 여러 PR로 나눌 수 있습니다.</li>
<li>필요한 경우 정적 타입을 힙 타입으로 전환합니다.</li>
<li>전역 모듈 상태 구조체를 실제 모듈 상태로 전환합니다.</li>
<li>다단계 초기화를 구현합니다.</li>
</ol>
<p>4단계부터 6단계까지는 가급적 단일 알파 개발 단계에서 완료되어야 합니다.</p>
<h2>하위 호환성</h2>
<p>표준 라이브러리의 확장 모듈은 이제 여러 번 로드될 수 있습니다. 예를 들어, <code>sys.modules</code>에서 이러한 모듈을 삭제하고 다시 임포트하면 이전에 로드된 인스턴스와 격리된 새로운 모듈 인스턴스가 생성됩니다. 이는 이전 동작(확장 모듈의 전역 변수가 처음 로드된 모듈에서 얕게 복사되던)을 예상했던 코드에 영향을 미칠 수 있습니다.</p>
<h2>보안 영향</h2>
<p>알려진 보안 영향은 없습니다.</p>
<h2>교육 방법</h2>
<p>이 제안의 큰 부분은 숙련된 사용자를 대상으로 하는 HOWTO이며, 이는 문서로 이동될 예정입니다. 초보자에게는 영향을 미치지 않을 것입니다.</p>
<h2>참고 구현</h2>
<p>대부분의 변경 사항은 현재 다음 이슈들에 대한 커밋으로 메인 브랜치에 있습니다.</p>
<ul>
<li>bpo-40077: 정적 타입을 힙 타입으로 전환 (PyType_FromSpec() 사용)</li>
<li>bpo-46417: 내장 Python을 위해 Py_Finalize()에서 정적 타입 지우기</li>
<li>bpo-1635741: Py_Finalize()가 종료 시 모든 Python 객체를 지우지 않음</li>
</ul>
<p>예를 들어, <code>_csv</code> 모듈에서 수행된 변경 사항 및 수정 사항은 다음과 같습니다.</p>
<ul>
<li>GH-23224: <code>_csv</code> 모듈에서 정적 상태 제거</li>
<li>GH-26008: <code>csv.Error</code> 서브클래싱 허용</li>
<li>GH-26074: <code>_csv</code> 힙 타입에 GC 지원 추가</li>
<li>GH-26351: Python 3.10 알파 기간 동안 전환된 힙 타입을 불변으로 만들기</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1098,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Accepted] PEP 687 - Isolating modules in the standard library"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 10:12:44+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
