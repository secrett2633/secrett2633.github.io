3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/524","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","python/pep/524","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"524\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/524","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2bb1,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0524/">PEP 524 - Make os.urandom() blocking on Linux</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 20-Jun-2016</p>
</blockquote>
<p>PEP 524: Linux에서 <code>os.urandom()</code>을 블로킹 방식으로 변경</p>
<h2>초록 (Abstract)</h2>
<p>이 PEP는 Python의 보안 강화를 위해 Linux 3.17 이상 버전에서 <code>os.urandom()</code> 함수가 운영체제의 URBG(Unblocking Random Bit Generator)가 초기화될 때까지 블로킹하도록 수정할 것을 제안합니다. 또한, <code>os.getrandom()</code>이라는 새로운 함수를 추가하여 <code>os.urandom()</code>이 Linux에서 블로킹될 때의 처리 방식을 선택할 수 있도록 합니다.</p>
<h2>버그 (The bug)</h2>
<h3>원래 버그 (Original bug)</h3>
<p>Python 3.5.0은 Linux 3.17 및 Solaris 11.3에 도입된 새로운 <code>getrandom()</code> 시스템 호출을 사용하도록 개선되었습니다. 그러나 이로 인해 가상 머신이나 임베디드 장치에서 Python 3.5가 시작 시 블로킹된다는 불만이 제기되었습니다. Linux에서 <code>getrandom(0)</code>은 커널이 128비트 엔트로피로 <code>urandom</code>을 초기화할 때까지 블로킹됩니다. 이 문제는 <code>import random</code>에서 블로킹되거나, 시스템 초기화 과정에서 <code>getrandom(0)</code>으로 인해 Python 초기화가 멈추는 상황으로 나타났습니다. Python은 해시 서비스 거부(DoS) 공격에 대한 대응책으로 무작위 바이트를 필요로 합니다. Python 3.5에서 <code>random.Random</code> 생성자는 <code>Mersenne Twister RNG</code>에 시드를 제공하기 위해 <code>os.urandom()</code>에서 2500바이트를 읽습니다.</p>
<h3>Python 3.5.2에서의 상태 (Status in Python 3.5.2)</h3>
<p>Python 3.5.2는 Python 2.7 및 Python 3.4와 유사하게 동작합니다. 시스템 <code>urandom</code>이 초기화되지 않아도 시작은 블로킹되지 않지만, <code>os.urandom()</code>은 품질이 낮은 엔트로피를 반환할 수 있습니다.</p>
<h2>사용 사례 (Use Cases)</h2>
<h3>사용 사례 1: init 스크립트 (Use Case 1: init script)</h3>
<p>시스템 초기화 스크립트(예: <code>systemd-cron</code>)가 Python 3 스크립트를 사용하는 경우, 해당 스크립트가 블로킹되면 시스템 초기화도 멈춥니다.</p>
<h4>1.1: 비밀(secret)이 필요 없는 경우 (No secret needed)</h4>
<p>스크립트가 보안 비밀을 생성할 필요가 없다면 Python 3.5.2에서 이미 올바르게 처리됩니다.</p>
<h4>1.2: 보안 비밀(secure secret)이 필요한 경우 (Secure secret required)</h4>
<p>스크립트가 보안 비밀을 생성해야 하는 경우, 안전한 해결책이 없습니다. 약한 엔트로피로 대체하는 것은 보안을 저하시키므로 용납될 수 없습니다. Python은 시스템 <code>urandom</code>이 초기화될 때까지 기다릴 수밖에 없으며, 이 경우 전체 시스템 초기화가 지연됩니다.</p>
<h3>사용 사례 2: 웹 서버 (Use Case 2: Web server)</h3>
<p>HTTP 및 HTTPS 프로토콜을 사용하는 Python 3 웹 서버를 운영하는 경우입니다. 해시 DoS 공격의 주요 대상이 웹 서버이므로, 해시 비밀은 공격자가 쉽게 추측할 수 없어야 합니다. 웹 서버는 높은 보안 수준을 요구하며, 약한 엔트로피로 서버를 실행하는 것보다 보안이 더 중요합니다. 엔트로피가 충분하지 않다면 서버는 블로킹되거나 오류와 함께 실패해야 합니다.</p>
<h2>시스템 <code>urandom</code> 문제 해결 (Fix system urandom)</h2>
<h3>부팅 시 디스크에서 엔트로피 로드 (Load entropy from disk at boot)</h3>
<p>시스템 초기화를 가속화하기 위해 운영체제는 종료 시 엔트로피를 디스크에 저장하고 부팅 시 다시 로드합니다.</p>
<h3>가상 머신 (Virtual machines)</h3>
<p>가상 머신은 하드웨어에 직접 접근할 수 없어 엔트로피 소스가 부족합니다. <code>virtio-rng</code> 장치를 추가하여 호스트에서 가상 머신으로 엔트로피를 전달하는 것이 해결책이 될 수 있습니다.</p>
<h3>임베디드 장치 (Embedded devices)</h3>
<p>임베디드 장치의 경우 하드웨어 RNG를 연결하는 것이 해결책입니다.</p>
<h2>무작위 읽기 시 서비스 거부 (Denial-of-service when reading random)</h2>
<h3><code>/dev/random</code> 대신 <code>/dev/urandom</code> 사용 (Don't use /dev/random but /dev/urandom)</h3>
<p><code>/dev/random</code>은 매우 특수한 경우에만 사용해야 합니다. Linux에서 <code>/dev/random</code>을 읽는 것은 블로킹을 유발할 가능성이 높으며, 애플리케이션이 비밀을 생성하기 위해 5초 이상 블로킹되는 것을 사용자들은 좋아하지 않습니다. <code>getrandom(size, 0)</code>은 Linux에서 영원히 블로킹될 수 있습니다. <code>/dev/urandom</code>은 Linux에서 보안상 안전하며, <code>/dev/random</code> 대신 사용해야 합니다.</p>
<h2>제안 (Rationale)</h2>
<p>Linux에서 <code>/dev/urandom</code>을 읽는 것은 커널이 128비트의 엔트로피를 수집하기 전에는 "약한" 엔트로피를 반환할 수 있습니다. Linux 3.17은 <code>urandom</code>이 초기화될 때까지 블로킹할 수 있는 새로운 <code>getrandom()</code> 시스템 호출을 추가했습니다.
이 PEP는 <code>os.urandom()</code>을 블로킹 모드의 <code>getrandom()</code>을 사용하도록 수정하여 약한 엔트로피를 반환하지 않고, Python이 시작 시 블로킹되지 않도록 하는 것을 제안합니다.</p>
<h2>변경 사항 (Changes)</h2>
<h3>Linux에서 <code>os.urandom()</code>을 블로킹 방식으로 변경 (Make os.urandom() blocking on Linux)</h3>
<ul>
<li><code>os.urandom()</code> (C 함수 <code>_PyOS_URandom()</code>)은 Linux 및 Solaris에서 항상 <code>getrandom(size, 0)</code> (블로킹 모드)을 호출하도록 수정됩니다.</li>
<li>새로운 비공개 함수 <code>_PyOS_URandom_Nonblocking()</code>가 추가됩니다. 이 함수는 Linux 및 Solaris에서 <code>getrandom(size, GRND_NONBLOCK)</code>을 호출하고, <code>EAGAIN</code> 오류 발생 시 <code>/dev/urandom</code> 읽기로 대체합니다.</li>
<li>해시 비밀은 비블로킹 <code>system urandom</code>에서 초기화됩니다.</li>
<li><code>random.Random</code> 생성자는 이제 내부적으로 새로운 <code>_PyOS_URandom_Nonblocking()</code> 함수를 사용하여 RNG에 시드를 제공합니다.</li>
</ul>
<h3>새로운 <code>os.getrandom()</code> 함수 추가 (Add a new os.getrandom() function)</h3>
<p><code>os.getrandom(size, flags=0)</code> 함수가 추가됩니다. 이 함수는 Linux에서는 <code>getrandom()</code> 시스템 호출을, Solaris에서는 <code>getrandom()</code> C 함수를 사용합니다.
이 함수에는 두 가지 새로운 플래그가 있습니다:</p>
<ul>
<li><code>os.GRND_RANDOM</code>: <code>/dev/urandom</code> 대신 <code>/dev/random</code>에서 바이트를 읽습니다.</li>
<li><code>os.GRND_NONBLOCK</code>: <code>os.getrandom()</code>이 블로킹될 경우 <code>BlockingIOError</code>를 발생시킵니다.</li>
</ul>
<h3><code>os.getrandom()</code> 사용 예시 (Examples using os.getrandom())</h3>
<ul>
<li><strong>Best-effort RNG:</strong> 운영체제 <code>urandom</code>에서 무작위 바이트를 얻으려 시도하거나 <code>random</code> 모듈로 대체하는 이식성 있는 비블로킹 RNG 함수의 예시를 제공합니다.</li>
<li><code>wait_for_system_rng()</code>: Linux 또는 Solaris에서 운영체제 <code>urandom</code>이 초기화될 때까지 기다리는 함수 예시를 제공합니다.</li>
<li><strong>Create a best-effort RNG:</strong> <code>getrandom(size)</code>가 블로킹될지 여부에 따라 <code>Random.SystemRandom</code>과 <code>Random.Random</code> 중 선택하여 비블로킹 RNG를 생성하는 간단한 예시를 제공합니다.</li>
</ul>
<h2>대안 (Alternative)</h2>
<h3><code>os.urandom()</code>은 그대로 두고 <code>os.getrandom()</code>만 추가 (Leave os.urandom() unchanged, add os.getrandom())</h3>
<p><code>os.urandom()</code>은 변경 없이 블로킹되지 않지만, <code>urandom</code>이 초기화되지 않은 경우 약한 엔트로피를 반환할 수 있습니다. 새로운 <code>os.getrandom()</code> 함수만 추가하는 방식입니다. 이 방식은 개발자가 보안을 잘 이해하고 각 플랫폼을 잘 알아야 한다는 단점이 있습니다. Python은 일반적으로 "구현 세부 사항"을 숨기는 전통이 있습니다.</p>
<h3><code>os.urandom()</code>에서 <code>BlockingIOError</code> 발생 (Raise BlockingIOError in os.urandom())</h3>
<p><code>os.urandom()</code>이 블로킹될 경우 즉시 <code>BlockingIOError</code>를 발생시켜 개발자가 이 상황을 처리하는 방식을 선택할 수 있도록 합니다. 그러나 이는 웹 서버와 같은 보안에 민감한 사용 사례에서 약한 엔트로피로 대체하는 것이 용납되지 않아, 애플리케이션이 <code>BlockingIOError</code>를 처리하도록 수정되어야 한다는 비판이 있었습니다.</p>
<h3><code>os.urandom()</code>에 선택적 <code>block</code> 매개변수 추가 (Add an optional block parameter to os.urandom())</h3>
<p><code>os.urandom()</code>에 선택적 <code>block</code> 매개변수를 추가하는 방안입니다. 기본값은 <code>True</code> (기본 블로킹) 또는 <code>False</code> (비블로킹)가 될 수 있습니다. 그러나 모든 플랫폼에서 <code>os.urandom(block=False)</code>를 구현하기 어렵고, API를 더 복잡하게 만든다는 비판이 있었습니다.</p>
<h2>수용 (Acceptance)</h2>
<p>이 PEP는 2016년 8월 8일 Guido van Rossum에 의해 수용되었습니다.</p>
<h2>부록 (Annexes)</h2>
<h3>운영체제 무작위 함수 (Operating system random functions)</h3>
<p><code>os.urandom()</code>은 OpenBSD의 <code>getentropy()</code>, Linux의 <code>getrandom()</code>, Solaris의 <code>getentropy()</code> 및 <code>getrandom()</code>, UNIX/BSD의 <code>/dev/urandom</code> 및 <code>/dev/random</code>, Windows의 <code>CryptGenRandom()</code>과 같은 다양한 운영체제 함수를 사용합니다.</p>
<h3><code>os.urandom()</code>을 사용하는 이유 (Why using os.urandom()?)</h3>
<p><code>os.urandom()</code>은 커널에 구현되어 사용자 공간 RNG의 문제를 겪지 않습니다. 일반적으로 CSPRNG(암호학적으로 안전한 의사 난수 생성기)를 기반으로 구축되어, 상태가 유출되어도 이전에 생성된 숫자를 계산하기 어렵습니다. 커널은 엔트로피 소스를 잘 알고 엔트로피 풀을 정기적으로 채웁니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 524 - Make os.urandom() blocking on Linux"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 23:16:54+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
