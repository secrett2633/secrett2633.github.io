3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/760","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/760","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"760\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/760","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1e77,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0760/">PEP 760 - No More Bare Excepts</a></p>
<p><strong>상태:</strong> Withdrawn | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 02-Oct-2024</p>
</blockquote>
<p>PEP 760 – Bare Except 금지 제안 번역 및 정리</p>
<h2>개요</h2>
<p>이 문서는 Python의 예외 처리 구문에서 <code>except:</code> (bare except) 절을 금지할 것을 제안합니다. 현재 Python은 <code>except:</code> 절을 사용하여 모든 예외를 잡을 수 있게 하지만, 이는 너무 광범위한 예외 처리로 이어져 중요한 오류를 숨길 수 있습니다. 이 PEP는 모든 <code>except</code> 절에 명시적인 예외 유형을 요구하여, 더 정확하고 의도적인 오류 처리를 장려하고자 합니다.</p>
<h2>상태</h2>
<p>Withdrawn (철회됨)</p>
<h2>작성자</h2>
<p>Pablo Galindo, Brett Cannon</p>
<h2>Python 버전</h2>
<p>3.14</p>
<h2>주요 내용</h2>
<h3>동기 (Motivation)</h3>
<p>현재 <code>except:</code> 만 사용하는 구문은 모든 예외를 잡을 수 있게 합니다.</p>
<pre><code class="language-python">try:
    risky_operation()
except:
    handle_any_error()
</code></pre>
<p>이 "모든 예외 잡기" 핸들러는 편리할 수 있지만, 종종 좋지 않은 코딩 관행으로 이어집니다:</p>
<ul>
<li>전파되어야 할 중요한 오류를 숨길 수 있습니다.</li>
<li>예상치 못한 예외를 잡고 숨겨 디버깅을 어렵게 만듭니다.</li>
<li>명시적인 것이 암시적인 것보다 낫다는 Python의 원칙에 위배됩니다.</li>
</ul>
<p>Pylint, Flake8, Ruff와 같은 다양한 린터(linter) 및 PEP 8, Google 스타일 가이드를 포함한 여러 스타일 가이드가 <code>bare except</code> 절을 사용하지 않도록 권고합니다.</p>
<p>명시적인 예외 유형을 요구함으로써, 우리는 더 사려 깊고 정확한 오류 처리를 장려할 수 있습니다:</p>
<pre><code class="language-python">try:
    risky_operation()
except Exception as e:
    handle_expected_error(e)
</code></pre>
<p><code>bare except</code> 핸들러는 종료 예외(terminating exceptions) 처리 의도에 대해 모호하다는 문제도 있습니다.</p>
<ul>
<li><strong>비종료 예외만 잡으려는 의도(<code>except Exception:</code>):</strong> 이 경우 <code>bare except:</code>를 사용하는 것은 의도와 맞지 않으므로 버그입니다.</li>
<li><strong>종료 예외를 포함한 모든 예외를 잡으려는 의도(<code>except BaseException:</code>):</strong> 이 경우 <code>bare except:</code>가 올바르지만, 독자가 앞선 경우와 혼동하지 않도록 확인해야 하는 번거로움이 있습니다.</li>
</ul>
<p>두 가지 가능한 의도 모두 모호하지 않은 명확한 구문이 존재하므로, 모호한 형태(<code>bare except:</code>)는 불필요하며 이에 따라 이를 금지할 것을 제안합니다.</p>
<h3>근거 (Rationale)</h3>
<p><code>bare except</code> 절을 금지하기로 한 결정은 다음 사항들을 기반으로 합니다:</p>
<ul>
<li>특정 예외 유형을 요구하면 프로그래머의 의도가 명확해지고, 발생할 수 있는 예외에 대해 생각하게끔 장려합니다.</li>
<li>특정 예외만 잡으면 예상치 못한 오류를 식별하고 디버깅하기가 더 쉬워집니다.</li>
<li>지나치게 광범위한 예외 처리를 방지하여 치명적인 오류가 조용히 무시되는 위험을 줄입니다.</li>
<li>많은 스타일 가이드와 린터가 이미 <code>bare except</code> 절 사용을 권장하지 않습니다.</li>
</ul>
<h3>명세 (Specification)</h3>
<p><code>except</code> 절의 구문이 예외 유형을 요구하도록 수정됩니다. 문법은 <code>except</code> 절에 빈 표현식을 추가할 가능성을 제거하도록 업데이트됩니다.</p>
<p>이 변경은 <code>bare except:</code> 구문을 금지합니다. 모든 <code>except</code> 절은 적어도 하나의 예외 유형을 지정해야 합니다.</p>
<pre><code class="language-python">try:
    ...
except ValueError:        # 허용됨
    ...
except (TypeError, RuntimeError): # 허용됨
    ...
except Exception:         # 허용됨 (모든 예외를 명시적으로 잡음)
    ...
</code></pre>
<p>예외 처리의 의미는 변경되지 않으며, <code>BaseException</code> 또는 유사하게 광범위한 예외 유형을 명시적으로 지정하지 않고는 모든 예외를 잡는 것이 더 이상 불가능해집니다.</p>
<h3>하위 호환성 (Backwards Compatibility)</h3>
<p>이 변경은 하위 호환성이 없습니다. <code>bare except:</code> 절을 사용하는 기존 코드는 수정되어야 합니다. 전환을 용이하게 하기 위해 다음과 같은 조치가 제안되었습니다:</p>
<ul>
<li>Python 3.14에서 <code>bare except</code> 절에 대한 DeprecationWarning이 발생합니다.</li>
<li>Python 3.17에서 해당 구문은 완전히 금지됩니다.</li>
<li>이전 버전의 Python에서 <code>bare except</code> 핸들러를 무효화하기 위해 <code>from __future__ import strict_excepts</code>가 제공될 것입니다.</li>
<li><code>bare except:</code>를 <code>except BaseException:</code>으로 자동 업데이트하는 도구가 제공될 것입니다.</li>
</ul>
<h3>보안 관련 사항 (Security Implications)</h3>
<p>이 변경은 보안에 미치는 영향이 없습니다.</p>
<h3>교육 방안 (How to Teach This)</h3>
<ul>
<li>
<p><strong>새로운 Python 사용자:</strong> 예외 처리는 처음부터 명시적인 예외 유형으로 가르쳐야 합니다.</p>
<pre><code class="language-python">try:
    result = risky_operation()
except ValueError:
    handle_value_error()
except TypeError:
    handle_type_error()
except Exception as e:
    handle_unexpected_error(e)
</code></pre>
</li>
<li>
<p><strong>숙련된 사용자:</strong> 이 변경은 이제 언어에 의해 강제되는 모범 사례로 소개될 수 있습니다. 다음 사항이 강조되어야 합니다:</p>
<ul>
<li>가능하면 항상 특정 예외를 잡으세요.</li>
<li><code>except Exception:</code>은 정말 예상치 못한 오류에 대한 마지막 수단으로 사용하세요.</li>
<li>신중한 고려 없이 예외를 침묵시키지 마세요.</li>
</ul>
</li>
</ul>
<p>문서에는 일반적인 예외 계층 구조와 적절한 예외 유형을 선택하는 방법에 대한 지침이 포함되어야 합니다.</p>
<h3>거부된 아이디어 (Rejected ideas)</h3>
<p><code>bare except:</code> 핸들러의 사용이 올바른 진정한 사례들이 있습니다. 예를 들어, Mailman 프로젝트에서 어떤 예외가 발생하더라도 트랜잭션을 처리하는 경우입니다:</p>
<pre><code class="language-python">@contextmanager
def transaction():
    """Context manager for ensuring the transaction is complete."""
    try:
        yield
    except:
        config.db.abort()
        raise
    else:
        config.db.commit()
</code></pre>
<p>이 코드는 어떤 예외가 발생하든 열려 있는 트랜잭션이 중단되도록 보장하며, 성공적인 경우에는 트랜잭션이 커밋되도록 합니다.</p>
<p>이러한 <code>bare except:</code> 핸들러가 올바른 경우가 있음에도 불구하고, "동기" 섹션에 제시된 이유들 때문에 <code>except BaseException:</code>을 사용하여 명시적으로 표현하는 것이 더 낫다고 판단했습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Withdrawn] PEP 760 - No More Bare Excepts"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:44:07+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
