3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-0249a4ed84fdbe73.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/682","c"]
0:["SAPzS3zi9tsG5MkeKvxIA",[[["",{"children":[["slug","python/pep/682","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"682\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/682","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T2238,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0682/">PEP 682 - Format Specifier for Signed Zero</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 29-Jan-2022</p>
</blockquote>
<p>PEP 682 – 부호 있는 0에 대한 형식 지정자</p>
<h2>개요</h2>
<p>이 문서는 Python의 <code>float</code> 및 <code>Decimal</code> 타입이 부호 있는 0(예: <code>-0.0</code>)을 표현할 수 있음에도 불구하고, 많은 수학 분야에서 음수 0이 예상치 못하거나 원치 않는 결과로 여겨지는 문제를 다룹니다. 특히 숫자 결과(종종 반올림된)를 표시할 때 이러한 경향이 두드러집니다. 이 PEP는 음수 0을 양수 0으로 정규화할 수 있도록 문자열 형식 지정(string format specification)을 확장하는 것을 제안합니다.</p>
<h2>동기 (Motivation)</h2>
<p>음수 0은 다음과 같이 존재합니다.</p>
<pre><code class="language-python">>>> x = -0.
>>> x
-0.0
</code></pre>
<p>숫자를 포매팅(formatting)할 때, 음수 0은 반올림(rounding)의 결과로 나타날 수 있습니다. 사용자의 의도가 실제로 정밀도(precision)를 버리는 것이라고 가정할 때, 반올림된 결과의 음수 0과 양수 0 사이의 구별은 원치 않는 부산물로 간주될 수 있습니다.</p>
<pre><code class="language-python">>>> for x in (.002, -.001, .060):
... print(f'{x: .1f}')
0.0
-0.0
0.1
</code></pre>
<p>음수 0의 부호를 제거하는 다양한 접근 방식이 있습니다. 양수 0을 추가하여 조건문 없이 달성할 수 있습니다.</p>
<pre><code class="language-python">>>> x = -0.
>>> x + 0.
0.0
</code></pre>
<p>포매팅 시 음수 0을 정규화하려면, 입력 값에 대해 중복되고 오류 발생 가능성이 있는 사전 반올림(pre-rounding)을 수행해야 합니다.</p>
<pre><code class="language-python">>>> for x in (.002, -.001, .060):
... print(f'{round(x, 1) + 0.: .1f}')
0.0
0.0
0.1
</code></pre>
<p>언어에 관계없이 프로그래머들이 음수 0을 억제하는 방법을 자주 찾고 있으며, 다양한 해결책(사전 반올림, 사후 정규표현식 등)을 사용한다는 충분한 증거가 있습니다. 예를 들면 다음과 같습니다.</p>
<ul>
<li>Python에서 음수 0을 항상 양수 0으로 포맷하는 방법 (Python, 사후 정규표현식)</li>
<li>(Iron)Python에서 modulo 연산자 및 "음수 0"과 관련된 포매팅 문제 (Python, 사전 반올림)</li>
<li>Java에서 0일 경우 음수 부호 (Java, 사후 정규표현식)</li>
<li>작은 음수가 "-0"으로 출력되는 것을 방지 (Objective-C, 사용자 정의 숫자 포매터)</li>
</ul>
<p>대신, 숫자 문자열 포매팅이 이미 제공하는 모든 기능 위에 음수 0을 정규화하는 일급(first-class) 옵션을 원합니다.</p>
<h2>근거 (Rationale)</h2>
<p>포맷된 숫자 출력에서 음수 0이 원치 않는 경우가 있습니다. 오히려 원치 않는 경우가 더 흔하다고 볼 수 있습니다. 형식 지정(format specification)을 확장하는 것이 이를 지원하는 가장 좋은 방법입니다. 왜냐하면 숫자 포매팅은 이미 반올림을 포함하고 있으며, 음수 0의 정규화는 반올림 후에 이루어져야 하기 때문입니다.</p>
<p>포매팅 전에 숫자를 사전 반올림하고 정규화하는 것이 가능하지만, 반올림이 형식 지정자와 정확히 일치하지 않으면 번거롭고 오류가 발생하기 쉽습니다. 또한, 포매팅을 래핑하는 함수는 정밀도 정보를 추출하기 위해 형식 지정자를 파싱해야 할 것입니다. 예를 들어, 1차원 숫자 배열을 포맷하는 다음 유틸리티가 이러한 사전 반올림으로 인해 얼마나 복잡해질지 고려해보세요.</p>
<pre><code class="language-python">def format_vector(v, format_spec='8.2f'):
    """Format a vector (any iterable) using given per-term format string."""
    return f"[{','.join(f'{term:{format_spec}}' for term in v)}]"
</code></pre>
<p>현재까지 음수 0에 대한 포매팅 옵션을 제공하는 다른 널리 사용되는 언어나 라이브러리는 없는 것으로 보입니다. 그러나 아래에 지정된 것과 동일한 <code>z</code> 옵션 구문 및 의미 체계가 C++ <code>std::format()</code>에 대해 제안되었습니다. 이 제안은 C++20에서는 철회되었지만, C++23에서는 합의된 제안이 약속되었습니다. (이 PEP를 촉발한 원래 기능 요청은 C++ 제안에 대한 지식 없이 주장되었습니다.)</p>
<p>Rust 개발자들이 출력에서 음수 0을 억제할지 여부를 논의했을 때, 그들은 다른 언어에 대한 작은 설문 조사를 했습니다. 특히, 음수 0 처리 옵션을 제공하는 언어는 언급되지 않았습니다.</p>
<h2>사양 (Specification)</h2>
<p><code>sign</code> 다음에 선택적이고 리터럴인 <code>z</code>가 Format Specification Mini-Language에 추가됩니다.</p>
<pre><code>[[fill]align][sign][z][#][0][width][grouping_option][.precision][type]
</code></pre>
<p>여기서 <code>z</code>는 부동 소수점(floating-point) 표현 타입(format specification documentation에 정의된 <code>f</code>, <code>g</code> 등)에 허용됩니다. <code>z</code> 지원은 각 숫자 타입의 <code>.__format__()</code> 메서드에 의해 제공되며, 이 지정자를 f-string, 내장 <code>format()</code> 및 <code>str.format()</code>에서 사용할 수 있도록 합니다.</p>
<p><code>z</code>가 존재하면, 음수 0(원래 값이든 반올림 결과이든)은 양수 0으로 정규화됩니다.</p>
<p><strong>요약:</strong></p>
<pre><code class="language-python">>>> x = -.00001
>>> f'{x:z.1f}'
'0.0'
>>> import decimal
>>> x = decimal.Decimal('-.00001')
>>> '{:+z.1f}'.format(x)
'+0.0'
</code></pre>
<h3>설계 노트 (Design Notes)</h3>
<p>이 해결책은 옵트인(opt-in) 방식이어야 합니다. 왜냐하면 숫자를 포매팅할 때 음수 0을 예상하거나 의존하는 프로그램의 동작을 변경할 수 없기 때문입니다.</p>
<p>제안된 확장은 의도적으로 <code>[sign][z]</code>이며 <code>[sign[z]]</code>가 아닙니다. <code>sign</code>의 기본값(<code>-</code>)은 널리 알려져 있거나 명시적으로 작성되지 않으므로, 이 <code>z</code> 옵션을 사용하기 위해 모든 사람이 이를 배워야 하는 것을 피할 수 있습니다.</p>
<p>f-string, 내장 <code>format()</code>, <code>str.format()</code>은 새로운 옵션에 접근할 수 있지만, <code>%</code> 포매팅은 그렇지 않습니다. <code>,</code> 옵션(PEP 378)의 경우와 같이 <code>%</code> 포매팅을 새로운 옵션으로 확장하지 않는 선례가 이미 있습니다.</p>
<p>C99 <code>printf</code>는 <code>z</code> 옵션 문자를 다른 목적으로 이미 사용합니다. 즉, <code>unsigned</code> 타입(<code>u</code>)이 <code>size_t</code>의 길이와 일치하도록 한정하는 것입니다. 그러나 부호 있는 0 옵션은 정수 표현 타입에 대해 <code>z</code>를 특별히 허용하지 않으므로, C 언어가 이 새로운 옵션을 채택하고자 한다면 두 가지 사용법을 명확하게 구분할 수 있습니다.</p>
<h2>하위 호환성 (Backwards Compatibility)</h2>
<p>새로운 포매팅 동작은 옵트인(opt-in) 방식이므로, 기존 프로그램의 숫자 포매팅에는 영향을 미치지 않습니다.</p>
<h2>교육 방법 (How to Teach This)</h2>
<p>일반적인 Python 입문 과정에서는 문자열 포매팅을 자세히 다루지 않을 것입니다. 이러한 과정에서는 조정할 필요가 없습니다. 문자열 형식 지정의 세부 사항을 다루는 과정의 경우, 포매팅에 의해 0으로 반올림되는 음수 값에 대한 <code>z</code> 옵션의 효과를 보여주는 단일 예제만으로도 충분할 것입니다. 다른 사람의 코드에서 이 기능을 접하는 독립적인 개발자의 경우, 라이브러리 참조 설명서의 Format Specification Mini-Language 섹션을 참조하는 것으로 충분할 것입니다.</p>
<h2>참조 구현 (Reference Implementation)</h2>
<p>참조 구현은 pull request #30049에 존재합니다.</p>
<h2>저작권 (Copyright)</h2>
<p>이 문서는 퍼블릭 도메인(public domain) 또는 CC0-1.0-Universal 라이선스 중 더 관대한 라이선스에 따라 제공됩니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1214,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 682 - Format Specifier for Signed Zero"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 10:10:49+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
