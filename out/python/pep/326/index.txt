3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/326","c"]
0:["qNOrJYeuqip9qCFPpDVpu",[[["",{"children":[["slug","python/pep/326","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"326\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/326","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1bae,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0326/">PEP 326 - A Case for Top and Bottom Values</a></p>
<p><strong>상태:</strong> Rejected | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 20-Dec-2003</p>
</blockquote>
<h2>PEP 326 – Top 및 Bottom 값에 대한 제안 (Max, Min 상수)</h2>
<h3>요약</h3>
<p>PEP 326은 모든 다른 객체보다 높거나 낮게 비교되는 두 개의 싱글톤(singleton) 상수, <code>Max</code>와 <code>Min</code>을 도입할 것을 제안했습니다. 이 상수들은 코드의 가독성을 높이고, 임시적인 최소/최대 값이 필요하지만 실제 숫자 범위의 제한이 없는 특별한 경우(special cases)를 줄이는 데 목적을 두었습니다. 그러나 이 PEP는 Python의 BDFL(Benevolent Dictator For Life)인 Guido van Rossum에 의해 <strong>거부되었습니다</strong>.</p>
<h3>결과</h3>
<p>이 PEP는 BDFL에 의해 거부되었습니다. 제안된 동작을 구현하는 모듈이 존재하며, 해당 동작을 원하는 사용자들은 이 모듈을 사용할 것을 권장하고 있습니다.</p>
<h3>제안 배경 (Rationale)</h3>
<p>현재 Python에서 절대적인 최소/최대 값을 처리하는 방식에는 여러 한계가 있습니다.</p>
<ul>
<li>
<p><strong><code>None</code>의 사용:</strong> <code>None</code>은 어떤 값보다도 작은 절대적인 최소값으로 사용될 수 있지만, Python 3.0에서 이러한 동작이 변경될 수 있어 의존해서는 안 됩니다.</p>
</li>
<li>
<p><strong><code>sys.maxint</code> 및 부동 소수점 무한대:</strong> <code>sys.maxint</code>는 대부분의 아키텍처에서 임의로 작을 수 있으며(예: 2<strong>31-1 또는 2</strong>63-1), <code>long</code> 정수나 부동 소수점 숫자에 의해 쉽게 초과될 수 있습니다. 또한, 가장 큰 부동 소수점 숫자보다 큰 <code>long</code> 정수를 어떤 <code>float</code>와 비교하면 <code>OverflowError</code>가 발생할 수 있습니다.</p>
<pre><code class="language-python">>>> cmp(1.0, 10**309)
Traceback (most recent call last):
  File "&#x3C;stdin>", line 1, in ?
OverflowError: long int too large to convert to float
</code></pre>
<p><code>Max</code>와 <code>Min</code>을 도입하면 이러한 단점 없이 일관된 절대 최소/최대 값 비교를 가능하게 합니다.</p>
</li>
</ul>
<h3>동기 (Motivation)</h3>
<p>수많은 알고리즘은 초기 값을 논리적 또는 숫자적 무한대나 음의 무한대로 설정하여 시작합니다. Python은 이러한 일관된 "진정한" 극단 값을 제공하지 않아, 개발자들은 임의의 큰 숫자를 사용하거나 <code>None</code>을 오버로드하는 등의 workaround를 사용해야 했습니다. <code>Max</code>와 <code>Min</code>을 추가함으로써, Python은 진정한 최대/최소 값을 가지게 되어 알고리즘의 특별한 경우(special cases)를 줄여 코드를 더 명확하게 만들 수 있습니다.</p>
<h4><code>Max</code> 사용 예시</h4>
<ul>
<li><strong>서버 테스트:</strong> 특정 수의 클라이언트만 처리하고 종료하는 테스트 서버를 <code>Max</code>를 사용하여 최소한의 노력으로 프로덕션 서버로 전환할 수 있습니다.</li>
<li><strong>Dijkstra의 최단 경로 알고리즘:</strong> 그래프의 모든 노드에 대한 거리를 무한대로 초기화하는 과정에서 <code>Max</code>를 사용하면 코드의 의미가 명확해집니다. 임의의 큰 숫자를 사용하는 대신 <code>Max</code>를 사용하면 오버플로(overflow) 문제나 가독성 문제를 피할 수 있습니다.</li>
</ul>
<h4><code>Min</code> 사용 예시</h4>
<ul>
<li><strong>통신 네트워크 신뢰도 계산:</strong> 그래프에서 두 노드 간의 채널 신뢰도(0과 1 사이의 확률)를 계산하는 알고리즘에서 <code>Min</code>을 사용하여 초기 신뢰도를 가장 낮은 값으로 설정할 수 있습니다.</li>
</ul>
<h4>기타 예시</h4>
<ul>
<li><strong>범위 검색 데이터 구조:</strong> Segment tree, Range tree, k-d tree, 데이터베이스 키 등 범위 검색(range searching)과 관련된 다양한 데이터 구조에서 <code>Max</code>와 <code>Min</code> 값이 즉각적으로 유용하게 사용될 수 있습니다. 현재는 <code>None</code>을 극단 값으로 오버로드하거나 임의의 큰 숫자를 사용하는데, 이는 <code>None</code>의 비교 동작 문제나 오버런/언더런 버그를 유발할 수 있습니다.</li>
</ul>
<h3>독립적인 구현의 문제 (Independent Implementations?)</h3>
<p><code>Min</code> / <code>Max</code> 개념을 사용자들이 독립적으로 구현할 경우, 호환되지 않거나 일관성 없는 정렬(ordering)을 초래할 가능성이 높습니다. 예를 들어, <code>MyMin</code>과 <code>YourMin</code>이라는 두 가지 독립적인 <code>Min</code> 구현이 있을 때, 정렬 시 이들 사이의 순서가 보장되지 않습니다. 이는 <code>heapq</code> 모듈과 같은 다른 자료구조 사용 시에도 문제가 발생할 수 있습니다.</p>
<p>이 PEP의 핵심은 "유일하고 진정한 <code>Max</code>"와 "유일하고 진정한 <code>Min</code>"을 도입하여 표준화된 동작을 제공하는 것이었습니다. 사용자 기반 구현은 장려되지 않으며, "유일하고 진정한 구현"의 사용이 권장되었습니다.</p>
<h3>참조 구현 (Reference Implementation)</h3>
<p>PEP에서 제안된 <code>Max</code>와 <code>Min</code>의 동작을 보여주는 간단한 Python 구현은 다음과 같습니다.</p>
<pre><code class="language-python">class _ExtremeType(object):
    def __init__(self, cmpr, rep):
        object.__init__(self)
        self._cmpr = cmpr
        self._rep = rep

    def __cmp__(self, other):
        # 동일한 ExtremeType 인스턴스 간 비교 시 0 반환
        if isinstance(other, self.__class__) and \
           other._cmpr == self._cmpr:
            return 0
        return self._cmpr

    def __repr__(self):
        return self._rep

Max = _ExtremeType(1, "Max")
Min = _ExtremeType(-1, "Min")
</code></pre>
<p>이 구현은 <code>max()</code> 및 <code>min()</code> 함수와 함께 예상대로 작동하여 모든 값보다 크거나 작게 비교되는 것을 보여줍니다.</p>
<h3>미해결 문제 (Open Issues)</h3>
<p>PEP가 거부되었으므로 모든 미해결 문제는 이제 종결되었으며 중요하지 않습니다. 제안된 모듈은 <code>UniversalMaximum</code>과 <code>UniversalMinimum</code>이라는 이름을 사용할 것이며, 필요시 <code>from extremes import UniversalMaximum as uMax, UniversalMinimum as uMin</code>와 같이 <code>import</code> 시 이름을 변경하여 사용할 것을 제안합니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Rejected] PEP 326 - A Case for Top and Bottom Values"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 20:37:04+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
