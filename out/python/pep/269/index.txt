3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","python/pep/269","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","python/pep/269","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"269\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/269","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1ec6,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0269/">PEP 269 - Pgen Module for Python</a></p>
<p><strong>상태:</strong> Deferred | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 24-Aug-2001</p>
</blockquote>
<h1>PEP 269 – Python용 Pgen 모듈</h1>
<h2>개요</h2>
<p>PEP 269는 Python 파서를 생성하는 데 사용되는 <code>pgen</code> 파서 제너레이터(parser generator)를 Python 모듈로 노출할 것을 제안합니다. 이는 기존의 <code>parser</code> 모듈이 Python 파서 자체를 노출하는 것과 유사한 접근 방식입니다.</p>
<h2>배경 (Rationale)</h2>
<p>Python의 역사 전반에 걸쳐 Python 컴파일러 생성에 대한 수많은 논의가 있었습니다. 이러한 논의를 통해 <code>parser</code> 모듈과 Jeremy Hylton의 <code>compiler</code> 모듈과 같은 여러 Python 파서 구현이 탄생했습니다. 하지만 언어 변경이 여러 번 제안되었음에도 불구하고, Python 구문(syntax) 실험은 실제 Python 빌드에 사용되는 파서 제너레이터에 대한 Python 바인딩(binding)이 부족했습니다.</p>
<p><code>pgen</code> 라이브러리를 대상으로 Fred Drake Jr.의 <code>parser</code> 래퍼와 유사한 Python 래퍼를 제공함으로써 다음과 같은 이점을 얻을 수 있다고 주장합니다:</p>
<ul>
<li><strong>구문 변경 참조 구현 개발 용이성:</strong> 현재 구문 변경의 참조 구현(reference implementation)을 개발하려면 <code>pgen</code> 도구를 명령줄에서 사용해야 합니다. 그 결과 생성된 파서 데이터 구조는 사용자 정의 CPython 구현과 인터페이스하기 위해 재작업되거나 C 확장 모듈로 래핑되어야 합니다. <code>pgen</code> 모듈을 제공하면 이러한 과정이 더 쉬워질 것입니다.</li>
<li><strong>구문 변경 참조 구현 배포 용이성:</strong> 파서 제너레이터가 Python에서 사용 가능해지므로, 결과 파서 또한 Python에서 접근할 수 있게 됩니다. 따라서 참조 구현은 기존 CPython 배포의 사용자 정의 버전을 사용하거나 컴파일 가능한 확장 모듈로 제공되는 대신, 순수 Python 코드로 제공될 수 있습니다.</li>
<li><strong>더 많은 청중과의 구문 변경 논의 용이성:</strong> Python 사용자 커뮤니티가 CPython 개발자 커뮤니티보다 훨씬 크기 때문에, 이는 두 번째 주장으로부터 자연스럽게 파생되는 이점입니다.</li>
<li><strong>소규모 언어 개발 향상:</strong> 추가 모듈이 완전한 기능을 갖춘 LL(1) 파서 제너레이터이므로, Python 내에서 소규모 언어(small languages) 개발이 더욱 향상될 것입니다.</li>
</ul>
<h2>명세 (Specification)</h2>
<p>제안된 모듈의 이름은 <code>pgen</code>이 될 것이며, 다음 함수들을 포함합니다:</p>
<ul>
<li><code>parseGrammarFile(fileName) -> AST</code>: <code>fileName</code>이 가리키는 파일을 읽고 AST(Abstract Syntax Tree) 객체를 생성합니다. AST 노드는 파서 제너레이터 메타-문법(meta-grammar)의 비종단(nonterminal) 숫자 값을 포함합니다. 출력 AST는 <code>parser</code> 모듈이 제공하는 AST 확장 클래스의 인스턴스가 됩니다. 입력 파일에 구문 오류가 있으면 <code>SyntaxError</code> 예외가 발생합니다.</li>
<li><code>parseGrammarString(text) -> AST</code>: <code>parseGrammarFile()</code>과 동일한 의미론을 따르지만, 파일 이름 대신 문법 텍스트를 문자열로 입력받습니다.</li>
<li><code>buildParser(grammarAst) -> DFA</code>: 입력으로 AST 객체를 받아 DFA(Deterministic Finite Automaton, 결정적 유한 오토마타) 데이터 구조를 반환합니다. DFA 데이터 구조는 <code>parser</code> 모듈에서 AST 구조가 제공되는 방식과 유사하게 C 확장 클래스가 될 것입니다. 입력 AST가 <code>pgen</code> 메타-문법에 정의된 비종단 코드와 일치하지 않으면 <code>ValueError</code> 예외가 발생합니다.</li>
<li><code>parseFile(fileName, dfa, start) -> AST</code>: <code>PyParser_ParseFile()</code> C API 함수의 래퍼 역할을 합니다. 래퍼 코드는 DFA C 확장 클래스와 파일 이름을 받아들입니다. <code>token</code> 모듈의 어휘 값(lexical values)과 DFA에 포함된 비종단 값(nonterminal values)을 따르는 AST 인스턴스가 출력됩니다.</li>
<li><code>parseString(text, dfa, start) -> AST</code>: <code>parseFile()</code> 함수와 유사하게 작동하지만, 파싱할 텍스트를 인자로 받습니다. <code>parseFile()</code>이 <code>PyParser_ParseFile()</code> C API 함수를 래핑하는 것처럼, <code>parseString()</code>은 <code>PyParser_ParseString()</code> 함수를 래핑합니다.</li>
<li><code>symbolToStringMap(dfa) -> dict</code>: DFA 인스턴스를 받아, DFA의 비종단에 대한 숫자 값을 원래 문법 명세에 있는 비종단의 문자열 이름에 매핑하는 딕셔너리 객체를 반환합니다.</li>
<li><code>stringToSymbolMap(dfa) -> dict</code>: 입력 DFA의 비종단 이름을 해당 숫자 값에 매핑하는 딕셔너리를 출력합니다.</li>
</ul>
<p>매핑 생성 함수와 파싱 함수가 DFA 확장 클래스의 메서드로도 제공된다면 추가적인 장점이 있을 것이라고 언급되어 있습니다.</p>
<h2>구현 계획 (Implementation Plan)</h2>
<p>이 개선을 달성하기 위한 계획은 다음과 같습니다:</p>
<ol>
<li><code>pgen</code> 함수 이름을 CPython 명명 표준에 맞게 변경합니다. 여기에는 <code>Include</code> 하위 디렉토리에 일부 헤더 파일을 추가하는 작업이 포함될 수 있습니다.</li>
<li><code>Makefile.pre.in</code>의 <code>pgen</code> C 모듈을 고유한 <code>pgen</code> 요소에서 Python C 라이브러리로 이동합니다.</li>
<li><code>parser</code> 모듈의 AST 확장 클래스가 이해하지 못할 수 있는 AST 유형이 있음을 인식하도록 필요한 변경을 수행합니다. (AST 확장 클래스는 트리가 <code>suite</code>인지 <code>expression</code>인지 추적하는 것으로 보입니다.)</li>
<li><code>Modules</code> 디렉토리에 추가 C 모듈을 코딩합니다. 이 C 확장 모듈은 DFA 확장 클래스와 앞 섹션에서 설명한 함수들을 구현할 것입니다.</li>
<li>새 모듈을 빌드 프로세스에 추가합니다.</li>
</ol>
<h2>제약 사항 (Limitations)</h2>
<p>이 제안에 따르면, Python 3000의 잠재적 설계자들은 여전히 Python의 어휘 규칙(lexical conventions)에 묶이게 될 것입니다. Python 렉서(lexer)의 추가, 제거 또는 수정은 이 PEP의 범위를 벗어납니다.</p>
<h2>참조 구현 (Reference Implementation)</h2>
<p>현재 제공되는 참조 구현은 없습니다. 과거에 <code>http://sourceforge.net/tracker/index.php?func=detail&#x26;aid=599331&#x26;group_id=5470&#x26;atid=305470</code>에서 패치가 제공되었지만, 더 이상 유지 관리되지 않습니다.</p>
<h2>참고 자료 (References)</h2>
<ul>
<li>(사라진) Python Compiler-SIG: http://www.python.org/sigs/compiler-sig/</li>
<li>Parser Module Documentation: http://docs.python.org/library/parser.html</li>
<li>Hylton, Jeremy: http://docs.python.org/library/compiler.html</li>
<li>Pelletier, Michel. "Python Interface Syntax", PEP 245</li>
<li>The Python Types-SIG: http://www.python.org/sigs/types-sig/</li>
</ul>
<h2>저작권 (Copyright)</h2>
<p>이 문서는 퍼블릭 도메인(public domain)에 공개되었습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Deferred] PEP 269 - Pgen Module for Python"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 17:51:28+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
