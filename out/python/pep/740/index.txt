3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-19cfc001fdac3337.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-51594f997fc19690.js"],""]
4:["slug","python/pep/740","c"]
0:["FeyCvJug7In7AgUZlfHUx",[[["",{"children":[["slug","python/pep/740","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"740\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/740","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T36cb,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0740/">PEP 740 - Index support for digital attestations</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 08-Jan-2024</p>
</blockquote>
<p>PEP 740: 디지털 증명(Digital Attestations)을 위한 인덱스 지원</p>
<h2>개요 (Abstract)</h2>
<p>이 PEP(Python Enhancement Proposal)는 PyPI와 같은 Python 패키지 저장소에서 디지털 서명된 증명(attestations) 및 이를 검증하는 데 사용되는 메타데이터의 업로드 및 배포와 관련된 변경 사항을 제안합니다. 이 제안은 두 가지 주요 하위 구성 요소로 나뉩니다.</p>
<ol>
<li><strong>업로드 API 변경:</strong> 클라이언트가 <code>attestation objects</code> 형태로 디지털 증명을 업로드할 수 있도록 현재 표준화되지 않은 PyPI 업로드 API를 변경합니다.</li>
<li><strong>인덱스 API 변경:</strong> HTML 및 JSON "Simple" API를 변경하여 클라이언트가 개별 릴리스 파일에 대한 디지털 증명 및 <code>Trusted Publishing</code> 메타데이터를 <code>provenance objects</code> 형태로 검색할 수 있도록 합니다.</li>
</ol>
<p>이 PEP는 릴리스 업로드 시 디지털 증명을 의무화하거나 <code>pip</code>와 같은 설치 클라이언트가 이를 검증하도록 하는 정책적 권고를 포함하지 않습니다.</p>
<h2>도입 배경 및 동기 (Rationale and Motivation)</h2>
<p>Python 패키지에 대한 디지털 서명의 필요성은 패키지 관리자와 다운스트림 사용자 모두로부터 지속적으로 제기되어 왔습니다.</p>
<ul>
<li><strong>무결성 및 진정성 입증:</strong> 관리자들은 패키지 업로드의 무결성과 진정성을 입증하고자 합니다.</li>
<li><strong>다운스트림 사용자 검증:</strong> 개별 다운스트림 사용자는 인덱스의 정직성에 대한 추가적인 신뢰 없이 패키지 무결성 및 진정성을 검증하고자 합니다.</li>
<li><strong>대규모 다운스트림 사용자 (예: OS 배포판):</strong> 유사한 검증을 수행하고 자체 다운스트림 패키징 생태계를 위해 재노출하거나 카운터 서명할 수 있도록 합니다.</li>
</ul>
<p>이 제안은 위에 언급된 모든 사용 사례를 수용하고자 합니다. 또한, 다음과 같은 동기를 가지고 있습니다.</p>
<ul>
<li><strong>Python 패키지 배포를 위한 검증 가능한 출처 (Verifiable provenance):</strong> 현재 많은 Python 패키지는 소스 호스트의 URL과 같이 인증되지 않은 출처 메타데이터를 포함합니다. 암호화 증명 형식은 이러한 패키지와 해당 소스 호스트 간에 강력한 인증 링크를 가능하게 하여 인덱스 및 다운스트림 사용자가 패키지가 주장된 소스 저장소에서 유래했음을 암호학적으로 확인할 수 있도록 합니다.</li>
<li><strong>공격자 요구 사항 강화 (Raising attacker requirements):</strong> 디지털 증명은 공격자가 개인 서명 자료(또는 서명 ID)에 접근할 수 있을 만큼 충분히 정교해야 하는 추가적인 정교함 요구 사항을 부과합니다.</li>
<li><strong>인덱스 검증 가능성 (Index verifiability):</strong> 기존에는 인덱스가 릴리스 파일당 선택적인 PGP 서명만 제공했습니다. 인덱스는 서명에 대한 올바른 공개 키를 식별하는 메커니즘이 없었기 때문에 이러한 서명의 형식이나 유효성을 확인하지 못했습니다. 이 PEP는 <code>provenance objects</code>가 인덱스가 증명의 유효성을 검증하는 데 필요한 모든 메타데이터를 포함하도록 하여 이러한 제한을 극복합니다.</li>
</ul>
<p>이 PEP는 <code>Trusted Publishing</code>과 같은 서명 검증을 위한 적절한 ID 소스를 인덱스 제공자가 채택할 것을 기대하며, 서명 생성을 위한 <code>attestation statement</code>를 포함하는 일반적인 증명 형식을 제안합니다.</p>
<h2>설계 고려 사항 (Design Considerations)</h2>
<p>이 PEP는 다음과 같은 설계 고려 사항을 식별합니다.</p>
<ul>
<li><strong>인덱스 접근성 (Index accessibility):</strong> Python 패키지에 대한 디지털 증명은 "분리된" 리소스(detached resources)로서 인덱스 자체에서 직접 검색할 수 있어야 합니다.</li>
<li><strong>인덱스 자체에 의한 검증 (Verification by the index itself):</strong> 설치 클라이언트에 의한 검증을 가능하게 하는 것 외에도, 각 디지털 증명은 인덱스 자체에 의해 어떤 형태로든 검증될 수 있어야 합니다.</li>
<li><strong>일반적인 적용 가능성 (General applicability):</strong> 디지털 증명은 형식(sdist 또는 wheel)이나 내부 내용에 관계없이 인덱스에 업로드된 모든 패키지에 적용할 수 있어야 합니다.</li>
<li><strong>메타데이터 지원 (Metadata support):</strong> 이 PEP는 암호화 엔벨로프 내에 추가 메타데이터가 이상적으로 존재함을 강조하기 위해 단순히 "디지털 서명"이 아닌 "디지털 증명"을 언급합니다.</li>
</ul>
<h2>이전 작업 (Previous Work)</h2>
<ul>
<li><strong>PGP 서명 (PGP signatures):</strong> PyPI는 이전에 PGP 서명을 지원했지만, 2023년 5월 대부분의 서명이 공개 키와 연결될 수 없거나 의미 있게 검증될 수 없다는 조사 결과에 따라 업로드가 비활성화되었습니다.</li>
<li><strong>Wheel 서명 (Wheel signatures):</strong> PEP 427에 지정된 Wheel 형식은 Wheel 내에 직접 임베드된 디지털 서명을 위한 조항을 포함하지만, 광범위하게 사용되지 않았으며 공식 Wheel 툴링은 2018년에 서명 생성 및 검증 지원을 더 이상 사용하지 않도록 했습니다.</li>
</ul>
<p>이전 작업들은 위의 설계 고려 사항을 완전히 충족하지 못했습니다.</p>
<h2>명세 (Specification)</h2>
<h3>업로드 엔드포인트 변경 (Upload endpoint changes)</h3>
<p>현재 업로드 API는 표준화되어 있지 않지만, 다음 변경 사항이 제안됩니다.</p>
<ul>
<li>인덱스는 기존의 <code>content</code> 및 <code>gpg_signature</code> 필드 외에 <code>attestations</code>를 추가 멀티파트 폼 필드로 받아들여야 합니다.</li>
<li><code>attestations</code> 필드는 하나 이상의 개별 증명을 나타내는 JSON 객체인 JSON 배열이어야 합니다.</li>
<li>각 <code>attestation object</code>는 인덱스에 의해 검증 가능해야 합니다.</li>
<li>인덱스가 <code>attestations</code>의 어떤 증명이라도 검증에 실패하면 업로드를 거부해야 합니다.</li>
</ul>
<h3>인덱스 변경 (Index changes)</h3>
<h4>Simple Index</h4>
<p>업로드된 파일에 하나 이상의 증명이 있을 때, 인덱스는 특정 배포와 관련된 증명을 포함하는 <code>provenance file</code>을 제공할 수 있습니다. 이 파일의 형식은 JSON 인코딩된 <code>provenance object</code>이며, <code>data-provenance</code> 속성을 통해 파일의 출처를 나타내는 URL이 포함될 수 있습니다.</p>
<h4>JSON-based Simple API</h4>
<p>업로드된 파일에 하나 이상의 증명이 있을 때, 인덱스는 해당 파일의 파일 딕셔너리에 <code>provenance</code> 키를 포함할 수 있습니다. <code>provenance</code> 키의 값은 JSON 문자열이거나 <code>null</code>이어야 하며, <code>null</code>이 아닌 경우 관련 <code>provenance file</code>에 대한 URL이어야 합니다. 이 변경 사항은 JSON API 버전을 1.3 이상으로 요구합니다.</p>
<h3>Attestation Objects</h3>
<p><code>attestation object</code>는 여러 필수 키를 가진 JSON 객체입니다.</p>
<pre><code class="language-python">@dataclass
class Attestation:
    version: Literal[1] # 증명 객체의 버전, 항상 1
    verification_material: VerificationMaterial # envelope를 검증하는 데 사용되는 암호화 자료
    envelope: Envelope # 봉투화된 증명 statement 및 서명

@dataclass
class Envelope:
    statement: bytes # 증명 statement (in-toto v1 Statement)
    signature: bytes # 위 statement에 대한 서명

@dataclass
class VerificationMaterial:
    certificate: str # 서명 인증서
    transparency_entries: list[object] # 이 증명의 서명 및 인증서에 대한 투명성 로그 엔트리
</code></pre>
<p><code>attestation object</code>는 버전 관리되며, 이 PEP는 버전 1을 지정합니다. 버전 1에서는 X.509 인증서, ECDSA (P-256 곡선), SHA-256 암호화 다이제스트 함수를 사용합니다.</p>
<h3>Attestation Statement 및 서명 생성 (Attestation statement and signature generation)</h3>
<p><code>attestation statement</code>는 <code>attestation object</code> 내에서 암호학적으로 서명되는 실제 클레임입니다. 이는 JSON 형식의 v1 <code>in-toto Statement</code> 객체로 인코딩됩니다. <code>in-toto subject</code>는 단일 subject만 포함해야 하며, <code>subject[0].name</code>은 배포의 파일명이고 <code>subject[0].digest</code>는 SHA-256 다이제스트를 포함해야 합니다.</p>
<h3>Provenance Objects</h3>
<p>인덱스는 업로드된 증명과 이를 검증하는 데 도움이 될 수 있는 메타데이터를 JSON 직렬화된 객체 형태로 제공합니다.</p>
<pre><code class="language-python">@dataclass
class Publisher:
    kind: string # Trusted Publisher의 종류
    claims: object | None # Trusted Publisher 인증 중 인덱스에 의해 유지되는 모든 컨텍스트별 클레임
    _rest: object # 추가 필드

@dataclass
class AttestationBundle:
    publisher: Publisher # 이 증명 세트와 관련된 publisher
    attestations: list[Attestation] # 이 번들에 포함된 증명 세트

@dataclass
class Provenance:
    version: Literal[1] # provenance 객체의 버전, 항상 1
    attestation_bundles: list[AttestationBundle] # 하나 이상의 증명 "번들"
</code></pre>
<p><code>provenance object</code>도 버전 관리되며 이 PEP는 버전 1만 정의합니다. <code>attestation_bundles</code>는 하나 이상의 <code>attestation bundles</code>를 포함하는 필수 JSON 배열입니다.</p>
<h3>Provenance 객체 변경 (Changes to provenance objects)</h3>
<p><code>Provenance object</code>는 불변(immutable)이 아니며 시간이 지남에 따라 변경될 수 있습니다. 예를 들어, 기존 서명 ID에 대한 새 증명 추가 또는 새로운 서명 ID 및 관련 증명 추가 등이 있습니다.</p>
<h3>Attestation 검증 (Attestation verification)</h3>
<p>배포 파일에 대한 <code>attestation object</code>를 검증하려면 다음 각 항목의 검증이 필요합니다.</p>
<ol>
<li><code>version</code>이 1인지 확인.</li>
<li><code>verification_material.certificate</code>가 사전에 신뢰할 수 있는 기관(예: 검증 클라이언트에 이미 존재하는 신뢰의 루트)에서 발급한 유효한 서명 인증서인지 확인.</li>
<li><code>verification_material.certificate</code>가 패키지를 게시한 Trusted Publisher의 머신 ID와 같은 적절한 서명 subject를 식별하는지 확인.</li>
<li><code>envelope.statement</code>가 배포의 파일명 및 내용과 일치하는 <code>subject</code> 및 <code>digest</code>를 가진 유효한 <code>in-toto v1 Statement</code>인지 확인.</li>
<li><code>envelope.signature</code>가 <code>v1 DSSE</code> 서명 프로토콜을 통해 재구성된 <code>verification_material.certificate</code>에 해당하는 <code>envelope.statement</code>에 대한 유효한 서명인지 확인.</li>
</ol>
<p>검증자는 선택적으로 <code>verification_material.transparency_entries</code>를 정책 기반으로 검증할 수 있습니다.</p>
<h2>보안 영향 (Security Implications)</h2>
<ul>
<li><strong>증명 내 암호화 민첩성 (Cryptographic agility in attestations):</strong> 이 PEP는 모든 알고리즘을 단일 스위트(suite)로 지정하고 <code>attestation object</code>를 버전 관리함으로써 알고리즘 민첩성을 제한합니다. 이는 공격자가 약한 해시 함수로 강력한 서명 알고리즘을 선택하여 전체 체계를 손상시키는 것을 방지합니다.</li>
<li><strong>인덱스 신뢰 (Index trust):</strong> 이 PEP는 인덱스 자체에 대한 신뢰를 증가시키거나 감소시키지 않습니다. 인덱스는 여전히 수정되지 않은 패키지 배포를 정직하게 전달할 것으로 효과적으로 신뢰됩니다.</li>
</ul>
<h2>권장 사항 (Recommendations)</h2>
<p>이 PEP는 <code>attestation object</code>에 서명 인증서의 주장된 유효 기간을 확증하는 하나 이상의 검증 가능한 서명 시간 소스를 포함할 것을 권장하지만 의무화하지는 않습니다.</p>
<h2>부록 (Appendix)</h2>
<ul>
<li><strong>Appendix 1: Example Trusted Publisher Representation:</strong> <code>publisher</code> 키의 예시를 제공합니다.</li>
<li><strong>Appendix 2: Data models for Transparency Log Entries:</strong> <code>attestation object</code>의 투명성 로그 엔트리에 대한 의사 코드 데이터 모델을 포함합니다.</li>
<li><strong>Appendix 3: Simple JSON API size considerations:</strong> <code>Simple JSON API</code>에 <code>provenance object</code>의 전체 객체 대신 <code>SHA-256</code> 다이제스트를 임베드하기로 한 기술적 결정에 대한 설명을 제공합니다.</li>
<li><strong>Appendix 4: Example attestation statement:</strong> <code>in-toto Statement</code>의 JSON 객체 예시를 제공합니다.</li>
</ul>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1098,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 740 - Index support for digital attestations"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 13:31:46+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
