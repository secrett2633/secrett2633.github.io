3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-aecaf5ac7a84facf.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","931","static/chunks/app/page-e3ea38185bb36cd2.js"],""]
4:["slug","python/pep/3002","c"]
0:["x02Anhkwgp1He7ftuyAhh",[[["",{"children":[["slug","python/pep/3002","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"3002\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/3002","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/da5e1dc2b9a7c5bb.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T17f0,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-3002/">PEP 3002 - Procedure for Backwards-Incompatible Changes</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Process | <strong>작성일:</strong> 27-Mar-2006</p>
</blockquote>
<h1>PEP 3002 – 하위 호환성을 깨는 변경사항을 위한 절차</h1>
<ul>
<li><strong>작성자:</strong> Steven Bethard</li>
<li><strong>상태:</strong> Final (최종)</li>
<li><strong>유형:</strong> Process (프로세스)</li>
<li><strong>생성일:</strong> 2006년 3월 27일</li>
</ul>
<h2>요약 (Abstract)</h2>
<p>이 PEP는 Python 2.X 시리즈와 Python 3000 (Python 3.x의 초기 명칭) 사이에서 하위 호환성을 깨는 (backwards-incompatible) Python 변경사항에 대한 절차를 설명합니다. 이러한 모든 변경사항은 적절한 Python 3000 PEP에 문서화되어야 하며, Python 2.X 코드 조각이 Python 3000에서 문제가 될 수 있는 경우를 식별할 수 있는 코드를 동반해야 합니다.</p>
<h2>도입 배경 (Rationale)</h2>
<p>Python 3000은 주로 언어를 간소화하고 이전의 일부 설계 실수를 제거하기 위해 Python에 여러 하위 호환성을 깨는 변경사항을 도입할 예정입니다. 그러나 Python 3000은 Python 2.X 시리즈와 완전히 다른 새로운 언어가 될 의도는 아니며, 대부분의 Python 사용자 커뮤니티가 Python 3000이 출시될 때 전환할 것으로 예상됩니다.</p>
<p>이러한 전환을 장려하기 위해서는 Python 2.X 코드를 Python 3000 코드로 업그레이드하는 방법에 대한 명확하고 완전한 가이드를 제공하는 것이 중요합니다. 따라서, 모든 하위 호환성을 깨는 변경사항에 대해 다음 두 가지가 필요합니다.</p>
<ol>
<li>공식 Python Enhancement Proposal (PEP)</li>
<li>Python 3000에서 문제가 될 수 있는 Python 2.X 코드 조각을 식별할 수 있는 코드</li>
</ol>
<h2>Python Enhancement Proposals (PEP)</h2>
<p>모든 하위 호환성을 깨는 변경사항은 PEP를 동반해야 합니다. 이 PEP는 일반적인 PEP 가이드라인을 따라야 하며, 하위 호환성을 깨는 변경사항의 목적과 근거를 설명해야 합니다. 일반적인 PEP 섹션 외에도, 하위 호환성을 깨는 변경사항을 제안하는 모든 PEP는 추가 섹션인 **Compatibility Issues (호환성 문제)**를 포함해야 합니다. 이 섹션은 제안된 Python 변경사항이 무엇 때문에 하위 호환성이 없는지, 그리고 예상되는 주요 문제점(breakage)들을 설명해야 합니다.</p>
<p>PEP는 여전히 개별적으로 평가되어야 하지만, <code>Compatibility Issues</code> 섹션이 다음 중 하나를 시사하는 경우 Python 3000에 부적합할 수 있습니다.</p>
<ul>
<li>Python 2.X 구조의 대부분 또는 모든 인스턴스가 Python 3000에서 올바르지 않고, Python 3000 구조의 대부분 또는 모든 인스턴스가 Python 2.X에서 올바르지 않은 경우.
<ul>
<li>예를 들어, <code>for-loop</code>의 <code>else</code> 절의 의미를 "루프가 중단되지 않았을 때 실행"에서 "루프가 0번 반복되었을 때 실행"으로 변경한다면, 모든 Python 2.X <code>for-loop</code>의 <code>else</code> 절이 오작동하게 될 것입니다. 또한, Python 3000에 적합한 방식으로 <code>for-loop</code>의 <code>else</code> 절을 사용할 방법이 없게 됩니다. 따라서 이러한 아이디어에 대한 PEP는 아마도 거부될 것입니다.</li>
</ul>
</li>
<li>Python 2.X 구조의 많은 인스턴스가 Python 3000에서 올바르지 않지만, 해당 PEP가 변경사항에 대한 실제 사용 사례(real-world use-cases)를 입증하지 못하는 경우.
<ul>
<li>하위 호환성을 깨는 변경사항은 Python 3000에서 허용되지만, 과도해서는 안 됩니다. 하위 호환성을 깨는 변경사항을 제안하는 PEP는 변경사항으로 인해 가시적으로 이점을 얻는 코드의 좋은 예시를 제공해야 합니다.</li>
</ul>
</li>
</ul>
<p>PEP 작성은 시간이 많이 소요되므로, 여러 하위 호환성을 깨는 변경사항이 밀접하게 관련되어 있는 경우 같은 PEP에서 제안되어야 합니다. 이러한 PEP는 모든 제안된 변경사항에서 예상되는 문제점들을 설명해야 하므로, <code>Compatibility Issues</code> 섹션이 더 길어질 수 있습니다.</p>
<h2>문제성 코드 식별 (Identifying Problematic Code)</h2>
<p>PEP 요구사항 외에도, 하위 호환성을 깨는 Python 변경사항은 Python 3000에서 다르게 동작할 Python 2.X 코드 조각에 대해 경고를 발행하는 코드를 동반해야 합니다. 이러한 경고는 새로운 명령줄 스위치인 <code>-3</code>을 사용하여 Python 2.X에서 활성화될 것입니다. 모든 하위 호환성을 깨는 변경사항은 <code>-3</code>이 지정되었을 때 변경되는 각 구조에 대해 경고를 발행하는 Python 2.X용 패치를 동반해야 합니다.</p>
<p>예를 들어, Python 3000에서 <code>dict.keys()</code>가 이터레이터(iterator)를 반환하는 경우, Python 2.X 브랜치에 대한 패치는 다음과 같이 작동해야 합니다.</p>
<ul>
<li><code>-3</code>이 지정되었다면, <code>dict.keys()</code>가 <code>list</code>의 서브클래스(subclass)를 반환하도록 변경하고, <code>__iter__()</code> 메서드 외의 다른 메서드를 사용할 때마다 경고를 발행하도록 합니다.</li>
</ul>
<p>이러한 패치는 Python 3000에 없을 기능이 사용될 때만 경고가 발행되도록 하며, 거의 모든 기존 코드는 계속 작동해야 합니다. (<code>dict.keys()</code>가 항상 <code>list</code>를 반환하고 서브클래스가 아님에 의존하는 코드는 거의 없을 것입니다.)</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 3002 - Procedure for Backwards-Incompatible Changes"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-27 14:12:06+0900","children":"2025년 9월 27일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 27일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
