3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","python/pep/409","c"]
0:["jf5MDuRUbMNVvRN9tv5rq",[[["",{"children":[["slug","python/pep/409","c"],{"children":["__PAGE__?{\"slug\":[\"python\",\"pep\",\"409\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","python/pep/409","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T205b,<blockquote>
<p><strong>원문 링크:</strong> <a href="https://peps.python.org/pep-0409/">PEP 409 - Suppressing exception context</a></p>
<p><strong>상태:</strong> Final | <strong>유형:</strong> Standards Track | <strong>작성일:</strong> 26-Jan-2012</p>
</blockquote>
<p>PEP 409 – 예외 컨텍스트 억제 (Suppressing exception context)</p>
<h2>개요 (Abstract)</h2>
<p>PEP 3134의 미해결 문제 중 하나는 예외 컨텍스트를 억제하는 방법에 대한 것이었습니다. 현재는 이를 수행할 방법이 없으며, 이 PEP는 그 해결책을 제안합니다.</p>
<h2>배경 (Rationale)</h2>
<p>예외는 두 가지 주요 방식으로 발생합니다.</p>
<ol>
<li><strong>Python 자체에서 발생:</strong> 버그가 있는 코드, 리소스 부족, 루프 종료 등.</li>
<li><strong>수동으로 발생:</strong> <code>raise</code> 문을 사용.</li>
</ol>
<p>라이브러리나 커스텀 클래스를 작성할 때 예외를 발생시켜야 할 때가 있습니다. 또한, 하나의 예외를 다른 예외로 변경하는 것이 유용하거나 필요할 수 있습니다. 예를 들어, <code>dbf</code> 모듈에서 다음과 같은 코드를 생각해볼 수 있습니다.</p>
<pre><code class="language-python">try:
    value = int(value)
except Exception:
    raise DbfError(...)
</code></pre>
<p>이 경우 <code>ValueError</code>, <code>TypeError</code> 또는 다른 어떤 원래 예외가 발생했는지는 중요하지 않습니다. 이 시점부터의 예외는 <code>DbfError</code>이며, 원래 예외는 더 이상 의미가 없습니다. 그러나 현재 시스템에서는 이 예외를 출력하면 두 예외가 모두 표시됩니다.</p>
<h2>대안 (Alternatives)</h2>
<p>여러 가지 가능성이 제안되었습니다.</p>
<ul>
<li><code>raise as NewException()</code>
<ul>
<li><code>as</code> 키워드를 재사용하여 혼동을 줄 수 있습니다. 원래 예외를 실제로 다시 발생시키는 것이 아니기 때문입니다.</li>
</ul>
</li>
<li><code>raise NewException() from None</code>
<ul>
<li>기존의 예외 발생 원인을 명시적으로 선언하는 구문을 따릅니다.</li>
</ul>
</li>
<li><code>exc = NewException(); exc.__context__ = None; raise exc</code>
<ul>
<li>이전 방법의 매우 장황한 표현입니다.</li>
</ul>
</li>
<li><code>raise NewException.no_context(...)</code>
<ul>
<li>컨텍스트 억제를 클래스 메서드로 만듭니다.</li>
</ul>
</li>
</ul>
<p>위의 모든 옵션은 코어(core)에 대한 변경을 필요로 합니다.</p>
<h2>제안 (Proposal)</h2>
<p>두 번째 옵션, 즉 <code>raise NewException from None</code>을 제안합니다.</p>
<p>이 방법은 기존의 명시적으로 원인을 설정하는 패턴(<code>raise KeyError() from NameError()</code>)을 활용하면서도, 원인이 <code>None</code>이기 때문에 기본 예외 출력 루틴에서 이전 컨텍스트가 표시되지 않는다는 장점이 있습니다.</p>
<h2>구현 논의 (Implementation Discussion)</h2>
<p><strong>참고:</strong> 이 PEP가 수락된 후, 더 깔끔한 구현 메커니즘이 PEP 415에서 제안되고 수락되었습니다. Python 3.3에서 실제로 사용된 구현에 대한 자세한 내용은 해당 PEP를 참조하세요.</p>
<p>현재 <code>__context__</code>와 <code>__cause__</code> 모두 <code>None</code>이 기본값입니다. <code>raise ... from None</code> (이는 <code>__cause__</code>를 <code>None</code>으로 설정)을 지원하려면 <code>__cause__</code>에 다른 기본값이 필요합니다. 이를 언어 수준에서 구현하기 위한 몇 가지 아이디어가 제시되었습니다.</p>
<ul>
<li><strong>이전 예외 정보를 덮어쓰기:</strong> (이슈를 회피하고 <code>__cause__</code>를 <code>None</code>으로 유지).
<ul>
<li>부실한 오류 메시지로 인해 디버깅을 심각하게 방해할 수 있으므로 거부되었습니다.</li>
</ul>
</li>
<li><strong><code>__cause__</code>에 불리언 값 사용:</strong> <code>False</code>를 기본값으로 하고, <code>from ...</code>이 명시적으로 연결된 예외 또는 <code>None</code>과 함께 사용될 때 대체됩니다.
<ul>
<li>이는 <code>__cause__</code>에 두 가지 다른 객체 유형(하나는 불리언)을 사용하도록 권장하며, 불리언은 가능한 값의 전체 범위를 가질 수 없기(<code>True</code>는 절대 사용되지 않음) 때문에 거부되었습니다.</li>
</ul>
</li>
<li><strong>특별한 예외 클래스 <code>__NoException__</code> 생성:</strong>
<ul>
<li>혼동을 줄 수 있고, 사용자가 실수로 발생시킬 수 있으며, <code>None</code>, <code>True</code>, <code>False</code>와 같은 진정으로 고유한 값이 아니기 때문에 거부되었습니다.</li>
</ul>
</li>
<li><strong>기본값으로 <code>Ellipsis</code> 사용 (<code>...</code> 싱글톤):</strong>
<ul>
<li>채택되었습니다.</li>
<li><code>Ellipsis</code>는 영어에서 단어가 생략될 때 플레이스홀더로 흔히 사용됩니다. 이는 <code>__cause__</code>가 생략되었음을 알리는 신호로 작용하여, 더 자세한 내용은 <code>__context__</code>를 참조하도록 하는 데 도움이 됩니다.</li>
<li><code>Ellipsis</code>는 예외가 아니므로 발생시킬 수 없습니다.</li>
<li><code>Ellipsis</code>는 하나뿐이므로 사용되지 않는 값이 없습니다.</li>
<li>오류 정보가 버려지지 않으므로, 기본 코드가 전체 예외 체인을 따르지 않더라도 커스텀 코드는 추적할 수 있습니다.</li>
</ul>
</li>
</ul>
<h2>언어 세부 사항 (Language Details)</h2>
<p><code>raise Exception from None</code>을 지원하기 위해 <code>__context__</code>는 현재와 같이 유지되지만, <code>__cause__</code>는 <code>Ellipsis</code>로 시작하여 <code>raise Exception from None</code> 메서드가 사용될 때 <code>None</code>으로 변경됩니다.</p>
<p>| 형식 (form)                   | <code>__context__</code>        | <code>__cause__</code>                       |
| :---------------------------- | :------------------- | :-------------------------------- |
| <code>raise</code>                       | <code>None</code>               | <code>Ellipsis</code>                        |
| <code>reraise</code> (이전 예외 다시 발생) | <code>previous exception</code> | <code>Ellipsis</code>                        |
| <code>reraise from None</code>           | <code>previous exception</code> | <code>None</code>                            |
| <code>reraise from ChainedException</code> | <code>previous exception</code> | <code>explicitly chained exception</code>    |</p>
<p>기본 예외 출력 루틴은 다음과 같이 동작합니다.</p>
<ul>
<li><code>__cause__</code>가 <code>Ellipsis</code>인 경우, <code>__context__</code> (있는 경우)가 출력됩니다.</li>
<li><code>__cause__</code>가 <code>None</code>인 경우, <code>__context__</code>는 출력되지 않습니다.</li>
<li><code>__cause__</code>가 다른 어떤 값이라도, <code>__cause__</code>가 출력됩니다.</li>
</ul>
<p>후자의 두 경우 모두 예외 체인 추적이 중단됩니다.</p>
<p><code>__cause__</code>의 기본값이 이제 <code>Ellipsis</code>이고, <code>raise Exception from Cause</code>가 단순히 다음의 syntactic sugar (문법적 설탕) 이기 때문에:</p>
<pre><code class="language-python">_exc = NewException()
_exc.__cause__ = Cause()
raise _exc
</code></pre>
<p><code>Ellipsis</code>는 <code>None</code>과 마찬가지로 원인으로 허용됩니다.</p>
<pre><code class="language-python">raise Exception from Ellipsis
</code></pre>
<h2>패치 (Patches)</h2>
<p>CPython에 이 기능을 구현하는 패치가 Issue 6210에 첨부되어 있습니다.</p>
<h2>참조 (References)</h2>
<p><code>python-dev</code> 스레드에서의 논의 및 개선 사항이 있습니다.</p>
<h2>저작권 (Copyright)</h2>
<p>이 문서는 퍼블릭 도메인에 공개되었습니다.</p>
<blockquote>
<p>⚠️ <strong>알림:</strong> 이 문서는 AI를 활용하여 번역되었으며, 기술적 정확성을 보장하지 않습니다. 정확한 내용은 반드시 원문을 확인하시기 바랍니다.</p>
</blockquote>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Final] PEP 409 - Suppressing exception context"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-09-26 21:30:26+0900","children":"2025년 9월 26일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 9월 26일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Python",{"className":"page__taxonomy-item","children":["#","Python"]}],["$","span","PEP",{"className":"page__taxonomy-item","children":["#","PEP"]}],["$","span","Translation",{"className":"page__taxonomy-item","children":["#","Translation"]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
