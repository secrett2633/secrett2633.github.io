3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-0249a4ed84fdbe73.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-ce60b0a6591d04ed.js"],""]
4:["slug","github-actions/automating-update-github-profile","c"]
0:["e6YNzZ2BVZ8NBZ6boXfWj",[[["",{"children":[["slug","github-actions/automating-update-github-profile","c"],{"children":["__PAGE__?{\"slug\":[\"github-actions\",\"automating-update-github-profile\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","github-actions/automating-update-github-profile","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1bb9,<h2><strong>들어가며</strong></h2>
<p>매일 자주 사용하는 GitHub, 그런데 제 프로필을 확인해보니 마지막으로 업데이트한 게 3년 전이었습니다. 이때부터 기술 스택도 최신화되지 않았고, 제 블로그 포스팅도 깃허브 프로필에 반영되지 않았습니다. 그래서 이번 기회에 프로필을 업데이트하고, 블로그 포스팅도 자동으로 업데이트되도록 만들기로 했습니다.</p>
<p>하지만 매번 수동으로 블로그 포스팅을 추가하는 것은 번거롭기 때문에, 이를 자동화하는 방법을 고민해봤습니다. 그 결과, GitHub Actions를 이용하여 자동으로 블로그 포스팅을 프로필에 반영하는 방법을 구현해보았습니다.</p>
<h2>1. 깃허브 프로필 업데이트 스크립트 작성</h2>
<p>블로그 포스팅을 깃허브 프로필에 자동으로 반영하기 위해, RSS 피드를 활용한 스크립트를 작성했습니다. <strong>RSS</strong>(Really Simple Syndication)는 웹사이트의 콘텐츠를 구독하는 형식으로, 최신 블로그 포스트를 안정적으로 가져올 수 있는 방법입니다.</p>
<h3>블로그 RSS 피드 설정</h3>
<p>저는 제 블로그의 RSS 피드를 이용해 블로그 포스팅을 가져옵니다. 아래는 제 블로그 RSS 피드의 URL입니다.</p>
<pre><code>https://secrett2633.github.io/feed.xml
</code></pre>
<p>이 RSS 피드를 이용해 최신 포스트 5개를 가져오는 Python 스크립트를 작성했습니다. 코드를 살펴보겠습니다.</p>
<h3>Python 스크립트: <code>update_readme.py</code></h3>
<pre><code class="language-python">import feedparser
from datetime import datetime
import os
from pathlib import Path
from email.utils import parsedate_to_datetime

# 상수 정의
BLOG_URL = "https://secrett2633.github.io/feed.xml"
MAX_POSTS = 5
README_PATH = "README.md"
BLOG_SECTION_TITLE = "### Latest Blog Posts"

def get_posts():
    """RSS 피드에서 블로그 포스트를 가져옵니다."""
    feed = feedparser.parse(BLOG_URL)
    return feed.entries[:MAX_POSTS]

def format_date(date_str):
    """RSS 피드의 날짜를 원하는 형식으로 변환합니다."""
    # email.utils의 parsedate_to_datetime을 사용하여 RFC 2822 형식의 날짜를 파싱
    date = parsedate_to_datetime(date_str)
    return date.strftime("%Y.%m.%d")

def build_post_line(post):
    """각 포스트를 마크다운 형식의 문자열로 변환합니다."""
    title = post.title
    date = format_date(post.published)
    link = post.link
    return f"- [{title} ({date})]({link})"

def update_readme():
    """README.md 파일을 최신 블로그 포스트로 업데이트합니다."""
    try:
        # README 파일 읽기
        if os.path.exists(README_PATH):
            with open(README_PATH, "r", encoding="utf-8") as f:
                content = f.read()
        else:
            content = ""

        # 블로그 포스트 섹션 이전 내용 가져오기
        before_posts = content.split(BLOG_SECTION_TITLE)[0].strip()

        # 최신 포스트 가져오기
        posts = get_posts()
        post_lines = [build_post_line(post) for post in posts]
        posts_content = "\n".join(post_lines)

        # 새로운 README 내용 생성
        new_content = f"{before_posts}\n\n{BLOG_SECTION_TITLE}\n{posts_content}"

        # 파일 저장
        with open(README_PATH, "w", encoding="utf-8") as f:
            f.write(new_content)

        print("README.md has been updated successfully!")

    except Exception as e:
        print(f"An error occurred: {str(e)}")
        raise e

if __name__ == "__main__":
    update_readme()
</code></pre>
<h3>스크립트 실행 방법</h3>
<ol>
<li>
<p>Python을 설치하고, <code>feedparser</code> 라이브러리를 설치합니다.</p>
<pre><code>pip install feedparser
</code></pre>
</li>
<li>
<p>위의 코드를 <code>update_readme.py</code> 파일로 저장합니다.</p>
</li>
<li>
<p>터미널에서 아래 명령어로 스크립트를 실행합니다.</p>
<pre><code>python update_readme.py
</code></pre>
</li>
</ol>
<p>스크립트가 성공적으로 실행되면 <code>README.md</code> 파일이 최신 블로그 포스트로 업데이트됩니다.</p>
<h2>2. GitHub Actions 설정</h2>
<p>이제 이 작업을 자동화하기 위해 <strong>GitHub Actions</strong>를 설정합니다. GitHub Actions는 <code>.github/workflows</code> 폴더에 <code>.yml</code> 파일을 생성하여 다양한 작업을 자동화할 수 있습니다.</p>
<h3>GitHub Actions 워크플로우 설정</h3>
<ol>
<li><code>update-readme</code>라는 이름의 GitHub Actions 워크플로우를 설정합니다.</li>
<li>6시간마다 자동으로 실행되도록 설정하며, 수동으로 실행할 수 있는 옵션도 추가합니다.</li>
</ol>
<pre><code class="language-yml">name: Update Blog Posts

on:
  schedule:
    - cron: '0 */6 * * *'  # 6시간마다 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install feedparser
        
    - name: Update README with latest blog posts
      run: python update_readme.py
        
    - name: Commit and push if changed
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git diff --quiet &#x26;&#x26; git diff --staged --quiet || (git add README.md &#x26;&#x26; git commit -m "Update blog posts" &#x26;&#x26; git push)
</code></pre>
<h3>워크플로우 파일 저장</h3>
<p>위의 YAML 파일을 <code>.github/workflows/update-blog-posts.yml</code>로 저장하면 설정이 완료됩니다. 이 파일이 추가되면, GitHub Actions가 자동으로 6시간마다 실행되고, <code>README.md</code>가 최신 블로그 포스트로 업데이트됩니다.</p>
<h2>3. 테스트</h2>
<p>워크플로우가 자동으로 실행되기 전에 수동으로 테스트할 수 있습니다.</p>
<ol>
<li>GitHub 저장소의 "Actions" 탭으로 이동합니다.</li>
<li>"Update Blog Posts" 워크플로우를 선택합니다.</li>
<li>"Run workflow" 버튼을 클릭하여 수동으로 워크플로우를 실행합니다.</li>
</ol>
<h4>권한 문제 해결</h4>
<p>만약 워크플로우 실행 중 권한 문제가 발생하면 아래 사항을 확인하세요:</p>
<ol>
<li>GitHub 저장소의 <strong>Settings</strong> -> <strong>Actions</strong> -> <strong>General</strong>로 이동합니다.</li>
<li><strong>Actions permissions</strong>에서 "Allow all actions and reusable workflows"를 선택합니다.</li>
<li><strong>Workflow permissions</strong>에서 "Read and write permissions"를 선택합니다.</li>
</ol>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1214,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[GitHub Actions] 깃허브 프로필 자동 업데이트하기"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-01-14 23:10:11+0900","children":"2025년 1월 14일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 1월 14일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","GitHub Actions",{"className":"page__taxonomy-item","children":["#",["GitHub Actions"]]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
