3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-1a135130af3e1cae.js","185","static/chunks/app/layout-c3e2e457f12fb6f6.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-90448483657abf9e.js"],""]
4:["slug","devops/docker/fast-build","c"]
0:["8N6icDw00Cy0kKVlExSq2",[[["",{"children":[["slug","devops/docker/fast-build","c"],{"children":["__PAGE__?{\"slug\":[\"devops\",\"docker\",\"fast-build\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","devops/docker/fast-build","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T11f0,<h2>Dockerfile 최적화: 의존성 관리 개선</h2>
<h3>문제점: 매번 라이브러리 재설치</h3>
<p>기존 Dockerfile에서는 별다른 라이브러리 설치 과정 없이 의존성을 관리하고 있었으나, <strong>매번 Docker 이미지 빌드 시마다 라이브러리를 새로 설치</strong>하는 문제가 발생했습니다. 이로 인해 빌드 시간이 길어지고, 이미지를 빌드하는 데 시간이 많이 소요되었죠.</p>
<h3>해결책: <code>poetry</code>로 의존성 관리 최적화</h3>
<p>문제를 해결하기 위해, **<code>poetry</code>**를 사용하여 의존성 관리를 진행하고 있었습니다. 하지만 <code>poetry</code>의 의존성 설치가 매번 반복적으로 실행되는 문제를 해결하기 위해, <code>Dockerfile</code>의 <code>ENV</code> 설정을 변경했습니다. 이 설정을 통해 <strong>라이브러리가 변경되지 않는 한 의존성 설치가 반복되지 않도록</strong> 최적화할 수 있었습니다.</p>
<h3>최적화된 Dockerfile</h3>
<pre><code class="language-Dockerfile"># Python 3.10.11 이미지를 기반으로 빌드 환경을 설정
FROM python:3.10.11 AS builder

# poetry 버전 설정 (기본값: 1.5.1)
ARG POETRY_VERSION=1.5.1

# poetry 설치
RUN python -m pip install --no-cache-dir poetry==${POETRY_VERSION}

# 환경 변수 설정
ENV POETRY_NO_INTERACTION=1 \       # interactive 모드 비활성화
    POETRY_VIRTUALENVS_IN_PROJECT=1 \  # 프로젝트 내 가상 환경 사용
    POETRY_VIRTUALENVS_CREATE=1 \      # 가상 환경 자동 생성
    POETRY_CACHE_DIR=/tmp/poetry_cache \  # poetry 캐시 디렉토리 설정
    PYTHONDONTWRITEBYTECODE=1 \       # Python 바이트 코드 생성을 방지
    PYTHONUNBUFFERED=1               # 버퍼링을 사용하지 않음

# 작업 디렉토리 설정
WORKDIR /workdir

# poetry 의존성 파일 복사 및 의존성 설치
COPY pyproject.toml poetry.lock /workdir/
RUN poetry install --no-root &#x26;&#x26; rm -rf $POETRY_CACHE_DIR  # 의존성 설치 후 캐시 삭제

# 애플리케이션 코드 복사
COPY /app /workdir/app
</code></pre>
<h3>설명</h3>
<ul>
<li>
<p><code>FROM python:3.10.11 AS builder</code>: <strong>Python 3.10.11</strong>을 베이스로 사용하는 빌드 환경을 설정합니다.</p>
</li>
<li>
<p><code>ARG POETRY_VERSION=1.5.1</code>: 사용할 <code>poetry</code> 버전을 명시적으로 설정합니다.</p>
</li>
<li>
<p><code>RUN python -m pip install --no-cache-dir poetry==${POETRY_VERSION}</code>: <code>poetry</code>를 설치하는 명령어입니다. <code>--no-cache-dir</code> 옵션을 사용하여 캐시를 사용하지 않도록 설정하여 이미지를 최적화합니다.</p>
</li>
<li>
<p><code>ENV</code> 설정:</p>
<ul>
<li><code>POETRY_NO_INTERACTION=1</code>: 설치 과정 중 사용자 입력을 요구하지 않도록 합니다.</li>
<li><code>POETRY_VIRTUALENVS_IN_PROJECT=1</code>: 프로젝트 내에 가상 환경을 생성하도록 설정합니다.</li>
<li><code>POETRY_VIRTUALENVS_CREATE=1</code>: 가상 환경을 자동으로 생성하도록 설정합니다.</li>
<li><code>POETRY_CACHE_DIR=/tmp/poetry_cache</code>: <code>poetry</code>의 캐시를 지정한 경로로 설정하여 빌드 후 삭제할 수 있습니다.</li>
<li><code>PYTHONDONTWRITEBYTECODE=1</code>: Python이 <code>.pyc</code> 파일을 생성하지 않도록 설정합니다.</li>
<li><code>PYTHONUNBUFFERED=1</code>: Python의 출력을 버퍼링 없이 바로 표시합니다.</li>
</ul>
</li>
<li>
<p><code>WORKDIR /workdir</code>: 작업 디렉토리를 <code>/workdir</code>로 설정하여 이후의 명령어들이 해당 디렉토리에서 실행되도록 합니다.</p>
</li>
<li>
<p><code>COPY pyproject.toml poetry.lock /workdir/</code>: 의존성 파일인 <code>pyproject.toml</code>과 <code>poetry.lock</code>을 복사합니다.</p>
</li>
<li>
<p><code>RUN poetry install --no-root &#x26;&#x26; rm -rf $POETRY_CACHE_DIR</code>: <code>poetry install</code> 명령어로 의존성을 설치한 후, <code>poetry</code> 캐시를 삭제하여 이미지 크기를 줄입니다.</p>
</li>
<li>
<p><code>COPY /app /workdir/app</code>: 실제 애플리케이션 코드를 복사합니다.</p>
</li>
</ul>
<h3>최적화 효과</h3>
<p>이 설정을 통해, <strong>의존성 파일이 변경되지 않으면 <code>poetry install</code> 명령어가 실행되지 않</strong>습니다. 이는 Docker 이미지 빌드 속도를 크게 향상시키고, 불필요한 의존성 설치를 방지하는 데 효과적입니다.</p>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1318,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Docker] 빠른 빌드 방법"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-02-14 11:30:11+0900","children":"2025년 2월 14일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 2월 15일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Docker",{"className":"page__taxonomy-item","children":["#",["Docker"]]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}]]
1:null
