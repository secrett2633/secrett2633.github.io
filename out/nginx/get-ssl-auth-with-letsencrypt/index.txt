3:I[9275,[],""]
5:I[1343,[],""]
6:I[9157,["231","static/chunks/231-c27e618569e042bc.js","157","static/chunks/157-d79d6340e7770dba.js","185","static/chunks/app/layout-b06e577e11976c7d.js"],"default"]
7:I[231,["231","static/chunks/231-c27e618569e042bc.js","877","static/chunks/app/%5B...slug%5D/page-9d772c571b4668c1.js"],""]
4:["slug","nginx/get-ssl-auth-with-letsencrypt","c"]
0:["jf5MDuRUbMNVvRN9tv5rq",[[["",{"children":[["slug","nginx/get-ssl-auth-with-letsencrypt","c"],{"children":["__PAGE__?{\"slug\":[\"nginx\",\"get-ssl-auth-with-letsencrypt\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","nginx/get-ssl-auth-with-letsencrypt","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_f367f3 layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e975486d410ad4e9.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:T1bc7,<h1><strong>들어가며</strong></h1>
<p>웹사이트의 보안을 강화하려면 SSL 인증서가 필수입니다. SSL 인증서를 설치하면 HTTPS를 통해 사이트와 방문자 간의 데이터가 암호화되어 전송되므로 보안성이 높아집니다. 이 포스팅에서는 무료 SSL 인증서 발급 서비스인 <strong>Let's Encrypt</strong>를 사용하여 Nginx 서버에 SSL 인증서를 발급받고 적용하는 방법을 소개합니다.</p>
<h2>1. 도메인 준비</h2>
<p>SSL 인증서를 발급받기 위해서는 먼저 <strong>도메인</strong>이 필요합니다. 저는 이번 예제에서 <strong>가비아</strong>에서 도메인을 구매했으며, 해당 도메인을 사용하여 인증서를 발급받는 방법을 다룰 것입니다. 만약 다른 도메인 제공업체를 사용하고 있다면, DNS 레코드 설정 부분에서 해당 제공업체의 관리 페이지를 참고하시면 됩니다.</p>
<h2>2. Nginx 설정</h2>
<p>SSL 인증서를 설치하려면 Nginx 서버를 설정해야 합니다. 저는 <strong>Docker Compose</strong>를 사용하여 Nginx와 Certbot을 설치하고 설정합니다. 아래는 <code>docker-compose.yml</code> 파일의 예시입니다.</p>
<pre><code class="language-yaml">version: '3'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf.d:/etc/nginx/conf.d:rw
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    ports:
      - "443:443"
    restart: always
    networks:
      - test-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h &#x26; wait $${!}; done;'"

networks:
  test-network:
    external: true
</code></pre>
<p>이 파일을 사용하면, <strong>Nginx</strong>와 <strong>Certbot</strong>을 각각의 컨테이너로 실행할 수 있습니다. 설정을 완료한 후, 아래의 명령어로 Docker Compose를 실행합니다.</p>
<pre><code class="language-bash">docker compose up -d
</code></pre>
<h2>3. Let's Encrypt 인증서 발급</h2>
<p>Let's Encrypt 인증서를 발급받는 방법에는 여러 가지가 있지만, 저는 <strong>dns-01 인증</strong> 방법을 사용하겠습니다. 이 방법은 도메인의 DNS 레코드에 특정 값을 추가하여 인증서를 발급받는 방식입니다. 아래 절차를 따라 진행해 주세요.</p>
<h3>3.1 컨테이너 접속</h3>
<p>먼저, Certbot 컨테이너에 접속합니다.</p>
<pre><code class="language-bash">docker exec -it nginx-certbot-1 sh
</code></pre>
<h3>3.2 인증서 발급</h3>
<p>이제 아래 명령어를 입력하여 인증서를 발급받습니다.</p>
<pre><code class="language-bash">certbot certonly --manual --preferred-challenges dns -d [인증받을 도메인]
</code></pre>
<p>위 명령어를 실행하면 <code>acme-challenge</code>라는 DNS 레코드를 추가하라는 메시지가 나타납니다. 화면에 출력된 값 그대로 DNS 레코드에 추가해 주세요.</p>
<h3>3.3 DNS 레코드 추가</h3>
<p>도메인 제공업체의 DNS 관리 페이지에서 <strong>TXT 레코드</strong>를 추가해야 합니다. 추가할 값은 Certbot에서 출력한 <code>_acme-challenge.[인증받을 도메인]</code> 형식의 값입니다. DNS 레코드 추가 후, 변경 사항이 전파되기를 기다리면 인증서가 성공적으로 발급됩니다.</p>
<p><img src="/assets/images/posts_img/devops/nginx/gabia-dns.png" alt="가비아 DNS 레코드 추가"></p>
<h2>4. Nginx 설정</h2>
<p>인증서가 발급되면, Nginx에서 이 인증서를 사용할 수 있도록 설정을 해야 합니다. Let's Encrypt 인증서는 다음 경로에 저장됩니다.</p>
<ul>
<li><code>/etc/letsencrypt/live/[인증받을 도메인]/fullchain.pem</code></li>
<li><code>/etc/letsencrypt/live/[인증받을 도메인]/privkey.pem</code></li>
</ul>
<p>Nginx 설정 파일에 이 경로를 사용하여 SSL을 활성화합니다. 아래는 <code>nginx.conf</code> 파일의 예시입니다.</p>
<pre><code class="language-bash"># nginx.conf
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    include /etc/nginx/conf.d/test-backend/*.conf;
}
</code></pre>
<p>그리고 <code>conf.d/test-backend/test-django.conf</code> 파일을 생성하여 프로젝트별 설정을 추가합니다.</p>
<pre><code class="language-bash"># conf.d/test-backend/test-django.conf
server {
    listen 443 ssl;
    server_name [인증받은 도메인];

    include /etc/nginx/conf.d/test-backend/service-url.inc;

    ssl_certificate /etc/letsencrypt/live/[인증받을 도메인]/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/[인증받을 도메인]/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass $service_url;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
</code></pre>
<p>이 설정을 통해, <code>test-backend</code> 폴더 안에 다양한 서버별로 SSL 설정을 할 수 있습니다.</p>
<h2>5. Nginx 적용</h2>
<p>Nginx 설정이 완료되었으면, 설정이 정상적으로 적용되었는지 확인해야 합니다. 아래 명령어로 Nginx 컨테이너에 접속한 후, 설정을 테스트합니다.</p>
<pre><code class="language-bash">docker exec -it nginx-nginx-1 sh
nginx -t
</code></pre>
<p>설정에 문제가 없다면, 아래 명령어로 Nginx를 재시작하여 설정을 적용합니다.</p>
<pre><code class="language-bash">nginx -s reload
</code></pre>
<h2>6. SSL 인증서 적용 확인</h2>
<p>이제 브라우저에서 도메인에 접속해보세요. HTTPS로 접속하면 SSL 인증서가 적용된 것을 확인할 수 있습니다. 만약 인증서가 유효하지 않다면, DNS 레코드 추가나 인증서 발급 과정에서 문제가 있었을 수 있으므로 다시 한 번 확인해 보세요.
또한 포트포워딩을 통해 사용하려는 포트를 열어주어야 합니다.</p>
<hr>
<p>이로써 <strong>Let's Encrypt</strong>를 이용한 <strong>Nginx</strong> SSL 인증서 발급과 적용 방법을 마쳤습니다. SSL을 적용하면 웹사이트의 보안을 강화할 수 있으며, 사용자에게 신뢰감을 줄 수 있습니다. 추가적으로, <strong>Certbot</strong>을 사용하여 SSL 인증서 자동 갱신 설정을 할 수도 있으니 참고해 주세요.</p>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":[["$","aside",null,{"className":"lg:w-64 xl:w-72 order-1 lg:order-none","children":["$","div",null,{"className":"sidebar sticky","children":["$","nav",null,{"className":"space-y-4","children":[["$","div","Backend",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Backend"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Django",{"children":["$","a",null,{"href":"/backend/django/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Django"," (",6,")"]}]}],["$","li","Logging",{"children":["$","a",null,{"href":"/backend/logging/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Logging"," (",1,")"]}]}]]}]]}],["$","div","Python",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"Python"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","PEP",{"children":["$","a",null,{"href":"/python/pep/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["PEP"," (",650,")"]}]}]]}]]}],["$","div","AI/ML",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"AI/ML"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","LLM",{"children":["$","a",null,{"href":"/ai/llm/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["LLM"," (",1,")"]}]}],["$","li","Review",{"children":["$","a",null,{"href":"/ai/review/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Review"," (",1025,")"]}]}]]}]]}],["$","div","DevOps",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"DevOps"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Nginx",{"children":["$","a",null,{"href":"/devops/nginx/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Nginx"," (",1,")"]}]}],["$","li","Docker",{"children":["$","a",null,{"href":"/devops/docker/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Docker"," (",1,")"]}]}],["$","li","SafeLine",{"children":["$","a",null,{"href":"/devops/safeline/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["SafeLine"," (",1,")"]}]}],["$","li","Jenkins",{"children":["$","a",null,{"href":"/devops/jenkins/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Jenkins"," (",3,")"]}]}],["$","li","GitHub Actions",{"children":["$","a",null,{"href":"/devops/github-actions/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["GitHub Actions"," (",1,")"]}]}],["$","li","AWS",{"children":["$","a",null,{"href":"/devops/aws/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["AWS"," (",1,")"]}]}]]}]]}],["$","div","etc",{"children":[["$","h4",null,{"className":"font-medium text-gray-900 mb-2","children":"etc"}],["$","ul",null,{"className":"space-y-1 ml-4","children":[["$","li","Me",{"children":["$","a",null,{"href":"/etc/me/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Me"," (",3,")"]}]}],["$","li","Chrome Extension",{"children":["$","a",null,{"href":"/etc/chrome-extension/","className":"text-sm text-gray-600 hover:text-primary-600 block py-1","children":["Chrome Extension"," (",1,")"]}]}]]}]]}]]}]}]}],["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Nginx] Let's Encrypt로 SSL 인증서 발급받기"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-01-17 23:10:11+0900","children":"2025년 1월 17일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 1월 17일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Nginx",{"className":"page__taxonomy-item","children":["#",["Nginx"]]}]]]}]}]]}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","link","21",{"rel":"icon","href":"/icon.ico?6d9f34d4948640b8","type":"image/x-icon","sizes":"16x16"}],["$","meta","22",{"name":"next-size-adjust"}]]
1:null
