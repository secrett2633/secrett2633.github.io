3:I[9275,[],""]
5:I[1343,[],""]
6:I[4281,["231","static/chunks/231-c4b666723e6aae68.js","185","static/chunks/app/layout-8808afda01b7a1b7.js"],"default"]
7:I[231,["231","static/chunks/231-c4b666723e6aae68.js","877","static/chunks/app/%5B...slug%5D/page-01b66e77b48ed573.js"],""]
4:["slug","backend/django/index","c"]
0:["iV6XySbMHIJ3imQdvgy3I",[[["",{"children":[["slug","backend/django/index","c"],{"children":["__PAGE__?{\"slug\":[\"backend\",\"django\",\"index\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","backend/django/index","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ko","className":"no-js","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon-16x16.png"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#ffc40d"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}],["$","script",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-NE2W3CFPNY"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments);}\n              gtag('js', new Date());\n              gtag('config', 'G-NE2W3CFPNY');\n            "}}]]}],["$","body",null,{"className":"__className_9012cf layout--default","children":["$","div",null,{"className":"min-h-screen bg-gray-50","children":[["$","$L6",null,{}],["$","main",null,{"className":"initial-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gray-50","children":["$","div",null,{"className":"max-w-md w-full bg-white rounded-lg shadow-md p-8 text-center","children":[["$","h1",null,{"className":"text-6xl font-bold text-primary-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-semibold text-gray-900 mb-4","children":"페이지를 찾을 수 없습니다"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다."}],["$","$L7",null,{"href":"/","className":"inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors","children":"홈으로 돌아가기"}]]}]}],"notFoundStyles":[],"styles":null}]}],["$","div",null,{"id":"footer","className":"page__footer","children":["$","footer",null,{"className":"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8","children":["$","div",null,{"className":"text-center text-gray-500 text-sm","children":["$","p",null,{"children":"© 2025 secrett2633. All rights reserved."}]}]}]}]]}]}]]}],null],[["$","div",null,{"className":"flex items-center justify-center min-h-screen","children":["$","div",null,{"className":"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600"}]}],[],[]]],[[["$","link","0",{"rel":"stylesheet","href":"/secrett2633.github.io/_next/static/css/b9d6ec750ad82add.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L8"]]]]]
9:Ta39,<h2>들어가며</h2>
<p>Django에서 <strong>인덱스</strong>를 사용하는 예시를 먼저 살펴보겠습니다. 인덱스는 데이터베이스에서 검색 성능을 향상시키는 중요한 기능입니다. 특히 자주 조회하는 필드에 대해 인덱스를 설정하면, 조회 성능을 크게 개선할 수 있습니다.</p>
<h3>예시 1: 기본 카테고리 모델</h3>
<pre><code class="language-python">class CategoryStatus(StrEnum):
    ACTIVE = "active"
    INACTIVE = "inactive"

class Category(models.Model):
    name = models.CharField(max_length=32)
    status = models.CharField(max_length=7, default=CategoryStatus.INACTIVE)
</code></pre>
<p>위와 같이 <code>Category</code> 모델이 있을 때, 대부분 <code>ACTIVE</code> 상태인 카테고리만 조회하는 상황이 많다면 <strong>인덱스를 사용하는 것을 고려</strong>할 수 있습니다.</p>
<h3>예시 2: 인덱스를 추가한 모델</h3>
<p>Django에서 인덱스를 설정하는 방법은 다음과 같습니다.</p>
<pre><code class="language-python">class Category(models.Model):
    name = models.CharField(max_length=32)
    status = models.CharField(max_length=7, default=CategoryStatus.INACTIVE)

    class Meta:
        indexes = [
            models.Index(fields=["status"])
        ]
</code></pre>
<p>위와 같이 <code>status</code> 필드에 대해 <strong>인덱스를 설정</strong>할 수 있습니다. 이제 데이터베이스는 <code>status</code> 값을 기준으로 데이터를 정렬하여 저장하므로, <strong>Index Scan</strong> 방식으로 데이터를 조회하게 되어 성능이 향상됩니다.</p>
<h3>인덱스 사용의 장단점</h3>
<p><strong>장점:</strong></p>
<ul>
<li>인덱스를 사용하면 조회 성능이 향상됩니다. <code>status</code> 필드를 기준으로 데이터를 빠르게 검색할 수 있습니다.</li>
</ul>
<p><strong>단점:</strong></p>
<ul>
<li>인덱스를 설정하면 데이터의 <strong>삽입, 수정, 삭제</strong> 시에 인덱스가 재구성되어야 하기 때문에, 성능 저하가 발생할 수 있습니다.</li>
<li>따라서 인덱스를 설정하기 전에 <strong>쿼리문</strong>을 충분히 분석하고, 인덱스가 정말 필요한지 고민해야 합니다.</li>
</ul>
<h3>결론</h3>
<p>인덱스는 조회 성능을 개선하는 데 매우 유용하지만, 데이터베이스의 성능에 영향을 미칠 수 있는 만큼 신중하게 설정해야 합니다. 인덱스를 설정하기 전에 자주 실행되는 쿼리들을 분석하고, 성능을 측정하는 것이 중요합니다.</p>
2:["$","div",null,{"className":"flex flex-col lg:flex-row gap-8","children":["$","main",null,{"className":"flex-1","children":["$","article",null,{"className":"page","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"page__title","children":"[Django] index"}],["$","div",null,{"className":"page__meta","children":[["$","time",null,{"dateTime":"2025-02-14 07:30:00+0900","children":"2025년 2월 13일"}],["$","span",null,{"className":"ml-4","children":["수정: ","2025년 2월 13일"]}]]}]]}],["$","div",null,{"className":"page__content","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}],["$","footer",null,{"className":"page__meta mt-8","children":[["$","div",null,{"className":"page__taxonomy mb-4","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"카테고리"}],[["$","span","Django",{"className":"page__taxonomy-item","children":"Django"}]]]}],["$","div",null,{"className":"page__taxonomy","children":[["$","h4",null,{"className":"text-sm font-medium text-gray-900 mb-2","children":"태그"}],[["$","span","Django",{"className":"page__taxonomy-item","children":["#",["Django"]]}]]]}]]}]]}]}]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"secrett2633's blog"}],["$","meta","3",{"name":"description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","4",{"name":"author","content":"secrett2633"}],["$","meta","5",{"name":"keywords","content":"Django, Python, DevOps, AI, ML, 블로그, 기술"}],["$","meta","6",{"name":"creator","content":"secrett2633"}],["$","meta","7",{"name":"publisher","content":"secrett2633"}],["$","meta","8",{"name":"robots","content":"index, follow"}],["$","meta","9",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","10",{"rel":"canonical","href":"https://secrett2633.github.io/"}],["$","meta","11",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","12",{"property":"og:title","content":"secrett2633's blog"}],["$","meta","13",{"property":"og:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","14",{"property":"og:url","content":"https://secrett2633.github.io/"}],["$","meta","15",{"property":"og:site_name","content":"secrett2633's blog"}],["$","meta","16",{"property":"og:locale","content":"ko_KR"}],["$","meta","17",{"property":"og:type","content":"website"}],["$","meta","18",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","19",{"name":"twitter:title","content":"secrett2633's blog"}],["$","meta","20",{"name":"twitter:description","content":"기술 블로그 - Django, Python, DevOps, AI/ML 관련 포스트"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
